//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsSingleLiftObservableOperator")
#ifdef RESTRICT_RxInternalOperatorsSingleLiftObservableOperator
#define INCLUDE_ALL_RxInternalOperatorsSingleLiftObservableOperator 0
#else
#define INCLUDE_ALL_RxInternalOperatorsSingleLiftObservableOperator 1
#endif
#undef RESTRICT_RxInternalOperatorsSingleLiftObservableOperator

#if !defined (RxInternalOperatorsSingleLiftObservableOperator_) && (INCLUDE_ALL_RxInternalOperatorsSingleLiftObservableOperator || defined(INCLUDE_RxInternalOperatorsSingleLiftObservableOperator))
#define RxInternalOperatorsSingleLiftObservableOperator_

#define RESTRICT_RxSingle 1
#define INCLUDE_RxSingle_OnSubscribe 1
#include "RxSingle.h"

@class RxSingleSubscriber;
@class RxSubscriber;
@protocol RxObservable_Operator;

@interface RxInternalOperatorsSingleLiftObservableOperator : NSObject < RxSingle_OnSubscribe > {
 @public
  id<RxSingle_OnSubscribe> source_;
  id<RxObservable_Operator> lift_;
}

#pragma mark Public

- (instancetype)initWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)source
                   withRxObservable_Operator:(id<RxObservable_Operator>)lift;

- (void)callWithId:(RxSingleSubscriber *)t;

+ (RxSingleSubscriber *)wrapWithRxSubscriber:(RxSubscriber *)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleLiftObservableOperator)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleLiftObservableOperator, source_, id<RxSingle_OnSubscribe>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleLiftObservableOperator, lift_, id<RxObservable_Operator>)

FOUNDATION_EXPORT void RxInternalOperatorsSingleLiftObservableOperator_initWithRxSingle_OnSubscribe_withRxObservable_Operator_(RxInternalOperatorsSingleLiftObservableOperator *self, id<RxSingle_OnSubscribe> source, id<RxObservable_Operator> lift);

FOUNDATION_EXPORT RxInternalOperatorsSingleLiftObservableOperator *new_RxInternalOperatorsSingleLiftObservableOperator_initWithRxSingle_OnSubscribe_withRxObservable_Operator_(id<RxSingle_OnSubscribe> source, id<RxObservable_Operator> lift) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsSingleLiftObservableOperator *create_RxInternalOperatorsSingleLiftObservableOperator_initWithRxSingle_OnSubscribe_withRxObservable_Operator_(id<RxSingle_OnSubscribe> source, id<RxObservable_Operator> lift);

FOUNDATION_EXPORT RxSingleSubscriber *RxInternalOperatorsSingleLiftObservableOperator_wrapWithRxSubscriber_(RxSubscriber *subscriber);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleLiftObservableOperator)

#endif

#if !defined (RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle_) && (INCLUDE_ALL_RxInternalOperatorsSingleLiftObservableOperator || defined(INCLUDE_RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle))
#define RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle_

#define RESTRICT_RxSingleSubscriber 1
#define INCLUDE_RxSingleSubscriber 1
#include "RxSingleSubscriber.h"

@class RxSubscriber;

@interface RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle : RxSingleSubscriber {
 @public
  RxSubscriber *actual_;
}

#pragma mark Public

- (void)onErrorWithNSException:(NSException *)error;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithRxSubscriber:(RxSubscriber *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle, actual_, RxSubscriber *)

FOUNDATION_EXPORT void RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle_initWithRxSubscriber_(RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle *self, RxSubscriber *actual);

FOUNDATION_EXPORT RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle *new_RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle_initWithRxSubscriber_(RxSubscriber *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle *create_RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle_initWithRxSubscriber_(RxSubscriber *actual);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleLiftObservableOperator_WrapSubscriberIntoSingle)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsSingleLiftObservableOperator")
