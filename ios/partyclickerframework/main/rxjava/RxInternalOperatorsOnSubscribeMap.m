//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxExceptionsExceptions.h"
#include "RxExceptionsOnErrorThrowable.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOnSubscribeMap.h"
#include "RxObservable.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxProducer.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"

@implementation RxInternalOperatorsOnSubscribeMap

- (instancetype)initWithRxObservable:(RxObservable *)source
                withRxFunctionsFunc1:(id<RxFunctionsFunc1>)transformer {
  RxInternalOperatorsOnSubscribeMap_initWithRxObservable_withRxFunctionsFunc1_(self, source, transformer);
  return self;
}

- (void)callWithId:(RxSubscriber *)o {
  RxInternalOperatorsOnSubscribeMap_MapSubscriber *parent = create_RxInternalOperatorsOnSubscribeMap_MapSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_(o, transformer_);
  [((RxSubscriber *) nil_chk(o)) addWithRxSubscription:parent];
  [((RxObservable *) nil_chk(source_)) unsafeSubscribeWithRxSubscriber:parent];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(transformer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservable:withRxFunctionsFunc1:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxObservable;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "transformer_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;LRxFunctionsFunc1;", "(Lrx/Observable<TT;>;Lrx/functions/Func1<-TT;+TR;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TR;>;)V", "Lrx/Observable<TT;>;", "Lrx/functions/Func1<-TT;+TR;>;", "LRxInternalOperatorsOnSubscribeMap_MapSubscriber;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TR;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeMap = { "OnSubscribeMap", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 7, -1, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeMap;
}

@end

void RxInternalOperatorsOnSubscribeMap_initWithRxObservable_withRxFunctionsFunc1_(RxInternalOperatorsOnSubscribeMap *self, RxObservable *source, id<RxFunctionsFunc1> transformer) {
  NSObject_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->transformer_, transformer);
}

RxInternalOperatorsOnSubscribeMap *new_RxInternalOperatorsOnSubscribeMap_initWithRxObservable_withRxFunctionsFunc1_(RxObservable *source, id<RxFunctionsFunc1> transformer) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeMap, initWithRxObservable_withRxFunctionsFunc1_, source, transformer)
}

RxInternalOperatorsOnSubscribeMap *create_RxInternalOperatorsOnSubscribeMap_initWithRxObservable_withRxFunctionsFunc1_(RxObservable *source, id<RxFunctionsFunc1> transformer) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeMap, initWithRxObservable_withRxFunctionsFunc1_, source, transformer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeMap)

@implementation RxInternalOperatorsOnSubscribeMap_MapSubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)actual
                withRxFunctionsFunc1:(id<RxFunctionsFunc1>)mapper {
  RxInternalOperatorsOnSubscribeMap_MapSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_(self, actual, mapper);
  return self;
}

- (void)onNextWithId:(id)t {
  id result;
  @try {
    result = [((id<RxFunctionsFunc1>) nil_chk(mapper_)) callWithId:t];
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    [self unsubscribe];
    [self onErrorWithNSException:RxExceptionsOnErrorThrowable_addValueAsLastCauseWithNSException_withId_(ex, t)];
    return;
  }
  [((RxSubscriber *) nil_chk(actual_)) onNextWithId:result];
}

- (void)onErrorWithNSException:(NSException *)e {
  if (done_) {
    RxPluginsRxJavaHooks_onErrorWithNSException_(e);
    return;
  }
  done_ = true;
  [((RxSubscriber *) nil_chk(actual_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  if (done_) {
    return;
  }
  [((RxSubscriber *) nil_chk(actual_)) onCompleted];
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  [((RxSubscriber *) nil_chk(actual_)) setProducerWithRxProducer:p];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(mapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:withRxFunctionsFunc1:);
  methods[1].selector = @selector(onNextWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onCompleted);
  methods[4].selector = @selector(setProducerWithRxProducer:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "mapper_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;LRxFunctionsFunc1;", "(Lrx/Subscriber<-TR;>;Lrx/functions/Func1<-TT;+TR;>;)V", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "setProducer", "LRxProducer;", "Lrx/Subscriber<-TR;>;", "Lrx/functions/Func1<-TT;+TR;>;", "LRxInternalOperatorsOnSubscribeMap;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeMap_MapSubscriber = { "MapSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 5, 3, 11, -1, -1, 12, -1 };
  return &_RxInternalOperatorsOnSubscribeMap_MapSubscriber;
}

@end

void RxInternalOperatorsOnSubscribeMap_MapSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_(RxInternalOperatorsOnSubscribeMap_MapSubscriber *self, RxSubscriber *actual, id<RxFunctionsFunc1> mapper) {
  RxSubscriber_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->mapper_, mapper);
}

RxInternalOperatorsOnSubscribeMap_MapSubscriber *new_RxInternalOperatorsOnSubscribeMap_MapSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_(RxSubscriber *actual, id<RxFunctionsFunc1> mapper) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeMap_MapSubscriber, initWithRxSubscriber_withRxFunctionsFunc1_, actual, mapper)
}

RxInternalOperatorsOnSubscribeMap_MapSubscriber *create_RxInternalOperatorsOnSubscribeMap_MapSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_(RxSubscriber *actual, id<RxFunctionsFunc1> mapper) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeMap_MapSubscriber, initWithRxSubscriber_withRxFunctionsFunc1_, actual, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeMap_MapSubscriber)
