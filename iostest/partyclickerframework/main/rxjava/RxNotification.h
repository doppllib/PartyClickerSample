//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxNotification")
#ifdef RESTRICT_RxNotification
#define INCLUDE_ALL_RxNotification 0
#else
#define INCLUDE_ALL_RxNotification 1
#endif
#undef RESTRICT_RxNotification

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (RxNotification_) && (INCLUDE_ALL_RxNotification || defined(INCLUDE_RxNotification))
#define RxNotification_

@class IOSClass;
@class RxNotification_Kind;
@protocol RxObserver;

@interface RxNotification : NSObject

#pragma mark Public

- (void)acceptWithRxObserver:(id<RxObserver>)observer;

+ (RxNotification *)createOnCompleted;

+ (RxNotification *)createOnCompletedWithIOSClass:(IOSClass *)type;

+ (RxNotification *)createOnErrorWithNSException:(NSException *)e;

+ (RxNotification *)createOnNextWithId:(id)t;

- (jboolean)isEqual:(id)obj;

- (RxNotification_Kind *)getKind;

- (NSException *)getThrowable;

- (id)getValue;

- (NSUInteger)hash;

- (jboolean)hasThrowable;

- (jboolean)hasValue;

- (jboolean)isOnCompleted;

- (jboolean)isOnError;

- (jboolean)isOnNext;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(RxNotification)

FOUNDATION_EXPORT RxNotification *RxNotification_createOnNextWithId_(id t);

FOUNDATION_EXPORT RxNotification *RxNotification_createOnErrorWithNSException_(NSException *e);

FOUNDATION_EXPORT RxNotification *RxNotification_createOnCompleted();

FOUNDATION_EXPORT RxNotification *RxNotification_createOnCompletedWithIOSClass_(IOSClass *type);

J2OBJC_TYPE_LITERAL_HEADER(RxNotification)

#endif

#if !defined (RxNotification_Kind_) && (INCLUDE_ALL_RxNotification || defined(INCLUDE_RxNotification_Kind))
#define RxNotification_Kind_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, RxNotification_Kind_Enum) {
  RxNotification_Kind_Enum_OnNext = 0,
  RxNotification_Kind_Enum_OnError = 1,
  RxNotification_Kind_Enum_OnCompleted = 2,
};

@interface RxNotification_Kind : JavaLangEnum < NSCopying >

#pragma mark Public

+ (RxNotification_Kind *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(RxNotification_Kind)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT RxNotification_Kind *RxNotification_Kind_values_[];

inline RxNotification_Kind *RxNotification_Kind_get_OnNext();
J2OBJC_ENUM_CONSTANT(RxNotification_Kind, OnNext)

inline RxNotification_Kind *RxNotification_Kind_get_OnError();
J2OBJC_ENUM_CONSTANT(RxNotification_Kind, OnError)

inline RxNotification_Kind *RxNotification_Kind_get_OnCompleted();
J2OBJC_ENUM_CONSTANT(RxNotification_Kind, OnCompleted)

FOUNDATION_EXPORT IOSObjectArray *RxNotification_Kind_values();

FOUNDATION_EXPORT RxNotification_Kind *RxNotification_Kind_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT RxNotification_Kind *RxNotification_Kind_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(RxNotification_Kind)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_RxNotification")
