//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxDopplSafeObservableUnsubscribe")
#ifdef RESTRICT_RxDopplSafeObservableUnsubscribe
#define INCLUDE_ALL_RxDopplSafeObservableUnsubscribe 0
#else
#define INCLUDE_ALL_RxDopplSafeObservableUnsubscribe 1
#endif
#undef RESTRICT_RxDopplSafeObservableUnsubscribe

#if !defined (RxDopplSafeObservableUnsubscribe_) && (INCLUDE_ALL_RxDopplSafeObservableUnsubscribe || defined(INCLUDE_RxDopplSafeObservableUnsubscribe))
#define RxDopplSafeObservableUnsubscribe_

@class JavaLangRefWeakReference;
@class RxObservable;
@class RxSubscriber;

@interface RxDopplSafeObservableUnsubscribe : NSObject {
 @public
  JavaLangRefWeakReference *observableWeakReference_;
  RxObservable *hardRef_;
}

#pragma mark Public

- (instancetype)initWithRxObservable:(RxObservable *)observable;

- (void)unsafeSubscribeWithRxSubscriber:(RxSubscriber *)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(RxDopplSafeObservableUnsubscribe)

J2OBJC_FIELD_SETTER(RxDopplSafeObservableUnsubscribe, observableWeakReference_, JavaLangRefWeakReference *)
J2OBJC_FIELD_SETTER(RxDopplSafeObservableUnsubscribe, hardRef_, RxObservable *)

FOUNDATION_EXPORT void RxDopplSafeObservableUnsubscribe_initWithRxObservable_(RxDopplSafeObservableUnsubscribe *self, RxObservable *observable);

FOUNDATION_EXPORT RxDopplSafeObservableUnsubscribe *new_RxDopplSafeObservableUnsubscribe_initWithRxObservable_(RxObservable *observable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxDopplSafeObservableUnsubscribe *create_RxDopplSafeObservableUnsubscribe_initWithRxObservable_(RxObservable *observable);

J2OBJC_TYPE_LITERAL_HEADER(RxDopplSafeObservableUnsubscribe)

#endif

#pragma pop_macro("INCLUDE_ALL_RxDopplSafeObservableUnsubscribe")
