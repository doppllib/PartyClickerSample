//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalProducersProducerObserverArbiter")
#ifdef RESTRICT_RxInternalProducersProducerObserverArbiter
#define INCLUDE_ALL_RxInternalProducersProducerObserverArbiter 0
#else
#define INCLUDE_ALL_RxInternalProducersProducerObserverArbiter 1
#endif
#undef RESTRICT_RxInternalProducersProducerObserverArbiter

#if !defined (RxInternalProducersProducerObserverArbiter_) && (INCLUDE_ALL_RxInternalProducersProducerObserverArbiter || defined(INCLUDE_RxInternalProducersProducerObserverArbiter))
#define RxInternalProducersProducerObserverArbiter_

#define RESTRICT_RxProducer 1
#define INCLUDE_RxProducer 1
#include "RxProducer.h"

#define RESTRICT_RxObserver 1
#define INCLUDE_RxObserver 1
#include "RxObserver.h"

@class RxSubscriber;
@protocol JavaUtilList;

@interface RxInternalProducersProducerObserverArbiter : NSObject < RxProducer, RxObserver > {
 @public
  __unsafe_unretained RxSubscriber *child_;
  jboolean emitting_;
  id<JavaUtilList> queue_;
  id<RxProducer> currentProducer_;
  jlong requested_;
  jlong missedRequested_;
  id<RxProducer> missedProducer_;
  id missedTerminal_;
  volatile_jboolean hasError_;
}

#pragma mark Public

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (void)requestWithLong:(jlong)n;

- (void)setProducerWithRxProducer:(id<RxProducer>)p;

#pragma mark Package-Private

- (void)emitLoop;

@end

J2OBJC_STATIC_INIT(RxInternalProducersProducerObserverArbiter)

J2OBJC_FIELD_SETTER(RxInternalProducersProducerObserverArbiter, queue_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(RxInternalProducersProducerObserverArbiter, currentProducer_, id<RxProducer>)
J2OBJC_FIELD_SETTER(RxInternalProducersProducerObserverArbiter, missedProducer_, id<RxProducer>)
J2OBJC_FIELD_SETTER(RxInternalProducersProducerObserverArbiter, missedTerminal_, id)

inline id<RxProducer> RxInternalProducersProducerObserverArbiter_get_NULL_PRODUCER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<RxProducer> RxInternalProducersProducerObserverArbiter_NULL_PRODUCER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalProducersProducerObserverArbiter, NULL_PRODUCER, id<RxProducer>)

FOUNDATION_EXPORT void RxInternalProducersProducerObserverArbiter_initWithRxSubscriber_(RxInternalProducersProducerObserverArbiter *self, RxSubscriber *child);

FOUNDATION_EXPORT RxInternalProducersProducerObserverArbiter *new_RxInternalProducersProducerObserverArbiter_initWithRxSubscriber_(RxSubscriber *child) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalProducersProducerObserverArbiter *create_RxInternalProducersProducerObserverArbiter_initWithRxSubscriber_(RxSubscriber *child);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalProducersProducerObserverArbiter)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalProducersProducerObserverArbiter")
