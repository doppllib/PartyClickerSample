//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithSelector")
#ifdef RESTRICT_RxInternalOperatorsOperatorDebounceWithSelector
#define INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithSelector 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithSelector 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorDebounceWithSelector

#if !defined (RxInternalOperatorsOperatorDebounceWithSelector_) && (INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithSelector || defined(INCLUDE_RxInternalOperatorsOperatorDebounceWithSelector))
#define RxInternalOperatorsOperatorDebounceWithSelector_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "RxObservable.h"

@class RxSubscriber;
@protocol RxFunctionsFunc1;

@interface RxInternalOperatorsOperatorDebounceWithSelector : NSObject < RxObservable_Operator > {
 @public
  id<RxFunctionsFunc1> selector_;
}

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDebounceWithSelector)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDebounceWithSelector, selector_, id<RxFunctionsFunc1>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorDebounceWithSelector_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorDebounceWithSelector *self, id<RxFunctionsFunc1> selector);

FOUNDATION_EXPORT RxInternalOperatorsOperatorDebounceWithSelector *new_RxInternalOperatorsOperatorDebounceWithSelector_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> selector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorDebounceWithSelector *create_RxInternalOperatorsOperatorDebounceWithSelector_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> selector);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorDebounceWithSelector)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithSelector")
