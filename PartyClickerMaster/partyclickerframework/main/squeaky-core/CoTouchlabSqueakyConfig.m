//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/core/src/main/java/co/touchlab/squeaky/Config.java
//

#include "CoTouchlabSqueakyConfig.h"
#include "J2ObjC_source.h"

@implementation CoTouchlabSqueakyConfig

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyConfig_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_AUTO_REFRESH", "I", .constantValue.asInt = CoTouchlabSqueakyConfig_MAX_AUTO_REFRESH, 0x19, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyConfig = { "Config", "co.touchlab.squeaky", NULL, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, -1, -1 };
  return &_CoTouchlabSqueakyConfig;
}

@end

void CoTouchlabSqueakyConfig_init(CoTouchlabSqueakyConfig *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyConfig *new_CoTouchlabSqueakyConfig_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyConfig, init)
}

CoTouchlabSqueakyConfig *create_CoTouchlabSqueakyConfig_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyConfig, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyConfig)
