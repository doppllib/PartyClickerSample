//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxSingle")
#ifdef RESTRICT_RxSingle
#define INCLUDE_ALL_RxSingle 0
#else
#define INCLUDE_ALL_RxSingle 1
#endif
#undef RESTRICT_RxSingle

#if !defined (RxSingle_) && (INCLUDE_ALL_RxSingle || defined(INCLUDE_RxSingle))
#define RxSingle_

@class IOSObjectArray;
@class JavaUtilConcurrentTimeUnit;
@class RxCompletable;
@class RxObservable;
@class RxScheduler;
@class RxSingleSubscriber;
@class RxSinglesBlockingSingle;
@class RxSubscriber;
@protocol JavaLangIterable;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentFuture;
@protocol RxFunctionsAction0;
@protocol RxFunctionsAction1;
@protocol RxFunctionsFunc0;
@protocol RxFunctionsFunc1;
@protocol RxFunctionsFunc2;
@protocol RxFunctionsFunc3;
@protocol RxFunctionsFunc4;
@protocol RxFunctionsFunc5;
@protocol RxFunctionsFunc6;
@protocol RxFunctionsFunc7;
@protocol RxFunctionsFunc8;
@protocol RxFunctionsFunc9;
@protocol RxFunctionsFuncN;
@protocol RxObservable_OnSubscribe;
@protocol RxObservable_Operator;
@protocol RxObserver;
@protocol RxSingle_OnSubscribe;
@protocol RxSingle_Transformer;
@protocol RxSubscription;

@interface RxSingle : NSObject {
 @public
  id<RxSingle_OnSubscribe> onSubscribe_;
}

#pragma mark Public

- (RxSingle *)composeWithRxSingle_Transformer:(id<RxSingle_Transformer>)transformer;

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2;

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3;

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4;

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4
                        withRxSingle:(RxSingle *)t5;

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4
                        withRxSingle:(RxSingle *)t5
                        withRxSingle:(RxSingle *)t6;

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4
                        withRxSingle:(RxSingle *)t5
                        withRxSingle:(RxSingle *)t6
                        withRxSingle:(RxSingle *)t7;

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4
                        withRxSingle:(RxSingle *)t5
                        withRxSingle:(RxSingle *)t6
                        withRxSingle:(RxSingle *)t7
                        withRxSingle:(RxSingle *)t8;

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4
                        withRxSingle:(RxSingle *)t5
                        withRxSingle:(RxSingle *)t6
                        withRxSingle:(RxSingle *)t7
                        withRxSingle:(RxSingle *)t8
                        withRxSingle:(RxSingle *)t9;

- (RxObservable *)concatWithWithRxSingle:(RxSingle *)t1;

+ (RxSingle *)createWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)f;

+ (RxSingle *)deferWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)singleFactory;

- (RxSingle *)delayWithLong:(jlong)delay
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (RxSingle *)delayWithLong:(jlong)delay
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
            withRxScheduler:(RxScheduler *)scheduler;

- (RxSingle *)delaySubscriptionWithRxObservable:(RxObservable *)other;

- (RxSingle *)doAfterTerminateWithRxFunctionsAction0:(id<RxFunctionsAction0>)action;

- (RxSingle *)doOnEachWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNotification;

- (RxSingle *)doOnErrorWithRxFunctionsAction1:(id<RxFunctionsAction1>)onError;

- (RxSingle *)doOnSubscribeWithRxFunctionsAction0:(id<RxFunctionsAction0>)subscribe;

- (RxSingle *)doOnSuccessWithRxFunctionsAction1:(id<RxFunctionsAction1>)onSuccess;

- (RxSingle *)doOnUnsubscribeWithRxFunctionsAction0:(id<RxFunctionsAction0>)action;

+ (RxSingle *)errorWithNSException:(NSException *)exception;

- (RxSingle *)flatMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func;

- (RxCompletable *)flatMapCompletableWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func;

- (RxObservable *)flatMapObservableWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func;

+ (RxSingle *)fromWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future;

+ (RxSingle *)fromWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                      withLong:(jlong)timeout
                withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

+ (RxSingle *)fromWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                               withRxScheduler:(RxScheduler *)scheduler;

+ (RxSingle *)fromCallableWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)func;

+ (RxSingle *)justWithId:(id)value;

- (RxSingle *)liftWithRxObservable_Operator:(id<RxObservable_Operator>)lift;

- (RxSingle *)mapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func;

+ (RxSingle *)mergeWithRxSingle:(RxSingle *)source;

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2;

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3;

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4;

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4
                       withRxSingle:(RxSingle *)t5;

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4
                       withRxSingle:(RxSingle *)t5
                       withRxSingle:(RxSingle *)t6;

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4
                       withRxSingle:(RxSingle *)t5
                       withRxSingle:(RxSingle *)t6
                       withRxSingle:(RxSingle *)t7;

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4
                       withRxSingle:(RxSingle *)t5
                       withRxSingle:(RxSingle *)t6
                       withRxSingle:(RxSingle *)t7
                       withRxSingle:(RxSingle *)t8;

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4
                       withRxSingle:(RxSingle *)t5
                       withRxSingle:(RxSingle *)t6
                       withRxSingle:(RxSingle *)t7
                       withRxSingle:(RxSingle *)t8
                       withRxSingle:(RxSingle *)t9;

- (RxObservable *)mergeWithWithRxSingle:(RxSingle *)t1;

- (RxSingle *)observeOnWithRxScheduler:(RxScheduler *)scheduler;

- (RxSingle *)onErrorResumeNextWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunctionInCaseOfError;

- (RxSingle *)onErrorResumeNextWithRxSingle:(RxSingle *)resumeSingleInCaseOfError;

- (RxSingle *)onErrorReturnWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunction;

- (RxSingle *)retry;

- (RxSingle *)retryWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)predicate;

- (RxSingle *)retryWithLong:(jlong)count;

- (RxSingle *)retryWhenWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler;

- (id<RxSubscription>)subscribe;

- (id<RxSubscription>)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onSuccess;

- (id<RxSubscription>)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onSuccess
                               withRxFunctionsAction1:(id<RxFunctionsAction1>)onError;

- (id<RxSubscription>)subscribeWithRxObserver:(id<RxObserver>)observer;

- (id<RxSubscription>)subscribeWithRxSingleSubscriber:(RxSingleSubscriber *)te;

- (id<RxSubscription>)subscribeWithRxSubscriber:(RxSubscriber *)subscriber;

- (RxSingle *)subscribeOnWithRxScheduler:(RxScheduler *)scheduler;

- (RxSingle *)takeUntilWithRxCompletable:(RxCompletable *)other;

- (RxSingle *)takeUntilWithRxObservable:(RxObservable *)other;

- (RxSingle *)takeUntilWithRxSingle:(RxSingle *)other;

- (RxSingle *)timeoutWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit;

- (RxSingle *)timeoutWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
              withRxScheduler:(RxScheduler *)scheduler;

- (RxSingle *)timeoutWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
                 withRxSingle:(RxSingle *)other;

- (RxSingle *)timeoutWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
                 withRxSingle:(RxSingle *)other
              withRxScheduler:(RxScheduler *)scheduler;

- (id)toWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)converter;

- (RxSinglesBlockingSingle *)toBlocking;

- (RxCompletable *)toCompletable;

- (RxObservable *)toObservable;

- (id<RxSubscription>)unsafeSubscribeWithRxSubscriber:(RxSubscriber *)subscriber;

+ (RxSingle *)using__WithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFactory
                     withRxFunctionsFunc1:(id<RxFunctionsFunc1>)singleFactory
                   withRxFunctionsAction1:(id<RxFunctionsAction1>)disposeAction;

+ (RxSingle *)using__WithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFactory
                     withRxFunctionsFunc1:(id<RxFunctionsFunc1>)singleFactory
                   withRxFunctionsAction1:(id<RxFunctionsAction1>)disposeAction
                              withBoolean:(jboolean)disposeEagerly;

+ (RxSingle *)zipWithJavaLangIterable:(id<JavaLangIterable>)singles
                 withRxFunctionsFuncN:(id<RxFunctionsFuncN>)zipFunction;

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
         withRxFunctionsFunc2:(id<RxFunctionsFunc2>)zipFunction;

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
         withRxFunctionsFunc3:(id<RxFunctionsFunc3>)zipFunction;

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
         withRxFunctionsFunc4:(id<RxFunctionsFunc4>)zipFunction;

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
                 withRxSingle:(RxSingle *)s5
         withRxFunctionsFunc5:(id<RxFunctionsFunc5>)zipFunction;

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
                 withRxSingle:(RxSingle *)s5
                 withRxSingle:(RxSingle *)s6
         withRxFunctionsFunc6:(id<RxFunctionsFunc6>)zipFunction;

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
                 withRxSingle:(RxSingle *)s5
                 withRxSingle:(RxSingle *)s6
                 withRxSingle:(RxSingle *)s7
         withRxFunctionsFunc7:(id<RxFunctionsFunc7>)zipFunction;

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
                 withRxSingle:(RxSingle *)s5
                 withRxSingle:(RxSingle *)s6
                 withRxSingle:(RxSingle *)s7
                 withRxSingle:(RxSingle *)s8
         withRxFunctionsFunc8:(id<RxFunctionsFunc8>)zipFunction;

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
                 withRxSingle:(RxSingle *)s5
                 withRxSingle:(RxSingle *)s6
                 withRxSingle:(RxSingle *)s7
                 withRxSingle:(RxSingle *)s8
                 withRxSingle:(RxSingle *)s9
         withRxFunctionsFunc9:(id<RxFunctionsFunc9>)zipFunction;

- (RxSingle *)zipWithWithRxSingle:(RxSingle *)other
             withRxFunctionsFunc2:(id<RxFunctionsFunc2>)zipFunction;

#pragma mark Protected

- (instancetype)initWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)f;

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)f;

#pragma mark Package-Private

+ (IOSObjectArray *)iterableToArrayWithJavaLangIterable:(id<JavaLangIterable>)singlesIterable;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle)

J2OBJC_FIELD_SETTER(RxSingle, onSubscribe_, id<RxSingle_OnSubscribe>)

FOUNDATION_EXPORT void RxSingle_initWithRxSingle_OnSubscribe_(RxSingle *self, id<RxSingle_OnSubscribe> f);

FOUNDATION_EXPORT RxSingle *new_RxSingle_initWithRxSingle_OnSubscribe_(id<RxSingle_OnSubscribe> f) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSingle *create_RxSingle_initWithRxSingle_OnSubscribe_(id<RxSingle_OnSubscribe> f);

FOUNDATION_EXPORT void RxSingle_initWithRxObservable_OnSubscribe_(RxSingle *self, id<RxObservable_OnSubscribe> f);

FOUNDATION_EXPORT RxSingle *new_RxSingle_initWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> f) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSingle *create_RxSingle_initWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> f);

FOUNDATION_EXPORT RxSingle *RxSingle_createWithRxSingle_OnSubscribe_(id<RxSingle_OnSubscribe> f);

FOUNDATION_EXPORT RxObservable *RxSingle_concatWithRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2);

FOUNDATION_EXPORT RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3);

FOUNDATION_EXPORT RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4);

FOUNDATION_EXPORT RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5);

FOUNDATION_EXPORT RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6);

FOUNDATION_EXPORT RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7);

FOUNDATION_EXPORT RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7, RxSingle *t8);

FOUNDATION_EXPORT RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7, RxSingle *t8, RxSingle *t9);

FOUNDATION_EXPORT RxSingle *RxSingle_errorWithNSException_(NSException *exception);

FOUNDATION_EXPORT RxSingle *RxSingle_fromWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future);

FOUNDATION_EXPORT RxSingle *RxSingle_fromWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(id<JavaUtilConcurrentFuture> future, jlong timeout, JavaUtilConcurrentTimeUnit *unit);

FOUNDATION_EXPORT RxSingle *RxSingle_fromWithJavaUtilConcurrentFuture_withRxScheduler_(id<JavaUtilConcurrentFuture> future, RxScheduler *scheduler);

FOUNDATION_EXPORT RxSingle *RxSingle_fromCallableWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> func);

FOUNDATION_EXPORT RxSingle *RxSingle_justWithId_(id value);

FOUNDATION_EXPORT RxSingle *RxSingle_mergeWithRxSingle_(RxSingle *source);

FOUNDATION_EXPORT RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2);

FOUNDATION_EXPORT RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3);

FOUNDATION_EXPORT RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4);

FOUNDATION_EXPORT RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5);

FOUNDATION_EXPORT RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6);

FOUNDATION_EXPORT RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7);

FOUNDATION_EXPORT RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7, RxSingle *t8);

FOUNDATION_EXPORT RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7, RxSingle *t8, RxSingle *t9);

FOUNDATION_EXPORT RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxFunctionsFunc2_(RxSingle *s1, RxSingle *s2, id<RxFunctionsFunc2> zipFunction);

FOUNDATION_EXPORT RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc3_(RxSingle *s1, RxSingle *s2, RxSingle *s3, id<RxFunctionsFunc3> zipFunction);

FOUNDATION_EXPORT RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc4_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, id<RxFunctionsFunc4> zipFunction);

FOUNDATION_EXPORT RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc5_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, RxSingle *s5, id<RxFunctionsFunc5> zipFunction);

FOUNDATION_EXPORT RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc6_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, RxSingle *s5, RxSingle *s6, id<RxFunctionsFunc6> zipFunction);

FOUNDATION_EXPORT RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc7_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, RxSingle *s5, RxSingle *s6, RxSingle *s7, id<RxFunctionsFunc7> zipFunction);

FOUNDATION_EXPORT RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc8_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, RxSingle *s5, RxSingle *s6, RxSingle *s7, RxSingle *s8, id<RxFunctionsFunc8> zipFunction);

FOUNDATION_EXPORT RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc9_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, RxSingle *s5, RxSingle *s6, RxSingle *s7, RxSingle *s8, RxSingle *s9, id<RxFunctionsFunc9> zipFunction);

FOUNDATION_EXPORT RxSingle *RxSingle_zipWithJavaLangIterable_withRxFunctionsFuncN_(id<JavaLangIterable> singles, id<RxFunctionsFuncN> zipFunction);

FOUNDATION_EXPORT RxSingle *RxSingle_deferWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> singleFactory);

FOUNDATION_EXPORT IOSObjectArray *RxSingle_iterableToArrayWithJavaLangIterable_(id<JavaLangIterable> singlesIterable);

FOUNDATION_EXPORT RxSingle *RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> singleFactory, id<RxFunctionsAction1> disposeAction);

FOUNDATION_EXPORT RxSingle *RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> singleFactory, id<RxFunctionsAction1> disposeAction, jboolean disposeEagerly);

J2OBJC_TYPE_LITERAL_HEADER(RxSingle)

#endif

#if !defined (RxSingle_OnSubscribe_) && (INCLUDE_ALL_RxSingle || defined(INCLUDE_RxSingle_OnSubscribe))
#define RxSingle_OnSubscribe_

#define RESTRICT_RxFunctionsAction1 1
#define INCLUDE_RxFunctionsAction1 1
#include "RxFunctionsAction1.h"

@protocol RxSingle_OnSubscribe < RxFunctionsAction1, JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_OnSubscribe)

J2OBJC_TYPE_LITERAL_HEADER(RxSingle_OnSubscribe)

#endif

#if !defined (RxSingle_Transformer_) && (INCLUDE_ALL_RxSingle || defined(INCLUDE_RxSingle_Transformer))
#define RxSingle_Transformer_

#define RESTRICT_RxFunctionsFunc1 1
#define INCLUDE_RxFunctionsFunc1 1
#include "RxFunctionsFunc1.h"

@class RxSingle;

@protocol RxSingle_Transformer < RxFunctionsFunc1, JavaObject >

- (RxSingle *)callWithId:(RxSingle *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_Transformer)

J2OBJC_TYPE_LITERAL_HEADER(RxSingle_Transformer)

#endif

#pragma pop_macro("INCLUDE_ALL_RxSingle")
