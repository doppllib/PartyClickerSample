//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "RxExceptionsExceptions.h"
#include "RxExceptionsOnErrorThrowable.h"
#include "RxInternalOperatorsOperatorCast.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxProducer.h"
#include "RxSubscriber.h"

@implementation RxInternalOperatorsOperatorCast

- (instancetype)initWithIOSClass:(IOSClass *)castClass {
  RxInternalOperatorsOperatorCast_initWithIOSClass_(self, castClass);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)o {
  RxInternalOperatorsOperatorCast_CastSubscriber *parent = create_RxInternalOperatorsOperatorCast_CastSubscriber_initWithRxSubscriber_withIOSClass_(o, castClass_);
  [((RxSubscriber *) nil_chk(o)) addWithRxSubscription:parent];
  return parent;
}

- (void)dealloc {
  RELEASE_(castClass_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxSubscriber;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "castClass_", "LIOSClass;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<TR;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TR;>;)Lrx/Subscriber<-TT;>;", "Ljava/lang/Class<TR;>;", "LRxInternalOperatorsOperatorCast_CastSubscriber;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TR;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorCast = { "OperatorCast", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, 6, -1, 7, -1 };
  return &_RxInternalOperatorsOperatorCast;
}

@end

void RxInternalOperatorsOperatorCast_initWithIOSClass_(RxInternalOperatorsOperatorCast *self, IOSClass *castClass) {
  NSObject_init(self);
  JreStrongAssign(&self->castClass_, castClass);
}

RxInternalOperatorsOperatorCast *new_RxInternalOperatorsOperatorCast_initWithIOSClass_(IOSClass *castClass) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorCast, initWithIOSClass_, castClass)
}

RxInternalOperatorsOperatorCast *create_RxInternalOperatorsOperatorCast_initWithIOSClass_(IOSClass *castClass) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorCast, initWithIOSClass_, castClass)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorCast)

@implementation RxInternalOperatorsOperatorCast_CastSubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)actual
                        withIOSClass:(IOSClass *)castClass {
  RxInternalOperatorsOperatorCast_CastSubscriber_initWithRxSubscriber_withIOSClass_(self, actual, castClass);
  return self;
}

- (void)onNextWithId:(id)t {
  id result;
  @try {
    result = [((IOSClass *) nil_chk(castClass_)) cast:t];
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    [self unsubscribe];
    [self onErrorWithNSException:RxExceptionsOnErrorThrowable_addValueAsLastCauseWithNSException_withId_(ex, t)];
    return;
  }
  [((RxSubscriber *) nil_chk(actual_)) onNextWithId:result];
}

- (void)onErrorWithNSException:(NSException *)e {
  if (done_) {
    RxPluginsRxJavaHooks_onErrorWithNSException_(e);
    return;
  }
  done_ = true;
  [((RxSubscriber *) nil_chk(actual_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  if (done_) {
    return;
  }
  [((RxSubscriber *) nil_chk(actual_)) onCompleted];
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  [((RxSubscriber *) nil_chk(actual_)) setProducerWithRxProducer:p];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(castClass_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:withIOSClass:);
  methods[1].selector = @selector(onNextWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onCompleted);
  methods[4].selector = @selector(setProducerWithRxProducer:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "castClass_", "LIOSClass;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;LIOSClass;", "(Lrx/Subscriber<-TR;>;Ljava/lang/Class<TR;>;)V", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "setProducer", "LRxProducer;", "Lrx/Subscriber<-TR;>;", "Ljava/lang/Class<TR;>;", "LRxInternalOperatorsOperatorCast;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorCast_CastSubscriber = { "CastSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 5, 3, 11, -1, -1, 12, -1 };
  return &_RxInternalOperatorsOperatorCast_CastSubscriber;
}

@end

void RxInternalOperatorsOperatorCast_CastSubscriber_initWithRxSubscriber_withIOSClass_(RxInternalOperatorsOperatorCast_CastSubscriber *self, RxSubscriber *actual, IOSClass *castClass) {
  RxSubscriber_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->castClass_, castClass);
}

RxInternalOperatorsOperatorCast_CastSubscriber *new_RxInternalOperatorsOperatorCast_CastSubscriber_initWithRxSubscriber_withIOSClass_(RxSubscriber *actual, IOSClass *castClass) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorCast_CastSubscriber, initWithRxSubscriber_withIOSClass_, actual, castClass)
}

RxInternalOperatorsOperatorCast_CastSubscriber *create_RxInternalOperatorsOperatorCast_CastSubscriber_initWithRxSubscriber_withIOSClass_(RxSubscriber *actual, IOSClass *castClass) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorCast_CastSubscriber, initWithRxSubscriber_withIOSClass_, actual, castClass)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorCast_CastSubscriber)
