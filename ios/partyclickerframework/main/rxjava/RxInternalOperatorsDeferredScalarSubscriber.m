//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxInternalOperatorsDeferredScalarSubscriber.h"
#include "RxObservable.h"
#include "RxProducer.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Long.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"

__attribute__((unused)) static void RxInternalOperatorsDeferredScalarSubscriber_complete(RxInternalOperatorsDeferredScalarSubscriber *self);

__attribute__((unused)) static void RxInternalOperatorsDeferredScalarSubscriber_completeWithId_(RxInternalOperatorsDeferredScalarSubscriber *self, id value);

__attribute__((unused)) static void RxInternalOperatorsDeferredScalarSubscriber_downstreamRequestWithLong_(RxInternalOperatorsDeferredScalarSubscriber *self, jlong n);

__attribute__((unused)) static void RxInternalOperatorsDeferredScalarSubscriber_setupDownstream(RxInternalOperatorsDeferredScalarSubscriber *self);

@implementation RxInternalOperatorsDeferredScalarSubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)actual {
  RxInternalOperatorsDeferredScalarSubscriber_initWithRxSubscriber_(self, actual);
  return self;
}

- (void)onErrorWithNSException:(NSException *)ex {
  JreStrongAssign(&value_, nil);
  [((RxSubscriber *) nil_chk(actual_)) onErrorWithNSException:ex];
}

- (void)onCompleted {
  if (hasValue_) {
    RxInternalOperatorsDeferredScalarSubscriber_completeWithId_(self, value_);
  }
  else {
    RxInternalOperatorsDeferredScalarSubscriber_complete(self);
  }
}

- (void)complete {
  RxInternalOperatorsDeferredScalarSubscriber_complete(self);
}

- (void)completeWithId:(id)value {
  RxInternalOperatorsDeferredScalarSubscriber_completeWithId_(self, value);
}

- (void)downstreamRequestWithLong:(jlong)n {
  RxInternalOperatorsDeferredScalarSubscriber_downstreamRequestWithLong_(self, n);
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  [((id<RxProducer>) nil_chk(p)) requestWithLong:JavaLangLong_MAX_VALUE];
}

- (void)subscribeToWithRxObservable:(RxObservable *)source {
  RxInternalOperatorsDeferredScalarSubscriber_setupDownstream(self);
  [((RxObservable *) nil_chk(source)) unsafeSubscribeWithRxSubscriber:self];
}

- (void)setupDownstream {
  RxInternalOperatorsDeferredScalarSubscriber_setupDownstream(self);
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(value_);
  RELEASE_(state_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x14, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x14, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x10, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 11, 12, -1, 13, -1, -1 },
    { NULL, "V", 0x10, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(complete);
  methods[4].selector = @selector(completeWithId:);
  methods[5].selector = @selector(downstreamRequestWithLong:);
  methods[6].selector = @selector(setProducerWithRxProducer:);
  methods[7].selector = @selector(subscribeToWithRxObservable:);
  methods[8].selector = @selector(setupDownstream);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LRxSubscriber;", .constantValue.asLong = 0, 0x14, -1, -1, 14, -1 },
    { "hasValue_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, 15, -1 },
    { "state_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "NO_REQUEST_NO_VALUE", "I", .constantValue.asInt = RxInternalOperatorsDeferredScalarSubscriber_NO_REQUEST_NO_VALUE, 0x18, -1, -1, -1, -1 },
    { "HAS_REQUEST_NO_VALUE", "I", .constantValue.asInt = RxInternalOperatorsDeferredScalarSubscriber_HAS_REQUEST_NO_VALUE, 0x18, -1, -1, -1, -1 },
    { "NO_REQUEST_HAS_VALUE", "I", .constantValue.asInt = RxInternalOperatorsDeferredScalarSubscriber_NO_REQUEST_HAS_VALUE, 0x18, -1, -1, -1, -1 },
    { "HAS_REQUEST_HAS_VALUE", "I", .constantValue.asInt = RxInternalOperatorsDeferredScalarSubscriber_HAS_REQUEST_HAS_VALUE, 0x18, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<-TR;>;)V", "onError", "LNSException;", "complete", "LNSObject;", "(TR;)V", "downstreamRequest", "J", "setProducer", "LRxProducer;", "subscribeTo", "LRxObservable;", "(Lrx/Observable<+TT;>;)V", "Lrx/Subscriber<-TR;>;", "TR;", "LRxInternalOperatorsDeferredScalarSubscriber_InnerProducer;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsDeferredScalarSubscriber = { "DeferredScalarSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x401, 9, 8, -1, 16, -1, 17, -1 };
  return &_RxInternalOperatorsDeferredScalarSubscriber;
}

@end

void RxInternalOperatorsDeferredScalarSubscriber_initWithRxSubscriber_(RxInternalOperatorsDeferredScalarSubscriber *self, RxSubscriber *actual) {
  RxSubscriber_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssignAndConsume(&self->state_, new_JavaUtilConcurrentAtomicAtomicInteger_init());
}

void RxInternalOperatorsDeferredScalarSubscriber_complete(RxInternalOperatorsDeferredScalarSubscriber *self) {
  [((RxSubscriber *) nil_chk(self->actual_)) onCompleted];
}

void RxInternalOperatorsDeferredScalarSubscriber_completeWithId_(RxInternalOperatorsDeferredScalarSubscriber *self, id value) {
  RxSubscriber *a = self->actual_;
  for (; ; ) {
    jint s = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->state_)) get];
    if (s == RxInternalOperatorsDeferredScalarSubscriber_NO_REQUEST_HAS_VALUE || s == RxInternalOperatorsDeferredScalarSubscriber_HAS_REQUEST_HAS_VALUE || [((RxSubscriber *) nil_chk(a)) isUnsubscribed]) {
      return;
    }
    if (s == RxInternalOperatorsDeferredScalarSubscriber_HAS_REQUEST_NO_VALUE) {
      [((RxSubscriber *) nil_chk(a)) onNextWithId:value];
      if (![a isUnsubscribed]) {
        [a onCompleted];
      }
      [self->state_ lazySetWithInt:RxInternalOperatorsDeferredScalarSubscriber_HAS_REQUEST_HAS_VALUE];
      return;
    }
    JreStrongAssign(&self->value_, value);
    if ([self->state_ compareAndSetWithInt:RxInternalOperatorsDeferredScalarSubscriber_NO_REQUEST_NO_VALUE withInt:RxInternalOperatorsDeferredScalarSubscriber_NO_REQUEST_HAS_VALUE]) {
      return;
    }
  }
}

void RxInternalOperatorsDeferredScalarSubscriber_downstreamRequestWithLong_(RxInternalOperatorsDeferredScalarSubscriber *self, jlong n) {
  if (n < 0LL) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"n >= 0 required but it was ", n));
  }
  if (n != 0LL) {
    RxSubscriber *a = self->actual_;
    for (; ; ) {
      jint s = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->state_)) get];
      if (s == RxInternalOperatorsDeferredScalarSubscriber_HAS_REQUEST_NO_VALUE || s == RxInternalOperatorsDeferredScalarSubscriber_HAS_REQUEST_HAS_VALUE || [((RxSubscriber *) nil_chk(a)) isUnsubscribed]) {
        return;
      }
      if (s == RxInternalOperatorsDeferredScalarSubscriber_NO_REQUEST_HAS_VALUE) {
        if ([self->state_ compareAndSetWithInt:RxInternalOperatorsDeferredScalarSubscriber_NO_REQUEST_HAS_VALUE withInt:RxInternalOperatorsDeferredScalarSubscriber_HAS_REQUEST_HAS_VALUE]) {
          [((RxSubscriber *) nil_chk(a)) onNextWithId:self->value_];
          if (![a isUnsubscribed]) {
            [a onCompleted];
          }
        }
        return;
      }
      if ([self->state_ compareAndSetWithInt:RxInternalOperatorsDeferredScalarSubscriber_NO_REQUEST_NO_VALUE withInt:RxInternalOperatorsDeferredScalarSubscriber_HAS_REQUEST_NO_VALUE]) {
        return;
      }
    }
  }
}

void RxInternalOperatorsDeferredScalarSubscriber_setupDownstream(RxInternalOperatorsDeferredScalarSubscriber *self) {
  RxSubscriber *a = self->actual_;
  [((RxSubscriber *) nil_chk(a)) addWithRxSubscription:self];
  [a setProducerWithRxProducer:create_RxInternalOperatorsDeferredScalarSubscriber_InnerProducer_initWithRxInternalOperatorsDeferredScalarSubscriber_(self)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsDeferredScalarSubscriber)

@implementation RxInternalOperatorsDeferredScalarSubscriber_InnerProducer

- (instancetype)initWithRxInternalOperatorsDeferredScalarSubscriber:(RxInternalOperatorsDeferredScalarSubscriber *)parent {
  RxInternalOperatorsDeferredScalarSubscriber_InnerProducer_initWithRxInternalOperatorsDeferredScalarSubscriber_(self, parent);
  return self;
}

- (void)requestWithLong:(jlong)n {
  RxInternalOperatorsDeferredScalarSubscriber_downstreamRequestWithLong_(nil_chk(parent_), n);
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsDeferredScalarSubscriber:);
  methods[1].selector = @selector(requestWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LRxInternalOperatorsDeferredScalarSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsDeferredScalarSubscriber;", "(Lrx/internal/operators/DeferredScalarSubscriber<**>;)V", "request", "J", "Lrx/internal/operators/DeferredScalarSubscriber<**>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsDeferredScalarSubscriber_InnerProducer = { "InnerProducer", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 2, 1, 0, -1, -1, -1, -1 };
  return &_RxInternalOperatorsDeferredScalarSubscriber_InnerProducer;
}

@end

void RxInternalOperatorsDeferredScalarSubscriber_InnerProducer_initWithRxInternalOperatorsDeferredScalarSubscriber_(RxInternalOperatorsDeferredScalarSubscriber_InnerProducer *self, RxInternalOperatorsDeferredScalarSubscriber *parent) {
  NSObject_init(self);
  JreStrongAssign(&self->parent_, parent);
}

RxInternalOperatorsDeferredScalarSubscriber_InnerProducer *new_RxInternalOperatorsDeferredScalarSubscriber_InnerProducer_initWithRxInternalOperatorsDeferredScalarSubscriber_(RxInternalOperatorsDeferredScalarSubscriber *parent) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsDeferredScalarSubscriber_InnerProducer, initWithRxInternalOperatorsDeferredScalarSubscriber_, parent)
}

RxInternalOperatorsDeferredScalarSubscriber_InnerProducer *create_RxInternalOperatorsDeferredScalarSubscriber_InnerProducer_initWithRxInternalOperatorsDeferredScalarSubscriber_(RxInternalOperatorsDeferredScalarSubscriber *parent) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsDeferredScalarSubscriber_InnerProducer, initWithRxInternalOperatorsDeferredScalarSubscriber_, parent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsDeferredScalarSubscriber_InnerProducer)
