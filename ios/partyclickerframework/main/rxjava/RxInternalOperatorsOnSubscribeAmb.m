//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxInternalOperatorsOnSubscribeAmb.h"
#include "RxObservable.h"
#include "RxProducer.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSubscriptions.h"
#include "java/lang/Iterable.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/concurrent/ConcurrentLinkedQueue.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface RxInternalOperatorsOnSubscribeAmb ()

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)sources;

@end

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeAmb *self, id<JavaLangIterable> sources);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb *new_RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(id<JavaLangIterable> sources) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb *create_RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(id<JavaLangIterable> sources);

@interface RxInternalOperatorsOnSubscribeAmb_AmbSubscriber () {
 @public
  RxSubscriber *subscriber_AmbSubscriber_;
  RxInternalOperatorsOnSubscribeAmb_Selection *selection_;
  jboolean chosen_;
}

- (void)requestMoreWithLong:(jlong)n;

- (jboolean)isSelected;

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber, subscriber_AmbSubscriber_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber, selection_, RxInternalOperatorsOnSubscribeAmb_Selection *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self, jlong n);

__attribute__((unused)) static jboolean RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self);

@interface RxInternalOperatorsOnSubscribeAmb_1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOnSubscribeAmb_Selection *val$selection_;
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)capture$0;

- (void)call;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeAmb_1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeAmb_1_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_1 *self, RxInternalOperatorsOnSubscribeAmb_Selection *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_1 *new_RxInternalOperatorsOnSubscribeAmb_1_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_Selection *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_1 *create_RxInternalOperatorsOnSubscribeAmb_1_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_Selection *capture$0);

@interface RxInternalOperatorsOnSubscribeAmb_2 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOnSubscribeAmb_Selection *val$selection_;
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)capture$0;

- (void)requestWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeAmb_2)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeAmb_2_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_2 *self, RxInternalOperatorsOnSubscribeAmb_Selection *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_2 *new_RxInternalOperatorsOnSubscribeAmb_2_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_Selection *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_2 *create_RxInternalOperatorsOnSubscribeAmb_2_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_Selection *capture$0);

@implementation RxInternalOperatorsOnSubscribeAmb

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_(o1, o2);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_(o1, o2, o3);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6
                                   withRxObservable:(RxObservable *)o7 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6
                                   withRxObservable:(RxObservable *)o7
                                   withRxObservable:(RxObservable *)o8 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7, o8);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6
                                   withRxObservable:(RxObservable *)o7
                                   withRxObservable:(RxObservable *)o8
                                   withRxObservable:(RxObservable *)o9 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7, o8, o9);
}

+ (id<RxObservable_OnSubscribe>)ambWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)sources {
  RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(self, sources);
  return self;
}

- (void)callWithId:(RxSubscriber *)subscriber {
  RxInternalOperatorsOnSubscribeAmb_Selection *selection = create_RxInternalOperatorsOnSubscribeAmb_Selection_init();
  [((RxSubscriber *) nil_chk(subscriber)) addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(create_RxInternalOperatorsOnSubscribeAmb_1_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(selection))];
  for (RxObservable * __strong source in nil_chk(sources_)) {
    if ([subscriber isUnsubscribed]) {
      break;
    }
    RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *ambSubscriber = create_RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(0, subscriber, selection);
    [((id<JavaUtilCollection>) nil_chk(selection->ambSubscribers_)) addWithId:ambSubscriber];
    RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *c;
    if ((c = [selection get]) != nil) {
      [selection unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:c];
      return;
    }
    [((RxObservable *) nil_chk(source)) unsafeSubscribeWithRxSubscriber:ambSubscriber];
  }
  if ([subscriber isUnsubscribed]) {
    RxInternalOperatorsOnSubscribeAmb_unsubscribeAmbSubscribersWithJavaUtilCollection_(selection->ambSubscribers_);
  }
  [subscriber setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeAmb_2_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(selection)];
}

+ (void)unsubscribeAmbSubscribersWithJavaUtilCollection:(id<JavaUtilCollection>)ambSubscribers {
  RxInternalOperatorsOnSubscribeAmb_unsubscribeAmbSubscribersWithJavaUtilCollection_(ambSubscribers);
}

- (void)dealloc {
  RELEASE_(sources_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 0, 5, -1, 6, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 0, 7, -1, 8, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 0, 9, -1, 10, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 0, 11, -1, 12, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 0, 13, -1, 14, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 0, 15, -1, 16, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 0, 17, -1, 18, -1, -1 },
    { NULL, NULL, 0x2, -1, 17, -1, 19, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, 22, -1, -1 },
    { NULL, "V", 0x8, 23, 24, -1, 25, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(ambWithRxObservable:withRxObservable:);
  methods[1].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:);
  methods[2].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[3].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[4].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[5].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[6].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[7].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[8].selector = @selector(ambWithJavaLangIterable:);
  methods[9].selector = @selector(initWithJavaLangIterable:);
  methods[10].selector = @selector(callWithId:);
  methods[11].selector = @selector(unsubscribeAmbSubscribersWithJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sources_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x10, -1, -1, 26, -1 },
  };
  static const void *ptrTable[] = { "amb", "LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LJavaLangIterable;", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lrx/Observable<+TT;>;>;)Lrx/Observable$OnSubscribe<TT;>;", "(Ljava/lang/Iterable<+Lrx/Observable<+TT;>;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "unsubscribeAmbSubscribers", "LJavaUtilCollection;", "<T:Ljava/lang/Object;>(Ljava/util/Collection<Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;>;)V", "Ljava/lang/Iterable<+Lrx/Observable<+TT;>;>;", "LRxInternalOperatorsOnSubscribeAmb_AmbSubscriber;LRxInternalOperatorsOnSubscribeAmb_Selection;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeAmb = { "OnSubscribeAmb", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 12, 1, -1, 27, -1, 28, -1 };
  return &_RxInternalOperatorsOnSubscribeAmb;
}

@end

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = create_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = create_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = create_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = create_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  [sources addWithId:o5];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = create_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  [sources addWithId:o5];
  [sources addWithId:o6];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = create_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  [sources addWithId:o5];
  [sources addWithId:o6];
  [sources addWithId:o7];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = create_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  [sources addWithId:o5];
  [sources addWithId:o6];
  [sources addWithId:o7];
  [sources addWithId:o8];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8, RxObservable *o9) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = create_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  [sources addWithId:o5];
  [sources addWithId:o6];
  [sources addWithId:o7];
  [sources addWithId:o8];
  [sources addWithId:o9];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(id<JavaLangIterable> sources) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  return create_RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(sources);
}

void RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeAmb *self, id<JavaLangIterable> sources) {
  NSObject_init(self);
  JreStrongAssign(&self->sources_, sources);
}

RxInternalOperatorsOnSubscribeAmb *new_RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(id<JavaLangIterable> sources) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeAmb, initWithJavaLangIterable_, sources)
}

RxInternalOperatorsOnSubscribeAmb *create_RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(id<JavaLangIterable> sources) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeAmb, initWithJavaLangIterable_, sources)
}

void RxInternalOperatorsOnSubscribeAmb_unsubscribeAmbSubscribersWithJavaUtilCollection_(id<JavaUtilCollection> ambSubscribers) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  if (![((id<JavaUtilCollection>) nil_chk(ambSubscribers)) isEmpty]) {
    for (RxInternalOperatorsOnSubscribeAmb_AmbSubscriber * __strong other in ambSubscribers) {
      [((RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *) nil_chk(other)) unsubscribe];
    }
    [ambSubscribers clear];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeAmb)

@implementation RxInternalOperatorsOnSubscribeAmb_AmbSubscriber

- (instancetype)initWithLong:(jlong)requested
            withRxSubscriber:(RxSubscriber *)subscriber
withRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)selection {
  RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(self, requested, subscriber, selection);
  return self;
}

- (void)requestMoreWithLong:(jlong)n {
  RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(self, n);
}

- (void)onNextWithId:(id)t {
  if (RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(self)) {
    [((RxSubscriber *) nil_chk(subscriber_AmbSubscriber_)) onNextWithId:t];
  }
}

- (void)onCompleted {
  if (subscriber_AmbSubscriber_ != nil) {
    if (RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(self)) {
      [((RxSubscriber *) nil_chk(subscriber_AmbSubscriber_)) onCompleted];
    }
    JreStrongAssign(&subscriber_AmbSubscriber_, nil);
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (subscriber_AmbSubscriber_ != nil) {
    if (RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(self)) {
      [((RxSubscriber *) nil_chk(subscriber_AmbSubscriber_)) onErrorWithNSException:e];
    }
    JreStrongAssign(&subscriber_AmbSubscriber_, nil);
  }
}

- (jboolean)isSelected {
  return RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(self);
}

- (void)dealloc {
  RELEASE_(subscriber_AmbSubscriber_);
  RELEASE_(selection_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:withRxSubscriber:withRxInternalOperatorsOnSubscribeAmb_Selection:);
  methods[1].selector = @selector(requestMoreWithLong:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onCompleted);
  methods[4].selector = @selector(onErrorWithNSException:);
  methods[5].selector = @selector(isSelected);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subscriber_AmbSubscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x2, 9, -1, 10, -1 },
    { "selection_", "LRxInternalOperatorsOnSubscribeAmb_Selection;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
    { "chosen_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JLRxSubscriber;LRxInternalOperatorsOnSubscribeAmb_Selection;", "(JLrx/Subscriber<-TT;>;Lrx/internal/operators/OnSubscribeAmb$Selection<TT;>;)V", "requestMore", "J", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "subscriber", "Lrx/Subscriber<-TT;>;", "Lrx/internal/operators/OnSubscribeAmb$Selection<TT;>;", "LRxInternalOperatorsOnSubscribeAmb;", "<T:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeAmb_AmbSubscriber = { "AmbSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 6, 3, 12, -1, -1, 13, -1 };
  return &_RxInternalOperatorsOnSubscribeAmb_AmbSubscriber;
}

@end

void RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self, jlong requested, RxSubscriber *subscriber, RxInternalOperatorsOnSubscribeAmb_Selection *selection) {
  RxSubscriber_init(self);
  JreStrongAssign(&self->subscriber_AmbSubscriber_, subscriber);
  JreStrongAssign(&self->selection_, selection);
  [self requestWithLong:requested];
}

RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *new_RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(jlong requested, RxSubscriber *subscriber, RxInternalOperatorsOnSubscribeAmb_Selection *selection) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber, initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_, requested, subscriber, selection)
}

RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *create_RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(jlong requested, RxSubscriber *subscriber, RxInternalOperatorsOnSubscribeAmb_Selection *selection) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber, initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_, requested, subscriber, selection)
}

void RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self, jlong n) {
  [self requestWithLong:n];
}

jboolean RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self) {
  if (self->chosen_) {
    return true;
  }
  if ([((RxInternalOperatorsOnSubscribeAmb_Selection *) nil_chk(self->selection_)) get] == self) {
    self->chosen_ = true;
    return true;
  }
  else {
    if ([self->selection_ compareAndSetWithId:nil withId:self]) {
      [self->selection_ unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:self];
      self->chosen_ = true;
      return true;
    }
    else {
      [self->selection_ unsubscribeLosers];
      return false;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber)

@implementation RxInternalOperatorsOnSubscribeAmb_Selection

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeAmb_Selection_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)unsubscribeLosers {
  RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *winner = [self get];
  if (winner != nil) {
    [self unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:winner];
  }
}

- (void)unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *)notThis {
  for (RxInternalOperatorsOnSubscribeAmb_AmbSubscriber * __strong other in nil_chk(ambSubscribers_)) {
    if (other != notThis) {
      [((RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *) nil_chk(other)) unsubscribe];
    }
  }
  [ambSubscribers_ clear];
}

- (void)dealloc {
  RELEASE_(ambSubscribers_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(unsubscribeLosers);
  methods[2].selector = @selector(unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ambSubscribers_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x10, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "unsubscribeOthers", "LRxInternalOperatorsOnSubscribeAmb_AmbSubscriber;", "(Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;)V", "Ljava/util/Collection<Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;>;", "LRxInternalOperatorsOnSubscribeAmb;", "<T:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeAmb_Selection = { "Selection", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 3, 1, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeAmb_Selection;
}

@end

void RxInternalOperatorsOnSubscribeAmb_Selection_init(RxInternalOperatorsOnSubscribeAmb_Selection *self) {
  JavaUtilConcurrentAtomicAtomicReference_init(self);
  JreStrongAssignAndConsume(&self->ambSubscribers_, new_JavaUtilConcurrentConcurrentLinkedQueue_init());
}

RxInternalOperatorsOnSubscribeAmb_Selection *new_RxInternalOperatorsOnSubscribeAmb_Selection_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeAmb_Selection, init)
}

RxInternalOperatorsOnSubscribeAmb_Selection *create_RxInternalOperatorsOnSubscribeAmb_Selection_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeAmb_Selection, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeAmb_Selection)

@implementation RxInternalOperatorsOnSubscribeAmb_1

- (instancetype)initWithRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)capture$0 {
  RxInternalOperatorsOnSubscribeAmb_1_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(self, capture$0);
  return self;
}

- (void)call {
  RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *c;
  if ((c = [((RxInternalOperatorsOnSubscribeAmb_Selection *) nil_chk(val$selection_)) get]) != nil) {
    [((RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *) nil_chk(c)) unsubscribe];
  }
  RxInternalOperatorsOnSubscribeAmb_unsubscribeAmbSubscribersWithJavaUtilCollection_(val$selection_->ambSubscribers_);
}

- (void)dealloc {
  RELEASE_(val$selection_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOnSubscribeAmb_Selection:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$selection_", "LRxInternalOperatorsOnSubscribeAmb_Selection;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Lrx/internal/operators/OnSubscribeAmb$Selection<TT;>;", "LRxInternalOperatorsOnSubscribeAmb;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeAmb_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeAmb_1;
}

@end

void RxInternalOperatorsOnSubscribeAmb_1_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_1 *self, RxInternalOperatorsOnSubscribeAmb_Selection *capture$0) {
  JreStrongAssign(&self->val$selection_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeAmb_1 *new_RxInternalOperatorsOnSubscribeAmb_1_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_Selection *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeAmb_1, initWithRxInternalOperatorsOnSubscribeAmb_Selection_, capture$0)
}

RxInternalOperatorsOnSubscribeAmb_1 *create_RxInternalOperatorsOnSubscribeAmb_1_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_Selection *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeAmb_1, initWithRxInternalOperatorsOnSubscribeAmb_Selection_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeAmb_2

- (instancetype)initWithRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)capture$0 {
  RxInternalOperatorsOnSubscribeAmb_2_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(self, capture$0);
  return self;
}

- (void)requestWithLong:(jlong)n {
  RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *c;
  if ((c = [((RxInternalOperatorsOnSubscribeAmb_Selection *) nil_chk(val$selection_)) get]) != nil) {
    RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(nil_chk(c), n);
  }
  else {
    for (RxInternalOperatorsOnSubscribeAmb_AmbSubscriber * __strong ambSubscriber in nil_chk(val$selection_->ambSubscribers_)) {
      if (![((RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *) nil_chk(ambSubscriber)) isUnsubscribed]) {
        if ([val$selection_ get] == ambSubscriber) {
          RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(ambSubscriber, n);
          return;
        }
        else {
          RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(ambSubscriber, n);
        }
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(val$selection_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOnSubscribeAmb_Selection:);
  methods[1].selector = @selector(requestWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$selection_", "LRxInternalOperatorsOnSubscribeAmb_Selection;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "Lrx/internal/operators/OnSubscribeAmb$Selection<TT;>;", "LRxInternalOperatorsOnSubscribeAmb;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeAmb_2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeAmb_2;
}

@end

void RxInternalOperatorsOnSubscribeAmb_2_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_2 *self, RxInternalOperatorsOnSubscribeAmb_Selection *capture$0) {
  JreStrongAssign(&self->val$selection_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeAmb_2 *new_RxInternalOperatorsOnSubscribeAmb_2_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_Selection *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeAmb_2, initWithRxInternalOperatorsOnSubscribeAmb_Selection_, capture$0)
}

RxInternalOperatorsOnSubscribeAmb_2 *create_RxInternalOperatorsOnSubscribeAmb_2_initWithRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_Selection *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeAmb_2, initWithRxInternalOperatorsOnSubscribeAmb_Selection_, capture$0)
}
