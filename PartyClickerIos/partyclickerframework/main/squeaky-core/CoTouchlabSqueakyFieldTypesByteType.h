//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/core/src/main/java/co/touchlab/squeaky/field/types/ByteType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesByteType")
#ifdef RESTRICT_CoTouchlabSqueakyFieldTypesByteType
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesByteType 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesByteType 1
#endif
#undef RESTRICT_CoTouchlabSqueakyFieldTypesByteType

#if !defined (CoTouchlabSqueakyFieldTypesByteType_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesByteType || defined(INCLUDE_CoTouchlabSqueakyFieldTypesByteType))
#define CoTouchlabSqueakyFieldTypesByteType_

#define RESTRICT_CoTouchlabSqueakyFieldTypesByteObjectType 1
#define INCLUDE_CoTouchlabSqueakyFieldTypesByteObjectType 1
#include "CoTouchlabSqueakyFieldTypesByteObjectType.h"

@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;

@interface CoTouchlabSqueakyFieldTypesByteType : CoTouchlabSqueakyFieldTypesByteObjectType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesByteType *)getSingleton;

- (jboolean)isPrimitive;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesByteType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesByteType *CoTouchlabSqueakyFieldTypesByteType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesByteType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesByteType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesByteType *new_CoTouchlabSqueakyFieldTypesByteType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesByteType *create_CoTouchlabSqueakyFieldTypesByteType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesByteType)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesByteType")
