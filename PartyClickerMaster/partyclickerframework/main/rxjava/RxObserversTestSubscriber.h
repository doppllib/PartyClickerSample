//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxObserversTestSubscriber")
#ifdef RESTRICT_RxObserversTestSubscriber
#define INCLUDE_ALL_RxObserversTestSubscriber 0
#else
#define INCLUDE_ALL_RxObserversTestSubscriber 1
#endif
#undef RESTRICT_RxObserversTestSubscriber

#if !defined (RxObserversTestSubscriber_) && (INCLUDE_ALL_RxObserversTestSubscriber || defined(INCLUDE_RxObserversTestSubscriber))
#define RxObserversTestSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "RxSubscriber.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangThread;
@class JavaUtilConcurrentTimeUnit;
@protocol JavaUtilList;
@protocol RxObserver;

@interface RxObserversTestSubscriber : RxSubscriber

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithLong:(jlong)initialRequest;

- (instancetype)initWithRxObserver:(id<RxObserver>)delegate;

- (instancetype)initWithRxObserver:(id<RxObserver>)delegate
                          withLong:(jlong)initialRequest;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)delegate;

- (void)assertCompleted;

- (void)assertErrorWithIOSClass:(IOSClass *)clazz;

- (void)assertErrorWithNSException:(NSException *)throwable;

- (void)assertNoErrors;

- (void)assertNotCompleted;

- (void)assertNoTerminalEvent;

- (void)assertNoValues;

- (void)assertReceivedOnNextWithJavaUtilList:(id<JavaUtilList>)items;

- (void)assertTerminalEvent;

- (void)assertUnsubscribed;

- (void)assertValueWithId:(id)value;

- (void)assertValueCountWithInt:(jint)count;

- (void)assertValuesWithNSObjectArray:(IOSObjectArray *)values;

- (void)assertValuesAndClearWithId:(id)expectedFirstValue
                 withNSObjectArray:(IOSObjectArray *)expectedRestValues;

- (void)awaitTerminalEvent;

- (void)awaitTerminalEventWithLong:(jlong)timeout
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (void)awaitTerminalEventAndUnsubscribeOnTimeoutWithLong:(jlong)timeout
                           withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (jboolean)awaitValueCountWithInt:(jint)expected
                          withLong:(jlong)timeout
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

+ (RxObserversTestSubscriber *)create;

+ (RxObserversTestSubscriber *)createWithLong:(jlong)initialRequest;

+ (RxObserversTestSubscriber *)createWithRxObserver:(id<RxObserver>)delegate;

+ (RxObserversTestSubscriber *)createWithRxObserver:(id<RxObserver>)delegate
                                           withLong:(jlong)initialRequest;

+ (RxObserversTestSubscriber *)createWithRxSubscriber:(RxSubscriber *)delegate;

- (jint)getCompletions;

- (JavaLangThread *)getLastSeenThread;

- (id<JavaUtilList>)getOnCompletedEvents;

- (id<JavaUtilList>)getOnErrorEvents;

- (id<JavaUtilList>)getOnNextEvents;

- (jint)getValueCount;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (void)requestMoreWithLong:(jlong)n;

#pragma mark Package-Private

- (void)assertionErrorWithNSString:(NSString *)message;

@end

J2OBJC_STATIC_INIT(RxObserversTestSubscriber)

FOUNDATION_EXPORT void RxObserversTestSubscriber_initWithLong_(RxObserversTestSubscriber *self, jlong initialRequest);

FOUNDATION_EXPORT RxObserversTestSubscriber *new_RxObserversTestSubscriber_initWithLong_(jlong initialRequest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObserversTestSubscriber *create_RxObserversTestSubscriber_initWithLong_(jlong initialRequest);

FOUNDATION_EXPORT void RxObserversTestSubscriber_initWithRxObserver_withLong_(RxObserversTestSubscriber *self, id<RxObserver> delegate, jlong initialRequest);

FOUNDATION_EXPORT RxObserversTestSubscriber *new_RxObserversTestSubscriber_initWithRxObserver_withLong_(id<RxObserver> delegate, jlong initialRequest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObserversTestSubscriber *create_RxObserversTestSubscriber_initWithRxObserver_withLong_(id<RxObserver> delegate, jlong initialRequest);

FOUNDATION_EXPORT void RxObserversTestSubscriber_initWithRxSubscriber_(RxObserversTestSubscriber *self, RxSubscriber *delegate);

FOUNDATION_EXPORT RxObserversTestSubscriber *new_RxObserversTestSubscriber_initWithRxSubscriber_(RxSubscriber *delegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObserversTestSubscriber *create_RxObserversTestSubscriber_initWithRxSubscriber_(RxSubscriber *delegate);

FOUNDATION_EXPORT void RxObserversTestSubscriber_initWithRxObserver_(RxObserversTestSubscriber *self, id<RxObserver> delegate);

FOUNDATION_EXPORT RxObserversTestSubscriber *new_RxObserversTestSubscriber_initWithRxObserver_(id<RxObserver> delegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObserversTestSubscriber *create_RxObserversTestSubscriber_initWithRxObserver_(id<RxObserver> delegate);

FOUNDATION_EXPORT void RxObserversTestSubscriber_init(RxObserversTestSubscriber *self);

FOUNDATION_EXPORT RxObserversTestSubscriber *new_RxObserversTestSubscriber_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObserversTestSubscriber *create_RxObserversTestSubscriber_init();

FOUNDATION_EXPORT RxObserversTestSubscriber *RxObserversTestSubscriber_create();

FOUNDATION_EXPORT RxObserversTestSubscriber *RxObserversTestSubscriber_createWithLong_(jlong initialRequest);

FOUNDATION_EXPORT RxObserversTestSubscriber *RxObserversTestSubscriber_createWithRxObserver_withLong_(id<RxObserver> delegate, jlong initialRequest);

FOUNDATION_EXPORT RxObserversTestSubscriber *RxObserversTestSubscriber_createWithRxSubscriber_(RxSubscriber *delegate);

FOUNDATION_EXPORT RxObserversTestSubscriber *RxObserversTestSubscriber_createWithRxObserver_(id<RxObserver> delegate);

J2OBJC_TYPE_LITERAL_HEADER(RxObserversTestSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxObserversTestSubscriber")
