//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxAsyncEmitter")
#ifdef RESTRICT_RxAsyncEmitter
#define INCLUDE_ALL_RxAsyncEmitter 0
#else
#define INCLUDE_ALL_RxAsyncEmitter 1
#endif
#undef RESTRICT_RxAsyncEmitter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (RxAsyncEmitter_) && (INCLUDE_ALL_RxAsyncEmitter || defined(INCLUDE_RxAsyncEmitter))
#define RxAsyncEmitter_

#define RESTRICT_RxObserver 1
#define INCLUDE_RxObserver 1
#include "RxObserver.h"

@protocol RxAsyncEmitter_Cancellable;
@protocol RxSubscription;

@protocol RxAsyncEmitter < RxObserver, JavaObject >

- (void)setSubscriptionWithRxSubscription:(id<RxSubscription>)s;

- (void)setCancellationWithRxAsyncEmitter_Cancellable:(id<RxAsyncEmitter_Cancellable>)c;

- (jlong)requested;

@end

J2OBJC_EMPTY_STATIC_INIT(RxAsyncEmitter)

J2OBJC_TYPE_LITERAL_HEADER(RxAsyncEmitter)

#endif

#if !defined (RxAsyncEmitter_Cancellable_) && (INCLUDE_ALL_RxAsyncEmitter || defined(INCLUDE_RxAsyncEmitter_Cancellable))
#define RxAsyncEmitter_Cancellable_

@protocol RxAsyncEmitter_Cancellable < JavaObject >

- (void)cancel;

@end

J2OBJC_EMPTY_STATIC_INIT(RxAsyncEmitter_Cancellable)

J2OBJC_TYPE_LITERAL_HEADER(RxAsyncEmitter_Cancellable)

#endif

#if !defined (RxAsyncEmitter_BackpressureMode_) && (INCLUDE_ALL_RxAsyncEmitter || defined(INCLUDE_RxAsyncEmitter_BackpressureMode))
#define RxAsyncEmitter_BackpressureMode_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, RxAsyncEmitter_BackpressureMode_Enum) {
  RxAsyncEmitter_BackpressureMode_Enum_NONE = 0,
  RxAsyncEmitter_BackpressureMode_Enum_ERROR = 1,
  RxAsyncEmitter_BackpressureMode_Enum_BUFFER = 2,
  RxAsyncEmitter_BackpressureMode_Enum_DROP = 3,
  RxAsyncEmitter_BackpressureMode_Enum_LATEST = 4,
};

@interface RxAsyncEmitter_BackpressureMode : JavaLangEnum < NSCopying >

#pragma mark Public

+ (RxAsyncEmitter_BackpressureMode *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(RxAsyncEmitter_BackpressureMode)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT RxAsyncEmitter_BackpressureMode *RxAsyncEmitter_BackpressureMode_values_[];

inline RxAsyncEmitter_BackpressureMode *RxAsyncEmitter_BackpressureMode_get_NONE();
J2OBJC_ENUM_CONSTANT(RxAsyncEmitter_BackpressureMode, NONE)

inline RxAsyncEmitter_BackpressureMode *RxAsyncEmitter_BackpressureMode_get_ERROR();
J2OBJC_ENUM_CONSTANT(RxAsyncEmitter_BackpressureMode, ERROR)

inline RxAsyncEmitter_BackpressureMode *RxAsyncEmitter_BackpressureMode_get_BUFFER();
J2OBJC_ENUM_CONSTANT(RxAsyncEmitter_BackpressureMode, BUFFER)

inline RxAsyncEmitter_BackpressureMode *RxAsyncEmitter_BackpressureMode_get_DROP();
J2OBJC_ENUM_CONSTANT(RxAsyncEmitter_BackpressureMode, DROP)

inline RxAsyncEmitter_BackpressureMode *RxAsyncEmitter_BackpressureMode_get_LATEST();
J2OBJC_ENUM_CONSTANT(RxAsyncEmitter_BackpressureMode, LATEST)

FOUNDATION_EXPORT IOSObjectArray *RxAsyncEmitter_BackpressureMode_values();

FOUNDATION_EXPORT RxAsyncEmitter_BackpressureMode *RxAsyncEmitter_BackpressureMode_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT RxAsyncEmitter_BackpressureMode *RxAsyncEmitter_BackpressureMode_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(RxAsyncEmitter_BackpressureMode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_RxAsyncEmitter")
