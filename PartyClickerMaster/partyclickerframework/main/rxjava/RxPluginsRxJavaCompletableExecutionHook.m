//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxCompletable.h"
#include "RxPluginsRxJavaCompletableExecutionHook.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"

__attribute__((unused)) static IOSObjectArray *RxPluginsRxJavaCompletableExecutionHook__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxPluginsRxJavaCompletableExecutionHook__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxPluginsRxJavaCompletableExecutionHook__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxPluginsRxJavaCompletableExecutionHook__Annotations$3();

@implementation RxPluginsRxJavaCompletableExecutionHook

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaCompletableExecutionHook_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxCompletable_OnSubscribe>)onCreateWithRxCompletable_OnSubscribe:(id<RxCompletable_OnSubscribe>)f {
  return f;
}

- (id<RxCompletable_OnSubscribe>)onSubscribeStartWithRxCompletable:(RxCompletable *)completableInstance
                                     withRxCompletable_OnSubscribe:(id<RxCompletable_OnSubscribe>)onSubscribe {
  return onSubscribe;
}

- (NSException *)onSubscribeErrorWithNSException:(NSException *)e {
  return e;
}

- (id<RxCompletable_Operator>)onLiftWithRxCompletable_Operator:(id<RxCompletable_Operator>)lift {
  return lift;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxCompletable_OnSubscribe;", 0x1, 0, 1, -1, -1, 2, -1 },
    { NULL, "LRxCompletable_OnSubscribe;", 0x1, 3, 4, -1, -1, 5, -1 },
    { NULL, "LNSException;", 0x1, 6, 7, -1, -1, 8, -1 },
    { NULL, "LRxCompletable_Operator;", 0x1, 9, 10, -1, -1, 11, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onCreateWithRxCompletable_OnSubscribe:);
  methods[2].selector = @selector(onSubscribeStartWithRxCompletable:withRxCompletable_OnSubscribe:);
  methods[3].selector = @selector(onSubscribeErrorWithNSException:);
  methods[4].selector = @selector(onLiftWithRxCompletable_Operator:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onCreate", "LRxCompletable_OnSubscribe;", (void *)&RxPluginsRxJavaCompletableExecutionHook__Annotations$0, "onSubscribeStart", "LRxCompletable;LRxCompletable_OnSubscribe;", (void *)&RxPluginsRxJavaCompletableExecutionHook__Annotations$1, "onSubscribeError", "LNSException;", (void *)&RxPluginsRxJavaCompletableExecutionHook__Annotations$2, "onLift", "LRxCompletable_Operator;", (void *)&RxPluginsRxJavaCompletableExecutionHook__Annotations$3 };
  static const J2ObjcClassInfo _RxPluginsRxJavaCompletableExecutionHook = { "RxJavaCompletableExecutionHook", "rx.plugins", ptrTable, methods, NULL, 7, 0x401, 5, 0, -1, -1, -1, -1, -1 };
  return &_RxPluginsRxJavaCompletableExecutionHook;
}

@end

void RxPluginsRxJavaCompletableExecutionHook_init(RxPluginsRxJavaCompletableExecutionHook *self) {
  NSObject_init(self);
}

IOSObjectArray *RxPluginsRxJavaCompletableExecutionHook__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxPluginsRxJavaCompletableExecutionHook__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxPluginsRxJavaCompletableExecutionHook__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxPluginsRxJavaCompletableExecutionHook__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxPluginsRxJavaCompletableExecutionHook)
