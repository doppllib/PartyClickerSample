//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue")
#ifdef RESTRICT_RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue
#define INCLUDE_ALL_RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue 0
#else
#define INCLUDE_ALL_RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue 1
#endif
#undef RESTRICT_RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue

#if !defined (RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue_) && (INCLUDE_ALL_RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue || defined(INCLUDE_RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue))
#define RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue_

#define RESTRICT_RxInternalUtilUnsafeConcurrentCircularArrayQueue 1
#define INCLUDE_RxInternalUtilUnsafeConcurrentCircularArrayQueue 1
#include "RxInternalUtilUnsafeConcurrentCircularArrayQueue.h"

@class IOSLongArray;

@interface RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue : RxInternalUtilUnsafeConcurrentCircularArrayQueue {
 @public
  IOSLongArray *sequenceBuffer_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Protected

- (jlong)calcSequenceOffsetWithLong:(jlong)index;

- (jlong)lvSequenceWithLongArray:(IOSLongArray *)buffer
                        withLong:(jlong)offset;

- (void)soSequenceWithLongArray:(IOSLongArray *)buffer
                       withLong:(jlong)offset
                       withLong:(jlong)e;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue)

J2OBJC_FIELD_SETTER(RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue, sequenceBuffer_, IOSLongArray *)

FOUNDATION_EXPORT void RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue_initWithInt_(RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalUtilUnsafeConcurrentSequencedCircularArrayQueue")
