//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/query/src/main/java/co/touchlab/squeaky/stmt/query/In.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyStmtQueryIn")
#ifdef RESTRICT_CoTouchlabSqueakyStmtQueryIn
#define INCLUDE_ALL_CoTouchlabSqueakyStmtQueryIn 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyStmtQueryIn 1
#endif
#undef RESTRICT_CoTouchlabSqueakyStmtQueryIn

#if !defined (CoTouchlabSqueakyStmtQueryIn_) && (INCLUDE_ALL_CoTouchlabSqueakyStmtQueryIn || defined(INCLUDE_CoTouchlabSqueakyStmtQueryIn))
#define CoTouchlabSqueakyStmtQueryIn_

#define RESTRICT_CoTouchlabSqueakyStmtQueryBaseComparison 1
#define INCLUDE_CoTouchlabSqueakyStmtQueryBaseComparison 1
#include "CoTouchlabSqueakyStmtQueryBaseComparison.h"

@class CoTouchlabSqueakyDaoSqueakyContext;
@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyStmtJoinAlias;
@class IOSObjectArray;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface CoTouchlabSqueakyStmtQueryIn : CoTouchlabSqueakyStmtQueryBaseComparison

#pragma mark Public

- (instancetype)initWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                 withJavaUtilCollection:(id<JavaUtilCollection>)objects
                                            withBoolean:(jboolean)inArg
                     withCoTouchlabSqueakyStmtJoinAlias:(CoTouchlabSqueakyStmtJoinAlias *)joinAlias;

- (instancetype)initWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                      withNSObjectArray:(IOSObjectArray *)objects
                                            withBoolean:(jboolean)inArg
                     withCoTouchlabSqueakyStmtJoinAlias:(CoTouchlabSqueakyStmtJoinAlias *)joinAlias;

- (void)appendValueWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)squeakyContext
                                         withJavaUtilList:(id<JavaUtilList>)params;

- (NSString *)getOperation;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyStmtQueryIn)

FOUNDATION_EXPORT void CoTouchlabSqueakyStmtQueryIn_initWithCoTouchlabSqueakyFieldFieldType_withJavaUtilCollection_withBoolean_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyStmtQueryIn *self, CoTouchlabSqueakyFieldFieldType *fieldType, id<JavaUtilCollection> objects, jboolean inArg, CoTouchlabSqueakyStmtJoinAlias *joinAlias);

FOUNDATION_EXPORT CoTouchlabSqueakyStmtQueryIn *new_CoTouchlabSqueakyStmtQueryIn_initWithCoTouchlabSqueakyFieldFieldType_withJavaUtilCollection_withBoolean_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyFieldFieldType *fieldType, id<JavaUtilCollection> objects, jboolean inArg, CoTouchlabSqueakyStmtJoinAlias *joinAlias) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyStmtQueryIn *create_CoTouchlabSqueakyStmtQueryIn_initWithCoTouchlabSqueakyFieldFieldType_withJavaUtilCollection_withBoolean_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyFieldFieldType *fieldType, id<JavaUtilCollection> objects, jboolean inArg, CoTouchlabSqueakyStmtJoinAlias *joinAlias);

FOUNDATION_EXPORT void CoTouchlabSqueakyStmtQueryIn_initWithCoTouchlabSqueakyFieldFieldType_withNSObjectArray_withBoolean_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyStmtQueryIn *self, CoTouchlabSqueakyFieldFieldType *fieldType, IOSObjectArray *objects, jboolean inArg, CoTouchlabSqueakyStmtJoinAlias *joinAlias);

FOUNDATION_EXPORT CoTouchlabSqueakyStmtQueryIn *new_CoTouchlabSqueakyStmtQueryIn_initWithCoTouchlabSqueakyFieldFieldType_withNSObjectArray_withBoolean_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyFieldFieldType *fieldType, IOSObjectArray *objects, jboolean inArg, CoTouchlabSqueakyStmtJoinAlias *joinAlias) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyStmtQueryIn *create_CoTouchlabSqueakyStmtQueryIn_initWithCoTouchlabSqueakyFieldFieldType_withNSObjectArray_withBoolean_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyFieldFieldType *fieldType, IOSObjectArray *objects, jboolean inArg, CoTouchlabSqueakyStmtJoinAlias *joinAlias);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyStmtQueryIn)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyStmtQueryIn")
