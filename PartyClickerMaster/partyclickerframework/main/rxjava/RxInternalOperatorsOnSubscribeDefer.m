//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxExceptionsExceptions.h"
#include "RxFunctionsFunc0.h"
#include "RxInternalOperatorsOnSubscribeDefer.h"
#include "RxObservable.h"
#include "RxObserversSubscribers.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"

@implementation RxInternalOperatorsOnSubscribeDefer

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)observableFactory {
  RxInternalOperatorsOnSubscribeDefer_initWithRxFunctionsFunc0_(self, observableFactory);
  return self;
}

- (void)callWithId:(RxSubscriber *)s {
  RxObservable *o;
  @try {
    o = [((id<RxFunctionsFunc0>) nil_chk(observableFactory_)) call];
  }
  @catch (NSException *t) {
    RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_(t, s);
    return;
  }
  [((RxObservable *) nil_chk(o)) unsafeSubscribeWithRxSubscriber:RxObserversSubscribers_wrapWithRxSubscriber_(s)];
}

- (void)dealloc {
  RELEASE_(observableFactory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc0:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observableFactory_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsFunc0;", "(Lrx/functions/Func0<+Lrx/Observable<+TT;>;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "Lrx/functions/Func0<+Lrx/Observable<+TT;>;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeDefer = { "OnSubscribeDefer", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, -1, -1, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeDefer;
}

@end

void RxInternalOperatorsOnSubscribeDefer_initWithRxFunctionsFunc0_(RxInternalOperatorsOnSubscribeDefer *self, id<RxFunctionsFunc0> observableFactory) {
  NSObject_init(self);
  JreStrongAssign(&self->observableFactory_, observableFactory);
}

RxInternalOperatorsOnSubscribeDefer *new_RxInternalOperatorsOnSubscribeDefer_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> observableFactory) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeDefer, initWithRxFunctionsFunc0_, observableFactory)
}

RxInternalOperatorsOnSubscribeDefer *create_RxInternalOperatorsOnSubscribeDefer_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> observableFactory) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeDefer, initWithRxFunctionsFunc0_, observableFactory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeDefer)
