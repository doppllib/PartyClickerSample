//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxCompletable.h"
#include "RxExceptionsExceptions.h"
#include "RxExceptionsOnErrorNotImplementedException.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsActions.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxFunctionsFunc3.h"
#include "RxFunctionsFunc4.h"
#include "RxFunctionsFunc5.h"
#include "RxFunctionsFunc6.h"
#include "RxFunctionsFunc7.h"
#include "RxFunctionsFunc8.h"
#include "RxFunctionsFunc9.h"
#include "RxFunctionsFuncN.h"
#include "RxInternalOperatorsCompletableFlatMapSingleToCompletable.h"
#include "RxInternalOperatorsSingleDelay.h"
#include "RxInternalOperatorsSingleDoAfterTerminate.h"
#include "RxInternalOperatorsSingleDoOnEvent.h"
#include "RxInternalOperatorsSingleDoOnSubscribe.h"
#include "RxInternalOperatorsSingleDoOnUnsubscribe.h"
#include "RxInternalOperatorsSingleFromCallable.h"
#include "RxInternalOperatorsSingleFromFuture.h"
#include "RxInternalOperatorsSingleFromObservable.h"
#include "RxInternalOperatorsSingleLiftObservableOperator.h"
#include "RxInternalOperatorsSingleObserveOn.h"
#include "RxInternalOperatorsSingleOnErrorReturn.h"
#include "RxInternalOperatorsSingleOnSubscribeDelaySubscriptionOther.h"
#include "RxInternalOperatorsSingleOnSubscribeMap.h"
#include "RxInternalOperatorsSingleOnSubscribeUsing.h"
#include "RxInternalOperatorsSingleOperatorOnErrorResumeNext.h"
#include "RxInternalOperatorsSingleOperatorZip.h"
#include "RxInternalOperatorsSingleTakeUntilCompletable.h"
#include "RxInternalOperatorsSingleTakeUntilObservable.h"
#include "RxInternalOperatorsSingleTakeUntilSingle.h"
#include "RxInternalOperatorsSingleTimeout.h"
#include "RxInternalOperatorsSingleToObservable.h"
#include "RxInternalUtilScalarSynchronousSingle.h"
#include "RxInternalUtilUtilityFunctions.h"
#include "RxNotification.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversSafeSubscriber.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSingle.h"
#include "RxSingleSubscriber.h"
#include "RxSinglesBlockingSingle.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSubscriptions.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Iterable.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/Future.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/TimeoutException.h"

@interface RxSingle ()

+ (RxObservable *)asObservableWithRxSingle:(RxSingle *)t;

- (id<RxSubscription>)unsafeSubscribeWithRxSubscriber:(RxSubscriber *)subscriber
                                          withBoolean:(jboolean)start;

@end

__attribute__((unused)) static RxObservable *RxSingle_asObservableWithRxSingle_(RxSingle *t);

__attribute__((unused)) static RxSingle *RxSingle_mapWithRxFunctionsFunc1_(RxSingle *self, id<RxFunctionsFunc1> func);

__attribute__((unused)) static id<RxSubscription> RxSingle_unsafeSubscribeWithRxSubscriber_withBoolean_(RxSingle *self, RxSubscriber *subscriber, jboolean start);

__attribute__((unused)) static id<RxSubscription> RxSingle_subscribeWithRxSingleSubscriber_(RxSingle *self, RxSingleSubscriber *te);

__attribute__((unused)) static RxSingle *RxSingle_subscribeOnWithRxScheduler_(RxSingle *self, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxSingle_toObservable(RxSingle *self);

__attribute__((unused)) static RxSingle *RxSingle_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxSingle_withRxScheduler_(RxSingle *self, jlong timeout, JavaUtilConcurrentTimeUnit *timeUnit, RxSingle *other, RxScheduler *scheduler);

__attribute__((unused)) static RxSingle *RxSingle_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxSingle *self, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static IOSObjectArray *RxSingle__Annotations$0();

@interface RxSingle_OnSubscribe : NSObject

@end

@interface RxSingle_Transformer : NSObject

@end

@interface RxSingle_1 : NSObject < RxSingle_OnSubscribe > {
 @public
  NSException *val$exception_;
}

- (instancetype)initWithNSException:(NSException *)capture$0;

- (void)callWithId:(RxSingleSubscriber *)te;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_1)

__attribute__((unused)) static void RxSingle_1_initWithNSException_(RxSingle_1 *self, NSException *capture$0);

__attribute__((unused)) static RxSingle_1 *new_RxSingle_1_initWithNSException_(NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_1 *create_RxSingle_1_initWithNSException_(NSException *capture$0);

@interface RxSingle_2 : NSObject < RxSingle_OnSubscribe > {
 @public
  RxSingle *val$source_;
}

- (instancetype)initWithRxSingle:(RxSingle *)capture$0;

- (void)callWithId:(RxSingleSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_2)

__attribute__((unused)) static void RxSingle_2_initWithRxSingle_(RxSingle_2 *self, RxSingle *capture$0);

__attribute__((unused)) static RxSingle_2 *new_RxSingle_2_initWithRxSingle_(RxSingle *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_2 *create_RxSingle_2_initWithRxSingle_(RxSingle *capture$0);

@interface RxSingle_2_1 : RxSingleSubscriber {
 @public
  RxSingleSubscriber *val$child_;
}

- (instancetype)initWithRxSingleSubscriber:(RxSingleSubscriber *)capture$0;

- (void)onSuccessWithId:(RxSingle *)innerSingle;

- (void)onErrorWithNSException:(NSException *)error;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_2_1)

__attribute__((unused)) static void RxSingle_2_1_initWithRxSingleSubscriber_(RxSingle_2_1 *self, RxSingleSubscriber *capture$0);

__attribute__((unused)) static RxSingle_2_1 *new_RxSingle_2_1_initWithRxSingleSubscriber_(RxSingleSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_2_1 *create_RxSingle_2_1_initWithRxSingleSubscriber_(RxSingleSubscriber *capture$0);

@interface RxSingle_3 : NSObject < RxFunctionsFuncN > {
 @public
  id<RxFunctionsFunc2> val$zipFunction_;
}

- (instancetype)initWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)capture$0;

- (id)callWithNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_3)

__attribute__((unused)) static void RxSingle_3_initWithRxFunctionsFunc2_(RxSingle_3 *self, id<RxFunctionsFunc2> capture$0);

__attribute__((unused)) static RxSingle_3 *new_RxSingle_3_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_3 *create_RxSingle_3_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> capture$0);

@interface RxSingle_4 : NSObject < RxFunctionsFuncN > {
 @public
  id<RxFunctionsFunc3> val$zipFunction_;
}

- (instancetype)initWithRxFunctionsFunc3:(id<RxFunctionsFunc3>)capture$0;

- (id)callWithNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_4)

__attribute__((unused)) static void RxSingle_4_initWithRxFunctionsFunc3_(RxSingle_4 *self, id<RxFunctionsFunc3> capture$0);

__attribute__((unused)) static RxSingle_4 *new_RxSingle_4_initWithRxFunctionsFunc3_(id<RxFunctionsFunc3> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_4 *create_RxSingle_4_initWithRxFunctionsFunc3_(id<RxFunctionsFunc3> capture$0);

@interface RxSingle_5 : NSObject < RxFunctionsFuncN > {
 @public
  id<RxFunctionsFunc4> val$zipFunction_;
}

- (instancetype)initWithRxFunctionsFunc4:(id<RxFunctionsFunc4>)capture$0;

- (id)callWithNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_5)

__attribute__((unused)) static void RxSingle_5_initWithRxFunctionsFunc4_(RxSingle_5 *self, id<RxFunctionsFunc4> capture$0);

__attribute__((unused)) static RxSingle_5 *new_RxSingle_5_initWithRxFunctionsFunc4_(id<RxFunctionsFunc4> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_5 *create_RxSingle_5_initWithRxFunctionsFunc4_(id<RxFunctionsFunc4> capture$0);

@interface RxSingle_6 : NSObject < RxFunctionsFuncN > {
 @public
  id<RxFunctionsFunc5> val$zipFunction_;
}

- (instancetype)initWithRxFunctionsFunc5:(id<RxFunctionsFunc5>)capture$0;

- (id)callWithNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_6)

__attribute__((unused)) static void RxSingle_6_initWithRxFunctionsFunc5_(RxSingle_6 *self, id<RxFunctionsFunc5> capture$0);

__attribute__((unused)) static RxSingle_6 *new_RxSingle_6_initWithRxFunctionsFunc5_(id<RxFunctionsFunc5> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_6 *create_RxSingle_6_initWithRxFunctionsFunc5_(id<RxFunctionsFunc5> capture$0);

@interface RxSingle_7 : NSObject < RxFunctionsFuncN > {
 @public
  id<RxFunctionsFunc6> val$zipFunction_;
}

- (instancetype)initWithRxFunctionsFunc6:(id<RxFunctionsFunc6>)capture$0;

- (id)callWithNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_7)

__attribute__((unused)) static void RxSingle_7_initWithRxFunctionsFunc6_(RxSingle_7 *self, id<RxFunctionsFunc6> capture$0);

__attribute__((unused)) static RxSingle_7 *new_RxSingle_7_initWithRxFunctionsFunc6_(id<RxFunctionsFunc6> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_7 *create_RxSingle_7_initWithRxFunctionsFunc6_(id<RxFunctionsFunc6> capture$0);

@interface RxSingle_8 : NSObject < RxFunctionsFuncN > {
 @public
  id<RxFunctionsFunc7> val$zipFunction_;
}

- (instancetype)initWithRxFunctionsFunc7:(id<RxFunctionsFunc7>)capture$0;

- (id)callWithNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_8)

__attribute__((unused)) static void RxSingle_8_initWithRxFunctionsFunc7_(RxSingle_8 *self, id<RxFunctionsFunc7> capture$0);

__attribute__((unused)) static RxSingle_8 *new_RxSingle_8_initWithRxFunctionsFunc7_(id<RxFunctionsFunc7> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_8 *create_RxSingle_8_initWithRxFunctionsFunc7_(id<RxFunctionsFunc7> capture$0);

@interface RxSingle_9 : NSObject < RxFunctionsFuncN > {
 @public
  id<RxFunctionsFunc8> val$zipFunction_;
}

- (instancetype)initWithRxFunctionsFunc8:(id<RxFunctionsFunc8>)capture$0;

- (id)callWithNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_9)

__attribute__((unused)) static void RxSingle_9_initWithRxFunctionsFunc8_(RxSingle_9 *self, id<RxFunctionsFunc8> capture$0);

__attribute__((unused)) static RxSingle_9 *new_RxSingle_9_initWithRxFunctionsFunc8_(id<RxFunctionsFunc8> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_9 *create_RxSingle_9_initWithRxFunctionsFunc8_(id<RxFunctionsFunc8> capture$0);

@interface RxSingle_10 : NSObject < RxFunctionsFuncN > {
 @public
  id<RxFunctionsFunc9> val$zipFunction_;
}

- (instancetype)initWithRxFunctionsFunc9:(id<RxFunctionsFunc9>)capture$0;

- (id)callWithNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_10)

__attribute__((unused)) static void RxSingle_10_initWithRxFunctionsFunc9_(RxSingle_10 *self, id<RxFunctionsFunc9> capture$0);

__attribute__((unused)) static RxSingle_10 *new_RxSingle_10_initWithRxFunctionsFunc9_(id<RxFunctionsFunc9> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_10 *create_RxSingle_10_initWithRxFunctionsFunc9_(id<RxFunctionsFunc9> capture$0);

@interface RxSingle_11 : RxSingleSubscriber

- (instancetype)init;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSuccessWithId:(id)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_11)

__attribute__((unused)) static void RxSingle_11_init(RxSingle_11 *self);

__attribute__((unused)) static RxSingle_11 *new_RxSingle_11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_11 *create_RxSingle_11_init();

@interface RxSingle_12 : RxSingleSubscriber {
 @public
  id<RxFunctionsAction1> val$onSuccess_;
}

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSuccessWithId:(id)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_12)

__attribute__((unused)) static void RxSingle_12_initWithRxFunctionsAction1_(RxSingle_12 *self, id<RxFunctionsAction1> capture$0);

__attribute__((unused)) static RxSingle_12 *new_RxSingle_12_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_12 *create_RxSingle_12_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0);

@interface RxSingle_13 : RxSingleSubscriber {
 @public
  id<RxFunctionsAction1> val$onError_;
  id<RxFunctionsAction1> val$onSuccess_;
}

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0
                    withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$1;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSuccessWithId:(id)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_13)

__attribute__((unused)) static void RxSingle_13_initWithRxFunctionsAction1_withRxFunctionsAction1_(RxSingle_13 *self, id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1);

__attribute__((unused)) static RxSingle_13 *new_RxSingle_13_initWithRxFunctionsAction1_withRxFunctionsAction1_(id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_13 *create_RxSingle_13_initWithRxFunctionsAction1_withRxFunctionsAction1_(id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1);

@interface RxSingle_14 : RxSingleSubscriber {
 @public
  id<RxObserver> val$observer_;
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0;

- (void)onSuccessWithId:(id)value;

- (void)onErrorWithNSException:(NSException *)error;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_14)

__attribute__((unused)) static void RxSingle_14_initWithRxObserver_(RxSingle_14 *self, id<RxObserver> capture$0);

__attribute__((unused)) static RxSingle_14 *new_RxSingle_14_initWithRxObserver_(id<RxObserver> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_14 *create_RxSingle_14_initWithRxObserver_(id<RxObserver> capture$0);

@interface RxSingle_15 : NSObject < RxSingle_OnSubscribe > {
 @public
  RxSingle *this$0_;
  RxScheduler *val$scheduler_;
}

- (instancetype)initWithRxSingle:(RxSingle *)outer$
                 withRxScheduler:(RxScheduler *)capture$0;

- (void)callWithId:(RxSingleSubscriber *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_15)

__attribute__((unused)) static void RxSingle_15_initWithRxSingle_withRxScheduler_(RxSingle_15 *self, RxSingle *outer$, RxScheduler *capture$0);

__attribute__((unused)) static RxSingle_15 *new_RxSingle_15_initWithRxSingle_withRxScheduler_(RxSingle *outer$, RxScheduler *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_15 *create_RxSingle_15_initWithRxSingle_withRxScheduler_(RxSingle *outer$, RxScheduler *capture$0);

@interface RxSingle_15_1 : NSObject < RxFunctionsAction0 > {
 @public
  RxSingle_15 *this$0_;
  RxSingleSubscriber *val$t_;
  RxScheduler_Worker *val$w_;
}

- (instancetype)initWithRxSingle_15:(RxSingle_15 *)outer$
             withRxSingleSubscriber:(RxSingleSubscriber *)capture$0
             withRxScheduler_Worker:(RxScheduler_Worker *)capture$1;

- (void)call;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_15_1)

__attribute__((unused)) static void RxSingle_15_1_initWithRxSingle_15_withRxSingleSubscriber_withRxScheduler_Worker_(RxSingle_15_1 *self, RxSingle_15 *outer$, RxSingleSubscriber *capture$0, RxScheduler_Worker *capture$1);

__attribute__((unused)) static RxSingle_15_1 *new_RxSingle_15_1_initWithRxSingle_15_withRxSingleSubscriber_withRxScheduler_Worker_(RxSingle_15 *outer$, RxSingleSubscriber *capture$0, RxScheduler_Worker *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_15_1 *create_RxSingle_15_1_initWithRxSingle_15_withRxSingleSubscriber_withRxScheduler_Worker_(RxSingle_15 *outer$, RxSingleSubscriber *capture$0, RxScheduler_Worker *capture$1);

@interface RxSingle_15_1_1 : RxSingleSubscriber {
 @public
  RxSingle_15_1 *this$0_;
}

- (instancetype)initWithRxSingle_15_1:(RxSingle_15_1 *)outer$;

- (void)onSuccessWithId:(id)value;

- (void)onErrorWithNSException:(NSException *)error;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_15_1_1)

__attribute__((unused)) static void RxSingle_15_1_1_initWithRxSingle_15_1_(RxSingle_15_1_1 *self, RxSingle_15_1 *outer$);

__attribute__((unused)) static RxSingle_15_1_1 *new_RxSingle_15_1_1_initWithRxSingle_15_1_(RxSingle_15_1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_15_1_1 *create_RxSingle_15_1_1_initWithRxSingle_15_1_(RxSingle_15_1 *outer$);

@interface RxSingle_16 : NSObject < RxFunctionsAction1 > {
 @public
  id<RxFunctionsAction1> val$onError_;
}

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0;

- (void)callWithId:(NSException *)throwable;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_16)

__attribute__((unused)) static void RxSingle_16_initWithRxFunctionsAction1_(RxSingle_16 *self, id<RxFunctionsAction1> capture$0);

__attribute__((unused)) static RxSingle_16 *new_RxSingle_16_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_16 *create_RxSingle_16_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0);

@interface RxSingle_17 : NSObject < RxFunctionsAction1 > {
 @public
  id<RxFunctionsAction1> val$onNotification_;
}

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0;

- (void)callWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_17)

__attribute__((unused)) static void RxSingle_17_initWithRxFunctionsAction1_(RxSingle_17 *self, id<RxFunctionsAction1> capture$0);

__attribute__((unused)) static RxSingle_17 *new_RxSingle_17_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_17 *create_RxSingle_17_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0);

@interface RxSingle_18 : NSObject < RxFunctionsAction1 > {
 @public
  id<RxFunctionsAction1> val$onNotification_;
}

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0;

- (void)callWithId:(NSException *)throwable;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_18)

__attribute__((unused)) static void RxSingle_18_initWithRxFunctionsAction1_(RxSingle_18 *self, id<RxFunctionsAction1> capture$0);

__attribute__((unused)) static RxSingle_18 *new_RxSingle_18_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_18 *create_RxSingle_18_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0);

@interface RxSingle_19 : NSObject < RxSingle_OnSubscribe > {
 @public
  id<JavaUtilConcurrentCallable> val$singleFactory_;
}

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)capture$0;

- (void)callWithId:(RxSingleSubscriber *)singleSubscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSingle_19)

__attribute__((unused)) static void RxSingle_19_initWithJavaUtilConcurrentCallable_(RxSingle_19 *self, id<JavaUtilConcurrentCallable> capture$0);

__attribute__((unused)) static RxSingle_19 *new_RxSingle_19_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSingle_19 *create_RxSingle_19_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> capture$0);

@implementation RxSingle

- (instancetype)initWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)f {
  RxSingle_initWithRxSingle_OnSubscribe_(self, f);
  return self;
}

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)f {
  RxSingle_initWithRxObservable_OnSubscribe_(self, f);
  return self;
}

+ (RxSingle *)createWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)f {
  return RxSingle_createWithRxSingle_OnSubscribe_(f);
}

- (RxSingle *)liftWithRxObservable_Operator:(id<RxObservable_Operator>)lift {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleLiftObservableOperator_initWithRxSingle_OnSubscribe_withRxObservable_Operator_(self->onSubscribe_, lift));
}

- (RxSingle *)composeWithRxSingle_Transformer:(id<RxSingle_Transformer>)transformer {
  return [((id<RxSingle_Transformer>) nil_chk((transformer))) callWithId:self];
}

+ (RxObservable *)asObservableWithRxSingle:(RxSingle *)t {
  return RxSingle_asObservableWithRxSingle_(t);
}

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2 {
  return RxSingle_concatWithRxSingle_withRxSingle_(t1, t2);
}

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3 {
  return RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_(t1, t2, t3);
}

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4 {
  return RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4);
}

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4
                        withRxSingle:(RxSingle *)t5 {
  return RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4, t5);
}

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4
                        withRxSingle:(RxSingle *)t5
                        withRxSingle:(RxSingle *)t6 {
  return RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4, t5, t6);
}

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4
                        withRxSingle:(RxSingle *)t5
                        withRxSingle:(RxSingle *)t6
                        withRxSingle:(RxSingle *)t7 {
  return RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4, t5, t6, t7);
}

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4
                        withRxSingle:(RxSingle *)t5
                        withRxSingle:(RxSingle *)t6
                        withRxSingle:(RxSingle *)t7
                        withRxSingle:(RxSingle *)t8 {
  return RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4, t5, t6, t7, t8);
}

+ (RxObservable *)concatWithRxSingle:(RxSingle *)t1
                        withRxSingle:(RxSingle *)t2
                        withRxSingle:(RxSingle *)t3
                        withRxSingle:(RxSingle *)t4
                        withRxSingle:(RxSingle *)t5
                        withRxSingle:(RxSingle *)t6
                        withRxSingle:(RxSingle *)t7
                        withRxSingle:(RxSingle *)t8
                        withRxSingle:(RxSingle *)t9 {
  return RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4, t5, t6, t7, t8, t9);
}

+ (RxSingle *)errorWithNSException:(NSException *)exception {
  return RxSingle_errorWithNSException_(exception);
}

+ (RxSingle *)fromWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future {
  return RxSingle_fromWithJavaUtilConcurrentFuture_(future);
}

+ (RxSingle *)fromWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                      withLong:(jlong)timeout
                withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxSingle_fromWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(future, timeout, unit);
}

+ (RxSingle *)fromWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                               withRxScheduler:(RxScheduler *)scheduler {
  return RxSingle_fromWithJavaUtilConcurrentFuture_withRxScheduler_(future, scheduler);
}

+ (RxSingle *)fromCallableWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)func {
  return RxSingle_fromCallableWithJavaUtilConcurrentCallable_(func);
}

+ (RxSingle *)justWithId:(id)value {
  return RxSingle_justWithId_(value);
}

+ (RxSingle *)mergeWithRxSingle:(RxSingle *)source {
  return RxSingle_mergeWithRxSingle_(source);
}

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2 {
  return RxSingle_mergeWithRxSingle_withRxSingle_(t1, t2);
}

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3 {
  return RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_(t1, t2, t3);
}

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4 {
  return RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4);
}

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4
                       withRxSingle:(RxSingle *)t5 {
  return RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4, t5);
}

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4
                       withRxSingle:(RxSingle *)t5
                       withRxSingle:(RxSingle *)t6 {
  return RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4, t5, t6);
}

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4
                       withRxSingle:(RxSingle *)t5
                       withRxSingle:(RxSingle *)t6
                       withRxSingle:(RxSingle *)t7 {
  return RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4, t5, t6, t7);
}

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4
                       withRxSingle:(RxSingle *)t5
                       withRxSingle:(RxSingle *)t6
                       withRxSingle:(RxSingle *)t7
                       withRxSingle:(RxSingle *)t8 {
  return RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4, t5, t6, t7, t8);
}

+ (RxObservable *)mergeWithRxSingle:(RxSingle *)t1
                       withRxSingle:(RxSingle *)t2
                       withRxSingle:(RxSingle *)t3
                       withRxSingle:(RxSingle *)t4
                       withRxSingle:(RxSingle *)t5
                       withRxSingle:(RxSingle *)t6
                       withRxSingle:(RxSingle *)t7
                       withRxSingle:(RxSingle *)t8
                       withRxSingle:(RxSingle *)t9 {
  return RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(t1, t2, t3, t4, t5, t6, t7, t8, t9);
}

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
         withRxFunctionsFunc2:(id<RxFunctionsFunc2>)zipFunction {
  return RxSingle_zipWithRxSingle_withRxSingle_withRxFunctionsFunc2_(s1, s2, zipFunction);
}

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
         withRxFunctionsFunc3:(id<RxFunctionsFunc3>)zipFunction {
  return RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc3_(s1, s2, s3, zipFunction);
}

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
         withRxFunctionsFunc4:(id<RxFunctionsFunc4>)zipFunction {
  return RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc4_(s1, s2, s3, s4, zipFunction);
}

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
                 withRxSingle:(RxSingle *)s5
         withRxFunctionsFunc5:(id<RxFunctionsFunc5>)zipFunction {
  return RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc5_(s1, s2, s3, s4, s5, zipFunction);
}

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
                 withRxSingle:(RxSingle *)s5
                 withRxSingle:(RxSingle *)s6
         withRxFunctionsFunc6:(id<RxFunctionsFunc6>)zipFunction {
  return RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc6_(s1, s2, s3, s4, s5, s6, zipFunction);
}

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
                 withRxSingle:(RxSingle *)s5
                 withRxSingle:(RxSingle *)s6
                 withRxSingle:(RxSingle *)s7
         withRxFunctionsFunc7:(id<RxFunctionsFunc7>)zipFunction {
  return RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc7_(s1, s2, s3, s4, s5, s6, s7, zipFunction);
}

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
                 withRxSingle:(RxSingle *)s5
                 withRxSingle:(RxSingle *)s6
                 withRxSingle:(RxSingle *)s7
                 withRxSingle:(RxSingle *)s8
         withRxFunctionsFunc8:(id<RxFunctionsFunc8>)zipFunction {
  return RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc8_(s1, s2, s3, s4, s5, s6, s7, s8, zipFunction);
}

+ (RxSingle *)zipWithRxSingle:(RxSingle *)s1
                 withRxSingle:(RxSingle *)s2
                 withRxSingle:(RxSingle *)s3
                 withRxSingle:(RxSingle *)s4
                 withRxSingle:(RxSingle *)s5
                 withRxSingle:(RxSingle *)s6
                 withRxSingle:(RxSingle *)s7
                 withRxSingle:(RxSingle *)s8
                 withRxSingle:(RxSingle *)s9
         withRxFunctionsFunc9:(id<RxFunctionsFunc9>)zipFunction {
  return RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc9_(s1, s2, s3, s4, s5, s6, s7, s8, s9, zipFunction);
}

+ (RxSingle *)zipWithJavaLangIterable:(id<JavaLangIterable>)singles
                 withRxFunctionsFuncN:(id<RxFunctionsFuncN>)zipFunction {
  return RxSingle_zipWithJavaLangIterable_withRxFunctionsFuncN_(singles, zipFunction);
}

- (RxObservable *)concatWithWithRxSingle:(RxSingle *)t1 {
  return RxSingle_concatWithRxSingle_withRxSingle_(self, t1);
}

- (RxSingle *)flatMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func {
  if ([self isKindOfClass:[RxInternalUtilScalarSynchronousSingle class]]) {
    return [((RxInternalUtilScalarSynchronousSingle *) cast_chk(self, [RxInternalUtilScalarSynchronousSingle class])) scalarFlatMapWithRxFunctionsFunc1:func];
  }
  return RxSingle_mergeWithRxSingle_(RxSingle_mapWithRxFunctionsFunc1_(self, func));
}

- (RxObservable *)flatMapObservableWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func {
  return RxObservable_mergeWithRxObservable_(RxSingle_asObservableWithRxSingle_(RxSingle_mapWithRxFunctionsFunc1_(self, func)));
}

- (RxCompletable *)flatMapCompletableWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func {
  return RxCompletable_createWithRxCompletable_OnSubscribe_(create_RxInternalOperatorsCompletableFlatMapSingleToCompletable_initWithRxSingle_withRxFunctionsFunc1_(self, func));
}

- (RxSingle *)mapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func {
  return RxSingle_mapWithRxFunctionsFunc1_(self, func);
}

- (RxObservable *)mergeWithWithRxSingle:(RxSingle *)t1 {
  return RxSingle_mergeWithRxSingle_withRxSingle_(self, t1);
}

- (RxSingle *)observeOnWithRxScheduler:(RxScheduler *)scheduler {
  if ([self isKindOfClass:[RxInternalUtilScalarSynchronousSingle class]]) {
    return [((RxInternalUtilScalarSynchronousSingle *) cast_chk(self, [RxInternalUtilScalarSynchronousSingle class])) scalarScheduleOnWithRxScheduler:scheduler];
  }
  if (scheduler == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"scheduler is null");
  }
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleObserveOn_initWithRxSingle_OnSubscribe_withRxScheduler_(onSubscribe_, scheduler));
}

- (RxSingle *)onErrorReturnWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunction {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleOnErrorReturn_initWithRxSingle_OnSubscribe_withRxFunctionsFunc1_(onSubscribe_, resumeFunction));
}

- (RxSingle *)onErrorResumeNextWithRxSingle:(RxSingle *)resumeSingleInCaseOfError {
  return create_RxSingle_initWithRxSingle_OnSubscribe_(RxInternalOperatorsSingleOperatorOnErrorResumeNext_withOtherWithRxSingle_withRxSingle_(self, resumeSingleInCaseOfError));
}

- (RxSingle *)onErrorResumeNextWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunctionInCaseOfError {
  return create_RxSingle_initWithRxSingle_OnSubscribe_(RxInternalOperatorsSingleOperatorOnErrorResumeNext_withFunctionWithRxSingle_withRxFunctionsFunc1_(self, resumeFunctionInCaseOfError));
}

- (id<RxSubscription>)subscribe {
  return RxSingle_subscribeWithRxSingleSubscriber_(self, create_RxSingle_11_init());
}

- (id<RxSubscription>)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onSuccess {
  if (onSuccess == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onSuccess can not be null");
  }
  return RxSingle_subscribeWithRxSingleSubscriber_(self, create_RxSingle_12_initWithRxFunctionsAction1_(onSuccess));
}

- (id<RxSubscription>)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onSuccess
                               withRxFunctionsAction1:(id<RxFunctionsAction1>)onError {
  if (onSuccess == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onSuccess can not be null");
  }
  if (onError == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onError can not be null");
  }
  return RxSingle_subscribeWithRxSingleSubscriber_(self, create_RxSingle_13_initWithRxFunctionsAction1_withRxFunctionsAction1_(onError, onSuccess));
}

- (id<RxSubscription>)unsafeSubscribeWithRxSubscriber:(RxSubscriber *)subscriber {
  return RxSingle_unsafeSubscribeWithRxSubscriber_withBoolean_(self, subscriber, true);
}

- (id<RxSubscription>)unsafeSubscribeWithRxSubscriber:(RxSubscriber *)subscriber
                                          withBoolean:(jboolean)start {
  return RxSingle_unsafeSubscribeWithRxSubscriber_withBoolean_(self, subscriber, start);
}

- (id<RxSubscription>)subscribeWithRxObserver:(id<RxObserver>)observer {
  if (observer == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"observer is null");
  }
  return RxSingle_subscribeWithRxSingleSubscriber_(self, create_RxSingle_14_initWithRxObserver_(observer));
}

- (id<RxSubscription>)subscribeWithRxSubscriber:(RxSubscriber *)subscriber {
  if (subscriber == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"observer can not be null");
  }
  [subscriber onStart];
  if (!([subscriber isKindOfClass:[RxObserversSafeSubscriber class]])) {
    return RxSingle_unsafeSubscribeWithRxSubscriber_withBoolean_(self, create_RxObserversSafeSubscriber_initWithRxSubscriber_(subscriber), false);
  }
  return RxSingle_unsafeSubscribeWithRxSubscriber_withBoolean_(self, subscriber, true);
}

- (id<RxSubscription>)subscribeWithRxSingleSubscriber:(RxSingleSubscriber *)te {
  return RxSingle_subscribeWithRxSingleSubscriber_(self, te);
}

- (RxSingle *)subscribeOnWithRxScheduler:(RxScheduler *)scheduler {
  return RxSingle_subscribeOnWithRxScheduler_(self, scheduler);
}

- (RxSingle *)takeUntilWithRxCompletable:(RxCompletable *)other {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleTakeUntilCompletable_initWithRxSingle_OnSubscribe_withRxCompletable_(onSubscribe_, other));
}

- (RxSingle *)takeUntilWithRxObservable:(RxObservable *)other {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleTakeUntilObservable_initWithRxSingle_OnSubscribe_withRxObservable_(onSubscribe_, other));
}

- (RxSingle *)takeUntilWithRxSingle:(RxSingle *)other {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleTakeUntilSingle_initWithRxSingle_OnSubscribe_withRxSingle_(onSubscribe_, other));
}

- (id)toWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)converter {
  return [((id<RxFunctionsFunc1>) nil_chk(converter)) callWithId:self];
}

- (RxObservable *)toObservable {
  return RxSingle_toObservable(self);
}

- (RxCompletable *)toCompletable {
  return RxCompletable_fromSingleWithRxSingle_(self);
}

- (RxSingle *)timeoutWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit {
  return RxSingle_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxSingle_withRxScheduler_(self, timeout, timeUnit, nil, RxSchedulersSchedulers_computation());
}

- (RxSingle *)timeoutWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
              withRxScheduler:(RxScheduler *)scheduler {
  return RxSingle_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxSingle_withRxScheduler_(self, timeout, timeUnit, nil, scheduler);
}

- (RxSingle *)timeoutWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
                 withRxSingle:(RxSingle *)other {
  return RxSingle_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxSingle_withRxScheduler_(self, timeout, timeUnit, other, RxSchedulersSchedulers_computation());
}

- (RxSingle *)timeoutWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
                 withRxSingle:(RxSingle *)other
              withRxScheduler:(RxScheduler *)scheduler {
  return RxSingle_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxSingle_withRxScheduler_(self, timeout, timeUnit, other, scheduler);
}

- (RxSinglesBlockingSingle *)toBlocking {
  return RxSinglesBlockingSingle_fromWithRxSingle_(self);
}

- (RxSingle *)zipWithWithRxSingle:(RxSingle *)other
             withRxFunctionsFunc2:(id<RxFunctionsFunc2>)zipFunction {
  return RxSingle_zipWithRxSingle_withRxSingle_withRxFunctionsFunc2_(self, other, zipFunction);
}

- (RxSingle *)doOnErrorWithRxFunctionsAction1:(id<RxFunctionsAction1>)onError {
  if (onError == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onError is null");
  }
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleDoOnEvent_initWithRxSingle_withRxFunctionsAction1_withRxFunctionsAction1_(self, RxFunctionsActions_empty(), create_RxSingle_16_initWithRxFunctionsAction1_(onError)));
}

- (RxSingle *)doOnEachWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNotification {
  if (onNotification == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onNotification is null");
  }
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleDoOnEvent_initWithRxSingle_withRxFunctionsAction1_withRxFunctionsAction1_(self, create_RxSingle_17_initWithRxFunctionsAction1_(onNotification), create_RxSingle_18_initWithRxFunctionsAction1_(onNotification)));
}

- (RxSingle *)doOnSuccessWithRxFunctionsAction1:(id<RxFunctionsAction1>)onSuccess {
  if (onSuccess == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onSuccess is null");
  }
  id<RxFunctionsAction1> empty = RxFunctionsActions_empty();
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleDoOnEvent_initWithRxSingle_withRxFunctionsAction1_withRxFunctionsAction1_(self, onSuccess, empty));
}

- (RxSingle *)doOnSubscribeWithRxFunctionsAction0:(id<RxFunctionsAction0>)subscribe {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleDoOnSubscribe_initWithRxSingle_OnSubscribe_withRxFunctionsAction0_(onSubscribe_, subscribe));
}

- (RxSingle *)delayWithLong:(jlong)delay
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
            withRxScheduler:(RxScheduler *)scheduler {
  return RxSingle_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, delay, unit, scheduler);
}

- (RxSingle *)delayWithLong:(jlong)delay
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxSingle_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, delay, unit, RxSchedulersSchedulers_computation());
}

+ (RxSingle *)deferWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)singleFactory {
  return RxSingle_deferWithJavaUtilConcurrentCallable_(singleFactory);
}

- (RxSingle *)doOnUnsubscribeWithRxFunctionsAction0:(id<RxFunctionsAction0>)action {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleDoOnUnsubscribe_initWithRxSingle_OnSubscribe_withRxFunctionsAction0_(onSubscribe_, action));
}

- (RxSingle *)doAfterTerminateWithRxFunctionsAction0:(id<RxFunctionsAction0>)action {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleDoAfterTerminate_initWithRxSingle_withRxFunctionsAction0_(self, action));
}

+ (IOSObjectArray *)iterableToArrayWithJavaLangIterable:(id<JavaLangIterable>)singlesIterable {
  return RxSingle_iterableToArrayWithJavaLangIterable_(singlesIterable);
}

- (RxSingle *)retry {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxSingle_toObservable(self))) retry])) toSingle];
}

- (RxSingle *)retryWithLong:(jlong)count {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxSingle_toObservable(self))) retryWithLong:count])) toSingle];
}

- (RxSingle *)retryWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)predicate {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxSingle_toObservable(self))) retryWithRxFunctionsFunc2:predicate])) toSingle];
}

- (RxSingle *)retryWhenWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxSingle_toObservable(self))) retryWhenWithRxFunctionsFunc1:notificationHandler])) toSingle];
}

+ (RxSingle *)using__WithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFactory
                     withRxFunctionsFunc1:(id<RxFunctionsFunc1>)singleFactory
                   withRxFunctionsAction1:(id<RxFunctionsAction1>)disposeAction {
  return RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_(resourceFactory, singleFactory, disposeAction);
}

+ (RxSingle *)using__WithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFactory
                     withRxFunctionsFunc1:(id<RxFunctionsFunc1>)singleFactory
                   withRxFunctionsAction1:(id<RxFunctionsAction1>)disposeAction
                              withBoolean:(jboolean)disposeEagerly {
  return RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, singleFactory, disposeAction, disposeEagerly);
}

- (RxSingle *)delaySubscriptionWithRxObservable:(RxObservable *)other {
  if (other == nil) {
    @throw create_JavaLangNullPointerException_init();
  }
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleOnSubscribeDelaySubscriptionOther_initWithRxSingle_withRxObservable_(self, other));
}

- (void)dealloc {
  RELEASE_(onSubscribe_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, 3, 4, -1 },
    { NULL, "LRxSingle;", 0x9, 5, 0, -1, 6, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 7, 8, -1, 9, -1, -1 },
    { NULL, "LRxSingle;", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "LRxObservable;", 0xa, 13, 14, -1, 15, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 16, 17, -1, 18, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 16, 19, -1, 20, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 16, 21, -1, 22, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 16, 23, -1, 24, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 16, 25, -1, 26, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 16, 27, -1, 28, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 16, 29, -1, 30, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 16, 31, -1, 32, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 33, 34, -1, 35, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 36, 37, -1, 38, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 36, 39, -1, 40, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 36, 41, -1, 42, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 43, 44, -1, 45, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 46, 47, -1, 48, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 49, 14, -1, 50, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 49, 17, -1, 18, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 49, 19, -1, 20, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 49, 21, -1, 22, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 49, 23, -1, 24, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 49, 25, -1, 26, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 49, 27, -1, 28, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 49, 29, -1, 30, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 49, 31, -1, 32, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 51, 52, -1, 53, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 51, 54, -1, 55, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 51, 56, -1, 57, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 51, 58, -1, 59, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 51, 60, -1, 61, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 51, 62, -1, 63, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 51, 64, -1, 65, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 51, 66, -1, 67, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 51, 68, -1, 69, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 70, 14, -1, 71, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 72, 73, -1, 74, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 75, 73, -1, 76, -1, -1 },
    { NULL, "LRxCompletable;", 0x11, 77, 73, -1, 78, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 79, 73, -1, 80, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 81, 14, -1, 71, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 82, 83, -1, 84, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 85, 73, -1, 86, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 87, 14, -1, 88, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 87, 73, -1, 89, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 90, 91, -1, 92, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 90, 93, -1, 94, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 95, 96, -1, 97, -1, -1 },
    { NULL, "LRxSubscription;", 0x2, 95, 98, -1, 99, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 90, 100, -1, 101, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 90, 96, -1, 97, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 90, 102, -1, 103, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 104, 83, -1, 84, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 105, 106, -1, 107, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 105, 108, -1, 109, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 105, 14, -1, 110, -1, -1 },
    { NULL, "LNSObject;", 0x11, 111, 73, -1, 112, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 113, -1, -1 },
    { NULL, "LRxCompletable;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 114, 115, -1, 116, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 114, 117, -1, 118, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 114, 119, -1, 120, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 114, 121, -1, 122, -1, -1 },
    { NULL, "LRxSinglesBlockingSingle;", 0x11, -1, -1, -1, 123, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 124, 125, -1, 126, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 127, 91, -1, 128, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 129, 91, -1, 130, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 131, 91, -1, 132, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 133, 134, -1, 135, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 136, 117, -1, 118, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 136, 115, -1, 116, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 137, 44, -1, 138, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 139, 134, -1, 135, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 140, 134, -1, 135, -1, -1 },
    { NULL, "[LRxSingle;", 0x8, 141, 142, -1, 143, -1, -1 },
    { NULL, "LRxSingle;", 0x11, -1, -1, -1, 144, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 145, 146, -1, 147, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 145, 148, -1, 149, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 150, 73, -1, 151, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 152, 153, -1, 154, -1, -1 },
    { NULL, "LRxSingle;", 0x9, 152, 155, -1, 156, -1, -1 },
    { NULL, "LRxSingle;", 0x11, 157, 108, -1, 158, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingle_OnSubscribe:);
  methods[1].selector = @selector(initWithRxObservable_OnSubscribe:);
  methods[2].selector = @selector(createWithRxSingle_OnSubscribe:);
  methods[3].selector = @selector(liftWithRxObservable_Operator:);
  methods[4].selector = @selector(composeWithRxSingle_Transformer:);
  methods[5].selector = @selector(asObservableWithRxSingle:);
  methods[6].selector = @selector(concatWithRxSingle:withRxSingle:);
  methods[7].selector = @selector(concatWithRxSingle:withRxSingle:withRxSingle:);
  methods[8].selector = @selector(concatWithRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[9].selector = @selector(concatWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[10].selector = @selector(concatWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[11].selector = @selector(concatWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[12].selector = @selector(concatWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[13].selector = @selector(concatWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[14].selector = @selector(errorWithNSException:);
  methods[15].selector = @selector(fromWithJavaUtilConcurrentFuture:);
  methods[16].selector = @selector(fromWithJavaUtilConcurrentFuture:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[17].selector = @selector(fromWithJavaUtilConcurrentFuture:withRxScheduler:);
  methods[18].selector = @selector(fromCallableWithJavaUtilConcurrentCallable:);
  methods[19].selector = @selector(justWithId:);
  methods[20].selector = @selector(mergeWithRxSingle:);
  methods[21].selector = @selector(mergeWithRxSingle:withRxSingle:);
  methods[22].selector = @selector(mergeWithRxSingle:withRxSingle:withRxSingle:);
  methods[23].selector = @selector(mergeWithRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[24].selector = @selector(mergeWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[25].selector = @selector(mergeWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[26].selector = @selector(mergeWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[27].selector = @selector(mergeWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[28].selector = @selector(mergeWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:);
  methods[29].selector = @selector(zipWithRxSingle:withRxSingle:withRxFunctionsFunc2:);
  methods[30].selector = @selector(zipWithRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc3:);
  methods[31].selector = @selector(zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc4:);
  methods[32].selector = @selector(zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc5:);
  methods[33].selector = @selector(zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc6:);
  methods[34].selector = @selector(zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc7:);
  methods[35].selector = @selector(zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc8:);
  methods[36].selector = @selector(zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc9:);
  methods[37].selector = @selector(zipWithJavaLangIterable:withRxFunctionsFuncN:);
  methods[38].selector = @selector(concatWithWithRxSingle:);
  methods[39].selector = @selector(flatMapWithRxFunctionsFunc1:);
  methods[40].selector = @selector(flatMapObservableWithRxFunctionsFunc1:);
  methods[41].selector = @selector(flatMapCompletableWithRxFunctionsFunc1:);
  methods[42].selector = @selector(mapWithRxFunctionsFunc1:);
  methods[43].selector = @selector(mergeWithWithRxSingle:);
  methods[44].selector = @selector(observeOnWithRxScheduler:);
  methods[45].selector = @selector(onErrorReturnWithRxFunctionsFunc1:);
  methods[46].selector = @selector(onErrorResumeNextWithRxSingle:);
  methods[47].selector = @selector(onErrorResumeNextWithRxFunctionsFunc1:);
  methods[48].selector = @selector(subscribe);
  methods[49].selector = @selector(subscribeWithRxFunctionsAction1:);
  methods[50].selector = @selector(subscribeWithRxFunctionsAction1:withRxFunctionsAction1:);
  methods[51].selector = @selector(unsafeSubscribeWithRxSubscriber:);
  methods[52].selector = @selector(unsafeSubscribeWithRxSubscriber:withBoolean:);
  methods[53].selector = @selector(subscribeWithRxObserver:);
  methods[54].selector = @selector(subscribeWithRxSubscriber:);
  methods[55].selector = @selector(subscribeWithRxSingleSubscriber:);
  methods[56].selector = @selector(subscribeOnWithRxScheduler:);
  methods[57].selector = @selector(takeUntilWithRxCompletable:);
  methods[58].selector = @selector(takeUntilWithRxObservable:);
  methods[59].selector = @selector(takeUntilWithRxSingle:);
  methods[60].selector = @selector(toWithRxFunctionsFunc1:);
  methods[61].selector = @selector(toObservable);
  methods[62].selector = @selector(toCompletable);
  methods[63].selector = @selector(timeoutWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[64].selector = @selector(timeoutWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[65].selector = @selector(timeoutWithLong:withJavaUtilConcurrentTimeUnit:withRxSingle:);
  methods[66].selector = @selector(timeoutWithLong:withJavaUtilConcurrentTimeUnit:withRxSingle:withRxScheduler:);
  methods[67].selector = @selector(toBlocking);
  methods[68].selector = @selector(zipWithWithRxSingle:withRxFunctionsFunc2:);
  methods[69].selector = @selector(doOnErrorWithRxFunctionsAction1:);
  methods[70].selector = @selector(doOnEachWithRxFunctionsAction1:);
  methods[71].selector = @selector(doOnSuccessWithRxFunctionsAction1:);
  methods[72].selector = @selector(doOnSubscribeWithRxFunctionsAction0:);
  methods[73].selector = @selector(delayWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[74].selector = @selector(delayWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[75].selector = @selector(deferWithJavaUtilConcurrentCallable:);
  methods[76].selector = @selector(doOnUnsubscribeWithRxFunctionsAction0:);
  methods[77].selector = @selector(doAfterTerminateWithRxFunctionsAction0:);
  methods[78].selector = @selector(iterableToArrayWithJavaLangIterable:);
  methods[79].selector = @selector(retry);
  methods[80].selector = @selector(retryWithLong:);
  methods[81].selector = @selector(retryWithRxFunctionsFunc2:);
  methods[82].selector = @selector(retryWhenWithRxFunctionsFunc1:);
  methods[83].selector = @selector(using__WithRxFunctionsFunc0:withRxFunctionsFunc1:withRxFunctionsAction1:);
  methods[84].selector = @selector(using__WithRxFunctionsFunc0:withRxFunctionsFunc1:withRxFunctionsAction1:withBoolean:);
  methods[85].selector = @selector(delaySubscriptionWithRxObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "onSubscribe_", "LRxSingle_OnSubscribe;", .constantValue.asLong = 0, 0x10, -1, -1, 159, -1 },
  };
  static const void *ptrTable[] = { "LRxSingle_OnSubscribe;", "(Lrx/Single$OnSubscribe<TT;>;)V", "LRxObservable_OnSubscribe;", "(Lrx/Observable$OnSubscribe<TT;>;)V", (void *)&RxSingle__Annotations$0, "create", "<T:Ljava/lang/Object;>(Lrx/Single$OnSubscribe<TT;>;)Lrx/Single<TT;>;", "lift", "LRxObservable_Operator;", "<R:Ljava/lang/Object;>(Lrx/Observable$Operator<+TR;-TT;>;)Lrx/Single<TR;>;", "compose", "LRxSingle_Transformer;", "<R:Ljava/lang/Object;>(Lrx/Single$Transformer<-TT;+TR;>;)Lrx/Single<TR;>;", "asObservable", "LRxSingle;", "<T:Ljava/lang/Object;>(Lrx/Single<TT;>;)Lrx/Observable<TT;>;", "concat", "LRxSingle;LRxSingle;", "<T:Ljava/lang/Object;>(Lrx/Single<+TT;>;Lrx/Single<+TT;>;)Lrx/Observable<TT;>;", "LRxSingle;LRxSingle;LRxSingle;", "<T:Ljava/lang/Object;>(Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;)Lrx/Observable<TT;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;", "<T:Ljava/lang/Object;>(Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;)Lrx/Observable<TT;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;", "<T:Ljava/lang/Object;>(Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;)Lrx/Observable<TT;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;", "<T:Ljava/lang/Object;>(Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;)Lrx/Observable<TT;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;", "<T:Ljava/lang/Object;>(Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;)Lrx/Observable<TT;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;", "<T:Ljava/lang/Object;>(Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;)Lrx/Observable<TT;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;", "<T:Ljava/lang/Object;>(Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;Lrx/Single<+TT;>;)Lrx/Observable<TT;>;", "error", "LNSException;", "<T:Ljava/lang/Object;>(Ljava/lang/Throwable;)Lrx/Single<TT;>;", "from", "LJavaUtilConcurrentFuture;", "<T:Ljava/lang/Object;>(Ljava/util/concurrent/Future<+TT;>;)Lrx/Single<TT;>;", "LJavaUtilConcurrentFuture;JLJavaUtilConcurrentTimeUnit;", "<T:Ljava/lang/Object;>(Ljava/util/concurrent/Future<+TT;>;JLjava/util/concurrent/TimeUnit;)Lrx/Single<TT;>;", "LJavaUtilConcurrentFuture;LRxScheduler;", "<T:Ljava/lang/Object;>(Ljava/util/concurrent/Future<+TT;>;Lrx/Scheduler;)Lrx/Single<+TT;>;", "fromCallable", "LJavaUtilConcurrentCallable;", "<T:Ljava/lang/Object;>(Ljava/util/concurrent/Callable<+TT;>;)Lrx/Single<TT;>;", "just", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)Lrx/Single<TT;>;", "merge", "<T:Ljava/lang/Object;>(Lrx/Single<+Lrx/Single<+TT;>;>;)Lrx/Single<TT;>;", "zip", "LRxSingle;LRxSingle;LRxFunctionsFunc2;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Single<+TT1;>;Lrx/Single<+TT2;>;Lrx/functions/Func2<-TT1;-TT2;+TR;>;)Lrx/Single<TR;>;", "LRxSingle;LRxSingle;LRxSingle;LRxFunctionsFunc3;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Single<+TT1;>;Lrx/Single<+TT2;>;Lrx/Single<+TT3;>;Lrx/functions/Func3<-TT1;-TT2;-TT3;+TR;>;)Lrx/Single<TR;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxFunctionsFunc4;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Single<+TT1;>;Lrx/Single<+TT2;>;Lrx/Single<+TT3;>;Lrx/Single<+TT4;>;Lrx/functions/Func4<-TT1;-TT2;-TT3;-TT4;+TR;>;)Lrx/Single<TR;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxFunctionsFunc5;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Single<+TT1;>;Lrx/Single<+TT2;>;Lrx/Single<+TT3;>;Lrx/Single<+TT4;>;Lrx/Single<+TT5;>;Lrx/functions/Func5<-TT1;-TT2;-TT3;-TT4;-TT5;+TR;>;)Lrx/Single<TR;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxFunctionsFunc6;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Single<+TT1;>;Lrx/Single<+TT2;>;Lrx/Single<+TT3;>;Lrx/Single<+TT4;>;Lrx/Single<+TT5;>;Lrx/Single<+TT6;>;Lrx/functions/Func6<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;+TR;>;)Lrx/Single<TR;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxFunctionsFunc7;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Single<+TT1;>;Lrx/Single<+TT2;>;Lrx/Single<+TT3;>;Lrx/Single<+TT4;>;Lrx/Single<+TT5;>;Lrx/Single<+TT6;>;Lrx/Single<+TT7;>;Lrx/functions/Func7<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;+TR;>;)Lrx/Single<TR;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxFunctionsFunc8;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;T8:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Single<+TT1;>;Lrx/Single<+TT2;>;Lrx/Single<+TT3;>;Lrx/Single<+TT4;>;Lrx/Single<+TT5;>;Lrx/Single<+TT6;>;Lrx/Single<+TT7;>;Lrx/Single<+TT8;>;Lrx/functions/Func8<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;-TT8;+TR;>;)Lrx/Single<TR;>;", "LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxSingle;LRxFunctionsFunc9;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;T8:Ljava/lang/Object;T9:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Single<+TT1;>;Lrx/Single<+TT2;>;Lrx/Single<+TT3;>;Lrx/Single<+TT4;>;Lrx/Single<+TT5;>;Lrx/Single<+TT6;>;Lrx/Single<+TT7;>;Lrx/Single<+TT8;>;Lrx/Single<+TT9;>;Lrx/functions/Func9<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;-TT8;-TT9;+TR;>;)Lrx/Single<TR;>;", "LJavaLangIterable;LRxFunctionsFuncN;", "<R:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lrx/Single<*>;>;Lrx/functions/FuncN<+TR;>;)Lrx/Single<TR;>;", "concatWith", "(Lrx/Single<+TT;>;)Lrx/Observable<TT;>;", "flatMap", "LRxFunctionsFunc1;", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Single<+TR;>;>;)Lrx/Single<TR;>;", "flatMapObservable", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<+TR;>;>;)Lrx/Observable<TR;>;", "flatMapCompletable", "(Lrx/functions/Func1<-TT;+Lrx/Completable;>;)Lrx/Completable;", "map", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TR;>;)Lrx/Single<TR;>;", "mergeWith", "observeOn", "LRxScheduler;", "(Lrx/Scheduler;)Lrx/Single<TT;>;", "onErrorReturn", "(Lrx/functions/Func1<Ljava/lang/Throwable;+TT;>;)Lrx/Single<TT;>;", "onErrorResumeNext", "(Lrx/Single<+TT;>;)Lrx/Single<TT;>;", "(Lrx/functions/Func1<Ljava/lang/Throwable;+Lrx/Single<+TT;>;>;)Lrx/Single<TT;>;", "subscribe", "LRxFunctionsAction1;", "(Lrx/functions/Action1<-TT;>;)Lrx/Subscription;", "LRxFunctionsAction1;LRxFunctionsAction1;", "(Lrx/functions/Action1<-TT;>;Lrx/functions/Action1<Ljava/lang/Throwable;>;)Lrx/Subscription;", "unsafeSubscribe", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)Lrx/Subscription;", "LRxSubscriber;Z", "(Lrx/Subscriber<-TT;>;Z)Lrx/Subscription;", "LRxObserver;", "(Lrx/Observer<-TT;>;)Lrx/Subscription;", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TT;>;)Lrx/Subscription;", "subscribeOn", "takeUntil", "LRxCompletable;", "(Lrx/Completable;)Lrx/Single<TT;>;", "LRxObservable;", "<E:Ljava/lang/Object;>(Lrx/Observable<+TE;>;)Lrx/Single<TT;>;", "<E:Ljava/lang/Object;>(Lrx/Single<+TE;>;)Lrx/Single<TT;>;", "to", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Single<TT;>;TR;>;)TR;", "()Lrx/Observable<TT;>;", "timeout", "JLJavaUtilConcurrentTimeUnit;", "(JLjava/util/concurrent/TimeUnit;)Lrx/Single<TT;>;", "JLJavaUtilConcurrentTimeUnit;LRxScheduler;", "(JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Single<TT;>;", "JLJavaUtilConcurrentTimeUnit;LRxSingle;", "(JLjava/util/concurrent/TimeUnit;Lrx/Single<+TT;>;)Lrx/Single<TT;>;", "JLJavaUtilConcurrentTimeUnit;LRxSingle;LRxScheduler;", "(JLjava/util/concurrent/TimeUnit;Lrx/Single<+TT;>;Lrx/Scheduler;)Lrx/Single<TT;>;", "()Lrx/singles/BlockingSingle<TT;>;", "zipWith", "LRxSingle;LRxFunctionsFunc2;", "<T2:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Single<+TT2;>;Lrx/functions/Func2<-TT;-TT2;+TR;>;)Lrx/Single<TR;>;", "doOnError", "(Lrx/functions/Action1<Ljava/lang/Throwable;>;)Lrx/Single<TT;>;", "doOnEach", "(Lrx/functions/Action1<Lrx/Notification<+TT;>;>;)Lrx/Single<TT;>;", "doOnSuccess", "(Lrx/functions/Action1<-TT;>;)Lrx/Single<TT;>;", "doOnSubscribe", "LRxFunctionsAction0;", "(Lrx/functions/Action0;)Lrx/Single<TT;>;", "delay", "defer", "<T:Ljava/lang/Object;>(Ljava/util/concurrent/Callable<Lrx/Single<TT;>;>;)Lrx/Single<TT;>;", "doOnUnsubscribe", "doAfterTerminate", "iterableToArray", "LJavaLangIterable;", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lrx/Single<+TT;>;>;)[Lrx/Single<+TT;>;", "()Lrx/Single<TT;>;", "retry", "J", "(J)Lrx/Single<TT;>;", "LRxFunctionsFunc2;", "(Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Throwable;Ljava/lang/Boolean;>;)Lrx/Single<TT;>;", "retryWhen", "(Lrx/functions/Func1<Lrx/Observable<+Ljava/lang/Throwable;>;+Lrx/Observable<*>;>;)Lrx/Single<TT;>;", "using", "LRxFunctionsFunc0;LRxFunctionsFunc1;LRxFunctionsAction1;", "<T:Ljava/lang/Object;Resource:Ljava/lang/Object;>(Lrx/functions/Func0<TResource;>;Lrx/functions/Func1<-TResource;+Lrx/Single<+TT;>;>;Lrx/functions/Action1<-TResource;>;)Lrx/Single<TT;>;", "LRxFunctionsFunc0;LRxFunctionsFunc1;LRxFunctionsAction1;Z", "<T:Ljava/lang/Object;Resource:Ljava/lang/Object;>(Lrx/functions/Func0<TResource;>;Lrx/functions/Func1<-TResource;+Lrx/Single<+TT;>;>;Lrx/functions/Action1<-TResource;>;Z)Lrx/Single<TT;>;", "delaySubscription", "(Lrx/Observable<*>;)Lrx/Single<TT;>;", "Lrx/Single$OnSubscribe<TT;>;", "LRxSingle_OnSubscribe;LRxSingle_Transformer;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxSingle = { "Single", "rx", ptrTable, methods, fields, 7, 0x1, 86, 1, -1, 160, -1, 161, -1 };
  return &_RxSingle;
}

@end

void RxSingle_initWithRxSingle_OnSubscribe_(RxSingle *self, id<RxSingle_OnSubscribe> f) {
  NSObject_init(self);
  JreStrongAssign(&self->onSubscribe_, RxPluginsRxJavaHooks_onCreateWithRxSingle_OnSubscribe_(f));
}

RxSingle *new_RxSingle_initWithRxSingle_OnSubscribe_(id<RxSingle_OnSubscribe> f) {
  J2OBJC_NEW_IMPL(RxSingle, initWithRxSingle_OnSubscribe_, f)
}

RxSingle *create_RxSingle_initWithRxSingle_OnSubscribe_(id<RxSingle_OnSubscribe> f) {
  J2OBJC_CREATE_IMPL(RxSingle, initWithRxSingle_OnSubscribe_, f)
}

void RxSingle_initWithRxObservable_OnSubscribe_(RxSingle *self, id<RxObservable_OnSubscribe> f) {
  NSObject_init(self);
  JreStrongAssign(&self->onSubscribe_, RxPluginsRxJavaHooks_onCreateWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleFromObservable_initWithRxObservable_OnSubscribe_(f)));
}

RxSingle *new_RxSingle_initWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> f) {
  J2OBJC_NEW_IMPL(RxSingle, initWithRxObservable_OnSubscribe_, f)
}

RxSingle *create_RxSingle_initWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> f) {
  J2OBJC_CREATE_IMPL(RxSingle, initWithRxObservable_OnSubscribe_, f)
}

RxSingle *RxSingle_createWithRxSingle_OnSubscribe_(id<RxSingle_OnSubscribe> f) {
  RxSingle_initialize();
  return create_RxSingle_initWithRxSingle_OnSubscribe_(f);
}

RxObservable *RxSingle_asObservableWithRxSingle_(RxSingle *t) {
  RxSingle_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsSingleToObservable_initWithRxSingle_OnSubscribe_(((RxSingle *) nil_chk(t))->onSubscribe_));
}

RxObservable *RxSingle_concatWithRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2) {
  RxSingle_initialize();
  return RxObservable_concatWithRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2));
}

RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3) {
  RxSingle_initialize();
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3));
}

RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4) {
  RxSingle_initialize();
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4));
}

RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5) {
  RxSingle_initialize();
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4), RxSingle_asObservableWithRxSingle_(t5));
}

RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6) {
  RxSingle_initialize();
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4), RxSingle_asObservableWithRxSingle_(t5), RxSingle_asObservableWithRxSingle_(t6));
}

RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7) {
  RxSingle_initialize();
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4), RxSingle_asObservableWithRxSingle_(t5), RxSingle_asObservableWithRxSingle_(t6), RxSingle_asObservableWithRxSingle_(t7));
}

RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7, RxSingle *t8) {
  RxSingle_initialize();
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4), RxSingle_asObservableWithRxSingle_(t5), RxSingle_asObservableWithRxSingle_(t6), RxSingle_asObservableWithRxSingle_(t7), RxSingle_asObservableWithRxSingle_(t8));
}

RxObservable *RxSingle_concatWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7, RxSingle *t8, RxSingle *t9) {
  RxSingle_initialize();
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4), RxSingle_asObservableWithRxSingle_(t5), RxSingle_asObservableWithRxSingle_(t6), RxSingle_asObservableWithRxSingle_(t7), RxSingle_asObservableWithRxSingle_(t8), RxSingle_asObservableWithRxSingle_(t9));
}

RxSingle *RxSingle_errorWithNSException_(NSException *exception) {
  RxSingle_initialize();
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxSingle_1_initWithNSException_(exception));
}

RxSingle *RxSingle_fromWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future) {
  RxSingle_initialize();
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleFromFuture_initWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(future, 0, nil));
}

RxSingle *RxSingle_fromWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(id<JavaUtilConcurrentFuture> future, jlong timeout, JavaUtilConcurrentTimeUnit *unit) {
  RxSingle_initialize();
  if (unit == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"unit is null");
  }
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleFromFuture_initWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(future, timeout, unit));
}

RxSingle *RxSingle_fromWithJavaUtilConcurrentFuture_withRxScheduler_(id<JavaUtilConcurrentFuture> future, RxScheduler *scheduler) {
  RxSingle_initialize();
  return RxSingle_subscribeOnWithRxScheduler_(nil_chk(RxSingle_fromWithJavaUtilConcurrentFuture_(future)), scheduler);
}

RxSingle *RxSingle_fromCallableWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> func) {
  RxSingle_initialize();
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleFromCallable_initWithJavaUtilConcurrentCallable_(func));
}

RxSingle *RxSingle_justWithId_(id value) {
  RxSingle_initialize();
  return RxInternalUtilScalarSynchronousSingle_createWithId_(value);
}

RxSingle *RxSingle_mergeWithRxSingle_(RxSingle *source) {
  RxSingle_initialize();
  if ([source isKindOfClass:[RxInternalUtilScalarSynchronousSingle class]]) {
    return [((RxInternalUtilScalarSynchronousSingle *) nil_chk(((RxInternalUtilScalarSynchronousSingle *) cast_chk(source, [RxInternalUtilScalarSynchronousSingle class])))) scalarFlatMapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()];
  }
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxSingle_2_initWithRxSingle_(source));
}

RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2) {
  RxSingle_initialize();
  return RxObservable_mergeWithRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2));
}

RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3) {
  RxSingle_initialize();
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3));
}

RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4) {
  RxSingle_initialize();
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4));
}

RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5) {
  RxSingle_initialize();
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4), RxSingle_asObservableWithRxSingle_(t5));
}

RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6) {
  RxSingle_initialize();
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4), RxSingle_asObservableWithRxSingle_(t5), RxSingle_asObservableWithRxSingle_(t6));
}

RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7) {
  RxSingle_initialize();
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4), RxSingle_asObservableWithRxSingle_(t5), RxSingle_asObservableWithRxSingle_(t6), RxSingle_asObservableWithRxSingle_(t7));
}

RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7, RxSingle *t8) {
  RxSingle_initialize();
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4), RxSingle_asObservableWithRxSingle_(t5), RxSingle_asObservableWithRxSingle_(t6), RxSingle_asObservableWithRxSingle_(t7), RxSingle_asObservableWithRxSingle_(t8));
}

RxObservable *RxSingle_mergeWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_(RxSingle *t1, RxSingle *t2, RxSingle *t3, RxSingle *t4, RxSingle *t5, RxSingle *t6, RxSingle *t7, RxSingle *t8, RxSingle *t9) {
  RxSingle_initialize();
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxSingle_asObservableWithRxSingle_(t1), RxSingle_asObservableWithRxSingle_(t2), RxSingle_asObservableWithRxSingle_(t3), RxSingle_asObservableWithRxSingle_(t4), RxSingle_asObservableWithRxSingle_(t5), RxSingle_asObservableWithRxSingle_(t6), RxSingle_asObservableWithRxSingle_(t7), RxSingle_asObservableWithRxSingle_(t8), RxSingle_asObservableWithRxSingle_(t9));
}

RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxFunctionsFunc2_(RxSingle *s1, RxSingle *s2, id<RxFunctionsFunc2> zipFunction) {
  RxSingle_initialize();
  return RxInternalOperatorsSingleOperatorZip_zipWithRxSingleArray_withRxFunctionsFuncN_([IOSObjectArray arrayWithObjects:(id[]){ s1, s2 } count:2 type:RxSingle_class_()], create_RxSingle_3_initWithRxFunctionsFunc2_(zipFunction));
}

RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc3_(RxSingle *s1, RxSingle *s2, RxSingle *s3, id<RxFunctionsFunc3> zipFunction) {
  RxSingle_initialize();
  return RxInternalOperatorsSingleOperatorZip_zipWithRxSingleArray_withRxFunctionsFuncN_([IOSObjectArray arrayWithObjects:(id[]){ s1, s2, s3 } count:3 type:RxSingle_class_()], create_RxSingle_4_initWithRxFunctionsFunc3_(zipFunction));
}

RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc4_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, id<RxFunctionsFunc4> zipFunction) {
  RxSingle_initialize();
  return RxInternalOperatorsSingleOperatorZip_zipWithRxSingleArray_withRxFunctionsFuncN_([IOSObjectArray arrayWithObjects:(id[]){ s1, s2, s3, s4 } count:4 type:RxSingle_class_()], create_RxSingle_5_initWithRxFunctionsFunc4_(zipFunction));
}

RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc5_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, RxSingle *s5, id<RxFunctionsFunc5> zipFunction) {
  RxSingle_initialize();
  return RxInternalOperatorsSingleOperatorZip_zipWithRxSingleArray_withRxFunctionsFuncN_([IOSObjectArray arrayWithObjects:(id[]){ s1, s2, s3, s4, s5 } count:5 type:RxSingle_class_()], create_RxSingle_6_initWithRxFunctionsFunc5_(zipFunction));
}

RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc6_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, RxSingle *s5, RxSingle *s6, id<RxFunctionsFunc6> zipFunction) {
  RxSingle_initialize();
  return RxInternalOperatorsSingleOperatorZip_zipWithRxSingleArray_withRxFunctionsFuncN_([IOSObjectArray arrayWithObjects:(id[]){ s1, s2, s3, s4, s5, s6 } count:6 type:RxSingle_class_()], create_RxSingle_7_initWithRxFunctionsFunc6_(zipFunction));
}

RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc7_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, RxSingle *s5, RxSingle *s6, RxSingle *s7, id<RxFunctionsFunc7> zipFunction) {
  RxSingle_initialize();
  return RxInternalOperatorsSingleOperatorZip_zipWithRxSingleArray_withRxFunctionsFuncN_([IOSObjectArray arrayWithObjects:(id[]){ s1, s2, s3, s4, s5, s6, s7 } count:7 type:RxSingle_class_()], create_RxSingle_8_initWithRxFunctionsFunc7_(zipFunction));
}

RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc8_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, RxSingle *s5, RxSingle *s6, RxSingle *s7, RxSingle *s8, id<RxFunctionsFunc8> zipFunction) {
  RxSingle_initialize();
  return RxInternalOperatorsSingleOperatorZip_zipWithRxSingleArray_withRxFunctionsFuncN_([IOSObjectArray arrayWithObjects:(id[]){ s1, s2, s3, s4, s5, s6, s7, s8 } count:8 type:RxSingle_class_()], create_RxSingle_9_initWithRxFunctionsFunc8_(zipFunction));
}

RxSingle *RxSingle_zipWithRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxSingle_withRxFunctionsFunc9_(RxSingle *s1, RxSingle *s2, RxSingle *s3, RxSingle *s4, RxSingle *s5, RxSingle *s6, RxSingle *s7, RxSingle *s8, RxSingle *s9, id<RxFunctionsFunc9> zipFunction) {
  RxSingle_initialize();
  return RxInternalOperatorsSingleOperatorZip_zipWithRxSingleArray_withRxFunctionsFuncN_([IOSObjectArray arrayWithObjects:(id[]){ s1, s2, s3, s4, s5, s6, s7, s8, s9 } count:9 type:RxSingle_class_()], create_RxSingle_10_initWithRxFunctionsFunc9_(zipFunction));
}

RxSingle *RxSingle_zipWithJavaLangIterable_withRxFunctionsFuncN_(id<JavaLangIterable> singles, id<RxFunctionsFuncN> zipFunction) {
  RxSingle_initialize();
  IOSObjectArray *iterableToArray = RxSingle_iterableToArrayWithJavaLangIterable_(singles);
  return RxInternalOperatorsSingleOperatorZip_zipWithRxSingleArray_withRxFunctionsFuncN_(iterableToArray, zipFunction);
}

RxSingle *RxSingle_mapWithRxFunctionsFunc1_(RxSingle *self, id<RxFunctionsFunc1> func) {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleOnSubscribeMap_initWithRxSingle_withRxFunctionsFunc1_(self, func));
}

id<RxSubscription> RxSingle_unsafeSubscribeWithRxSubscriber_withBoolean_(RxSingle *self, RxSubscriber *subscriber, jboolean start) {
  @try {
    if (start) {
      [((RxSubscriber *) nil_chk(subscriber)) onStart];
    }
    [((id<RxSingle_OnSubscribe>) nil_chk(RxPluginsRxJavaHooks_onSingleStartWithRxSingle_withRxSingle_OnSubscribe_(self, self->onSubscribe_))) callWithId:RxInternalOperatorsSingleLiftObservableOperator_wrapWithRxSubscriber_(subscriber)];
    return RxPluginsRxJavaHooks_onSingleReturnWithRxSubscription_(subscriber);
  }
  @catch (NSException *e) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(e);
    @try {
      [((RxSubscriber *) nil_chk(subscriber)) onErrorWithNSException:RxPluginsRxJavaHooks_onSingleErrorWithNSException_(e)];
    }
    @catch (NSException *e2) {
      RxExceptionsExceptions_throwIfFatalWithNSException_(e2);
      JavaLangRuntimeException *r = create_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("$$$", @"Error occurred attempting to subscribe [", [((NSException *) nil_chk(e)) getMessage], @"] and then again while trying to pass to onError."), e2);
      RxPluginsRxJavaHooks_onSingleErrorWithNSException_(r);
      @throw r;
    }
    return RxSubscriptionsSubscriptions_unsubscribed();
  }
}

id<RxSubscription> RxSingle_subscribeWithRxSingleSubscriber_(RxSingle *self, RxSingleSubscriber *te) {
  if (te == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"te is null");
  }
  @try {
    [((id<RxSingle_OnSubscribe>) nil_chk(RxPluginsRxJavaHooks_onSingleStartWithRxSingle_withRxSingle_OnSubscribe_(self, self->onSubscribe_))) callWithId:te];
    return RxPluginsRxJavaHooks_onSingleReturnWithRxSubscription_(te);
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    @try {
      [te onErrorWithNSException:RxPluginsRxJavaHooks_onSingleErrorWithNSException_(ex)];
    }
    @catch (NSException *e2) {
      RxExceptionsExceptions_throwIfFatalWithNSException_(e2);
      JavaLangRuntimeException *r = create_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("$$$", @"Error occurred attempting to subscribe [", [((NSException *) nil_chk(ex)) getMessage], @"] and then again while trying to pass to onError."), e2);
      RxPluginsRxJavaHooks_onSingleErrorWithNSException_(r);
      @throw r;
    }
    return RxSubscriptionsSubscriptions_empty();
  }
}

RxSingle *RxSingle_subscribeOnWithRxScheduler_(RxSingle *self, RxScheduler *scheduler) {
  if ([self isKindOfClass:[RxInternalUtilScalarSynchronousSingle class]]) {
    return [((RxInternalUtilScalarSynchronousSingle *) cast_chk(self, [RxInternalUtilScalarSynchronousSingle class])) scalarScheduleOnWithRxScheduler:scheduler];
  }
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxSingle_15_initWithRxSingle_withRxScheduler_(self, scheduler));
}

RxObservable *RxSingle_toObservable(RxSingle *self) {
  return RxSingle_asObservableWithRxSingle_(self);
}

RxSingle *RxSingle_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxSingle_withRxScheduler_(RxSingle *self, jlong timeout, JavaUtilConcurrentTimeUnit *timeUnit, RxSingle *other, RxScheduler *scheduler) {
  if (other == nil) {
    other = RxSingle_errorWithNSException_(create_JavaUtilConcurrentTimeoutException_init());
  }
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleTimeout_initWithRxSingle_OnSubscribe_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxSingle_OnSubscribe_(self->onSubscribe_, timeout, timeUnit, scheduler, ((RxSingle *) nil_chk(other))->onSubscribe_));
}

RxSingle *RxSingle_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxSingle *self, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleDelay_initWithRxSingle_OnSubscribe_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self->onSubscribe_, delay, unit, scheduler));
}

RxSingle *RxSingle_deferWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> singleFactory) {
  RxSingle_initialize();
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxSingle_19_initWithJavaUtilConcurrentCallable_(singleFactory));
}

IOSObjectArray *RxSingle_iterableToArrayWithJavaLangIterable_(id<JavaLangIterable> singlesIterable) {
  RxSingle_initialize();
  IOSObjectArray *singlesArray;
  jint count;
  if ([JavaUtilCollection_class_() isInstance:singlesIterable]) {
    id<JavaUtilCollection> list = (id<JavaUtilCollection>) cast_check(singlesIterable, JavaUtilCollection_class_());
    count = [((id<JavaUtilCollection>) nil_chk(list)) size];
    singlesArray = [list toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:count type:RxSingle_class_()]];
  }
  else {
    IOSObjectArray *tempArray = [IOSObjectArray arrayWithLength:8 type:RxSingle_class_()];
    count = 0;
    for (RxSingle * __strong s in nil_chk(singlesIterable)) {
      if (count == tempArray->size_) {
        IOSObjectArray *sb = [IOSObjectArray arrayWithLength:count + (JreRShift32(count, 2)) type:RxSingle_class_()];
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(tempArray, 0, sb, 0, count);
        tempArray = sb;
      }
      IOSObjectArray_Set(tempArray, count, s);
      count++;
    }
    if (tempArray->size_ == count) {
      singlesArray = tempArray;
    }
    else {
      singlesArray = [IOSObjectArray arrayWithLength:count type:RxSingle_class_()];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(tempArray, 0, singlesArray, 0, count);
    }
  }
  return singlesArray;
}

RxSingle *RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> singleFactory, id<RxFunctionsAction1> disposeAction) {
  RxSingle_initialize();
  return RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, singleFactory, disposeAction, false);
}

RxSingle *RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> singleFactory, id<RxFunctionsAction1> disposeAction, jboolean disposeEagerly) {
  RxSingle_initialize();
  if (resourceFactory == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"resourceFactory is null");
  }
  if (singleFactory == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"singleFactory is null");
  }
  if (disposeAction == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"disposeAction is null");
  }
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, singleFactory, disposeAction, disposeEagerly));
}

IOSObjectArray *RxSingle__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSingle)

@implementation RxSingle_OnSubscribe

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LRxSingle;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Action1<Lrx/SingleSubscriber<-TT;>;>;" };
  static const J2ObjcClassInfo _RxSingle_OnSubscribe = { "OnSubscribe", "rx", ptrTable, NULL, NULL, 7, 0x609, 0, 0, 0, -1, -1, 1, -1 };
  return &_RxSingle_OnSubscribe;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxSingle_OnSubscribe)

@implementation RxSingle_Transformer

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LRxSingle;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func1<Lrx/Single<TT;>;Lrx/Single<TR;>;>;" };
  static const J2ObjcClassInfo _RxSingle_Transformer = { "Transformer", "rx", ptrTable, NULL, NULL, 7, 0x609, 0, 0, 0, -1, -1, 1, -1 };
  return &_RxSingle_Transformer;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxSingle_Transformer)

@implementation RxSingle_1

- (instancetype)initWithNSException:(NSException *)capture$0 {
  RxSingle_1_initWithNSException_(self, capture$0);
  return self;
}

- (void)callWithId:(RxSingleSubscriber *)te {
  [((RxSingleSubscriber *) nil_chk(te)) onErrorWithNSException:val$exception_];
}

- (void)dealloc {
  RELEASE_(val$exception_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSException:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$exception_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TT;>;)V", "LRxSingle;", "errorWithNSException:", "Ljava/lang/Object;Lrx/Single$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxSingle_1 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxSingle_1;
}

@end

void RxSingle_1_initWithNSException_(RxSingle_1 *self, NSException *capture$0) {
  JreStrongAssign(&self->val$exception_, capture$0);
  NSObject_init(self);
}

RxSingle_1 *new_RxSingle_1_initWithNSException_(NSException *capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_1, initWithNSException_, capture$0)
}

RxSingle_1 *create_RxSingle_1_initWithNSException_(NSException *capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_1, initWithNSException_, capture$0)
}

@implementation RxSingle_2

- (instancetype)initWithRxSingle:(RxSingle *)capture$0 {
  RxSingle_2_initWithRxSingle_(self, capture$0);
  return self;
}

- (void)callWithId:(RxSingleSubscriber *)child {
  RxSingleSubscriber *parent = create_RxSingle_2_1_initWithRxSingleSubscriber_(child);
  [((RxSingleSubscriber *) nil_chk(child)) addWithRxSubscription:parent];
  RxSingle_subscribeWithRxSingleSubscriber_(nil_chk(val$source_), parent);
}

- (void)dealloc {
  RELEASE_(val$source_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingle:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$source_", "LRxSingle;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TT;>;)V", "Lrx/Single<+Lrx/Single<+TT;>;>;", "LRxSingle;", "mergeWithRxSingle:", "Ljava/lang/Object;Lrx/Single$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxSingle_2 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_2;
}

@end

void RxSingle_2_initWithRxSingle_(RxSingle_2 *self, RxSingle *capture$0) {
  JreStrongAssign(&self->val$source_, capture$0);
  NSObject_init(self);
}

RxSingle_2 *new_RxSingle_2_initWithRxSingle_(RxSingle *capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_2, initWithRxSingle_, capture$0)
}

RxSingle_2 *create_RxSingle_2_initWithRxSingle_(RxSingle *capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_2, initWithRxSingle_, capture$0)
}

@implementation RxSingle_2_1

- (instancetype)initWithRxSingleSubscriber:(RxSingleSubscriber *)capture$0 {
  RxSingle_2_1_initWithRxSingleSubscriber_(self, capture$0);
  return self;
}

- (void)onSuccessWithId:(RxSingle *)innerSingle {
  RxSingle_subscribeWithRxSingleSubscriber_(nil_chk(innerSingle), val$child_);
}

- (void)onErrorWithNSException:(NSException *)error {
  [((RxSingleSubscriber *) nil_chk(val$child_)) onErrorWithNSException:error];
}

- (void)dealloc {
  RELEASE_(val$child_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingleSubscriber:);
  methods[1].selector = @selector(onSuccessWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$child_", "LRxSingleSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "onSuccess", "LRxSingle;", "(Lrx/Single<+TT;>;)V", "onError", "LNSException;", "Lrx/SingleSubscriber<-TT;>;", "LRxSingle_2;", "callWithId:", "Lrx/SingleSubscriber<Lrx/Single<+TT;>;>;" };
  static const J2ObjcClassInfo _RxSingle_2_1 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 3, 1, 6, -1, 7, 8, -1 };
  return &_RxSingle_2_1;
}

@end

void RxSingle_2_1_initWithRxSingleSubscriber_(RxSingle_2_1 *self, RxSingleSubscriber *capture$0) {
  JreStrongAssign(&self->val$child_, capture$0);
  RxSingleSubscriber_init(self);
}

RxSingle_2_1 *new_RxSingle_2_1_initWithRxSingleSubscriber_(RxSingleSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_2_1, initWithRxSingleSubscriber_, capture$0)
}

RxSingle_2_1 *create_RxSingle_2_1_initWithRxSingleSubscriber_(RxSingleSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_2_1, initWithRxSingleSubscriber_, capture$0)
}

@implementation RxSingle_3

- (instancetype)initWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)capture$0 {
  RxSingle_3_initWithRxFunctionsFunc2_(self, capture$0);
  return self;
}

- (id)callWithNSObjectArray:(IOSObjectArray *)args {
  return [((id<RxFunctionsFunc2>) nil_chk(val$zipFunction_)) callWithId:IOSObjectArray_Get(nil_chk(args), 0) withId:IOSObjectArray_Get(args, 1)];
}

- (void)dealloc {
  RELEASE_(val$zipFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc2:);
  methods[1].selector = @selector(callWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$zipFunction_", "LRxFunctionsFunc2;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "([Ljava/lang/Object;)TR;", "Lrx/functions/Func2<-TT1;-TT2;+TR;>;", "LRxSingle;", "zipWithRxSingle:withRxSingle:withRxFunctionsFunc2:", "Ljava/lang/Object;Lrx/functions/FuncN<TR;>;" };
  static const J2ObjcClassInfo _RxSingle_3 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_3;
}

@end

void RxSingle_3_initWithRxFunctionsFunc2_(RxSingle_3 *self, id<RxFunctionsFunc2> capture$0) {
  JreStrongAssign(&self->val$zipFunction_, capture$0);
  NSObject_init(self);
}

RxSingle_3 *new_RxSingle_3_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_3, initWithRxFunctionsFunc2_, capture$0)
}

RxSingle_3 *create_RxSingle_3_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_3, initWithRxFunctionsFunc2_, capture$0)
}

@implementation RxSingle_4

- (instancetype)initWithRxFunctionsFunc3:(id<RxFunctionsFunc3>)capture$0 {
  RxSingle_4_initWithRxFunctionsFunc3_(self, capture$0);
  return self;
}

- (id)callWithNSObjectArray:(IOSObjectArray *)args {
  return [((id<RxFunctionsFunc3>) nil_chk(val$zipFunction_)) callWithId:IOSObjectArray_Get(nil_chk(args), 0) withId:IOSObjectArray_Get(args, 1) withId:IOSObjectArray_Get(args, 2)];
}

- (void)dealloc {
  RELEASE_(val$zipFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc3:);
  methods[1].selector = @selector(callWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$zipFunction_", "LRxFunctionsFunc3;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "([Ljava/lang/Object;)TR;", "Lrx/functions/Func3<-TT1;-TT2;-TT3;+TR;>;", "LRxSingle;", "zipWithRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc3:", "Ljava/lang/Object;Lrx/functions/FuncN<TR;>;" };
  static const J2ObjcClassInfo _RxSingle_4 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_4;
}

@end

void RxSingle_4_initWithRxFunctionsFunc3_(RxSingle_4 *self, id<RxFunctionsFunc3> capture$0) {
  JreStrongAssign(&self->val$zipFunction_, capture$0);
  NSObject_init(self);
}

RxSingle_4 *new_RxSingle_4_initWithRxFunctionsFunc3_(id<RxFunctionsFunc3> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_4, initWithRxFunctionsFunc3_, capture$0)
}

RxSingle_4 *create_RxSingle_4_initWithRxFunctionsFunc3_(id<RxFunctionsFunc3> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_4, initWithRxFunctionsFunc3_, capture$0)
}

@implementation RxSingle_5

- (instancetype)initWithRxFunctionsFunc4:(id<RxFunctionsFunc4>)capture$0 {
  RxSingle_5_initWithRxFunctionsFunc4_(self, capture$0);
  return self;
}

- (id)callWithNSObjectArray:(IOSObjectArray *)args {
  return [((id<RxFunctionsFunc4>) nil_chk(val$zipFunction_)) callWithId:IOSObjectArray_Get(nil_chk(args), 0) withId:IOSObjectArray_Get(args, 1) withId:IOSObjectArray_Get(args, 2) withId:IOSObjectArray_Get(args, 3)];
}

- (void)dealloc {
  RELEASE_(val$zipFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc4:);
  methods[1].selector = @selector(callWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$zipFunction_", "LRxFunctionsFunc4;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "([Ljava/lang/Object;)TR;", "Lrx/functions/Func4<-TT1;-TT2;-TT3;-TT4;+TR;>;", "LRxSingle;", "zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc4:", "Ljava/lang/Object;Lrx/functions/FuncN<TR;>;" };
  static const J2ObjcClassInfo _RxSingle_5 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_5;
}

@end

void RxSingle_5_initWithRxFunctionsFunc4_(RxSingle_5 *self, id<RxFunctionsFunc4> capture$0) {
  JreStrongAssign(&self->val$zipFunction_, capture$0);
  NSObject_init(self);
}

RxSingle_5 *new_RxSingle_5_initWithRxFunctionsFunc4_(id<RxFunctionsFunc4> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_5, initWithRxFunctionsFunc4_, capture$0)
}

RxSingle_5 *create_RxSingle_5_initWithRxFunctionsFunc4_(id<RxFunctionsFunc4> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_5, initWithRxFunctionsFunc4_, capture$0)
}

@implementation RxSingle_6

- (instancetype)initWithRxFunctionsFunc5:(id<RxFunctionsFunc5>)capture$0 {
  RxSingle_6_initWithRxFunctionsFunc5_(self, capture$0);
  return self;
}

- (id)callWithNSObjectArray:(IOSObjectArray *)args {
  return [((id<RxFunctionsFunc5>) nil_chk(val$zipFunction_)) callWithId:IOSObjectArray_Get(nil_chk(args), 0) withId:IOSObjectArray_Get(args, 1) withId:IOSObjectArray_Get(args, 2) withId:IOSObjectArray_Get(args, 3) withId:IOSObjectArray_Get(args, 4)];
}

- (void)dealloc {
  RELEASE_(val$zipFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc5:);
  methods[1].selector = @selector(callWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$zipFunction_", "LRxFunctionsFunc5;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "([Ljava/lang/Object;)TR;", "Lrx/functions/Func5<-TT1;-TT2;-TT3;-TT4;-TT5;+TR;>;", "LRxSingle;", "zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc5:", "Ljava/lang/Object;Lrx/functions/FuncN<TR;>;" };
  static const J2ObjcClassInfo _RxSingle_6 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_6;
}

@end

void RxSingle_6_initWithRxFunctionsFunc5_(RxSingle_6 *self, id<RxFunctionsFunc5> capture$0) {
  JreStrongAssign(&self->val$zipFunction_, capture$0);
  NSObject_init(self);
}

RxSingle_6 *new_RxSingle_6_initWithRxFunctionsFunc5_(id<RxFunctionsFunc5> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_6, initWithRxFunctionsFunc5_, capture$0)
}

RxSingle_6 *create_RxSingle_6_initWithRxFunctionsFunc5_(id<RxFunctionsFunc5> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_6, initWithRxFunctionsFunc5_, capture$0)
}

@implementation RxSingle_7

- (instancetype)initWithRxFunctionsFunc6:(id<RxFunctionsFunc6>)capture$0 {
  RxSingle_7_initWithRxFunctionsFunc6_(self, capture$0);
  return self;
}

- (id)callWithNSObjectArray:(IOSObjectArray *)args {
  return [((id<RxFunctionsFunc6>) nil_chk(val$zipFunction_)) callWithId:IOSObjectArray_Get(nil_chk(args), 0) withId:IOSObjectArray_Get(args, 1) withId:IOSObjectArray_Get(args, 2) withId:IOSObjectArray_Get(args, 3) withId:IOSObjectArray_Get(args, 4) withId:IOSObjectArray_Get(args, 5)];
}

- (void)dealloc {
  RELEASE_(val$zipFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc6:);
  methods[1].selector = @selector(callWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$zipFunction_", "LRxFunctionsFunc6;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "([Ljava/lang/Object;)TR;", "Lrx/functions/Func6<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;+TR;>;", "LRxSingle;", "zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc6:", "Ljava/lang/Object;Lrx/functions/FuncN<TR;>;" };
  static const J2ObjcClassInfo _RxSingle_7 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_7;
}

@end

void RxSingle_7_initWithRxFunctionsFunc6_(RxSingle_7 *self, id<RxFunctionsFunc6> capture$0) {
  JreStrongAssign(&self->val$zipFunction_, capture$0);
  NSObject_init(self);
}

RxSingle_7 *new_RxSingle_7_initWithRxFunctionsFunc6_(id<RxFunctionsFunc6> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_7, initWithRxFunctionsFunc6_, capture$0)
}

RxSingle_7 *create_RxSingle_7_initWithRxFunctionsFunc6_(id<RxFunctionsFunc6> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_7, initWithRxFunctionsFunc6_, capture$0)
}

@implementation RxSingle_8

- (instancetype)initWithRxFunctionsFunc7:(id<RxFunctionsFunc7>)capture$0 {
  RxSingle_8_initWithRxFunctionsFunc7_(self, capture$0);
  return self;
}

- (id)callWithNSObjectArray:(IOSObjectArray *)args {
  return [((id<RxFunctionsFunc7>) nil_chk(val$zipFunction_)) callWithId:IOSObjectArray_Get(nil_chk(args), 0) withId:IOSObjectArray_Get(args, 1) withId:IOSObjectArray_Get(args, 2) withId:IOSObjectArray_Get(args, 3) withId:IOSObjectArray_Get(args, 4) withId:IOSObjectArray_Get(args, 5) withId:IOSObjectArray_Get(args, 6)];
}

- (void)dealloc {
  RELEASE_(val$zipFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc7:);
  methods[1].selector = @selector(callWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$zipFunction_", "LRxFunctionsFunc7;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "([Ljava/lang/Object;)TR;", "Lrx/functions/Func7<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;+TR;>;", "LRxSingle;", "zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc7:", "Ljava/lang/Object;Lrx/functions/FuncN<TR;>;" };
  static const J2ObjcClassInfo _RxSingle_8 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_8;
}

@end

void RxSingle_8_initWithRxFunctionsFunc7_(RxSingle_8 *self, id<RxFunctionsFunc7> capture$0) {
  JreStrongAssign(&self->val$zipFunction_, capture$0);
  NSObject_init(self);
}

RxSingle_8 *new_RxSingle_8_initWithRxFunctionsFunc7_(id<RxFunctionsFunc7> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_8, initWithRxFunctionsFunc7_, capture$0)
}

RxSingle_8 *create_RxSingle_8_initWithRxFunctionsFunc7_(id<RxFunctionsFunc7> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_8, initWithRxFunctionsFunc7_, capture$0)
}

@implementation RxSingle_9

- (instancetype)initWithRxFunctionsFunc8:(id<RxFunctionsFunc8>)capture$0 {
  RxSingle_9_initWithRxFunctionsFunc8_(self, capture$0);
  return self;
}

- (id)callWithNSObjectArray:(IOSObjectArray *)args {
  return [((id<RxFunctionsFunc8>) nil_chk(val$zipFunction_)) callWithId:IOSObjectArray_Get(nil_chk(args), 0) withId:IOSObjectArray_Get(args, 1) withId:IOSObjectArray_Get(args, 2) withId:IOSObjectArray_Get(args, 3) withId:IOSObjectArray_Get(args, 4) withId:IOSObjectArray_Get(args, 5) withId:IOSObjectArray_Get(args, 6) withId:IOSObjectArray_Get(args, 7)];
}

- (void)dealloc {
  RELEASE_(val$zipFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc8:);
  methods[1].selector = @selector(callWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$zipFunction_", "LRxFunctionsFunc8;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "([Ljava/lang/Object;)TR;", "Lrx/functions/Func8<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;-TT8;+TR;>;", "LRxSingle;", "zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc8:", "Ljava/lang/Object;Lrx/functions/FuncN<TR;>;" };
  static const J2ObjcClassInfo _RxSingle_9 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_9;
}

@end

void RxSingle_9_initWithRxFunctionsFunc8_(RxSingle_9 *self, id<RxFunctionsFunc8> capture$0) {
  JreStrongAssign(&self->val$zipFunction_, capture$0);
  NSObject_init(self);
}

RxSingle_9 *new_RxSingle_9_initWithRxFunctionsFunc8_(id<RxFunctionsFunc8> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_9, initWithRxFunctionsFunc8_, capture$0)
}

RxSingle_9 *create_RxSingle_9_initWithRxFunctionsFunc8_(id<RxFunctionsFunc8> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_9, initWithRxFunctionsFunc8_, capture$0)
}

@implementation RxSingle_10

- (instancetype)initWithRxFunctionsFunc9:(id<RxFunctionsFunc9>)capture$0 {
  RxSingle_10_initWithRxFunctionsFunc9_(self, capture$0);
  return self;
}

- (id)callWithNSObjectArray:(IOSObjectArray *)args {
  return [((id<RxFunctionsFunc9>) nil_chk(val$zipFunction_)) callWithId:IOSObjectArray_Get(nil_chk(args), 0) withId:IOSObjectArray_Get(args, 1) withId:IOSObjectArray_Get(args, 2) withId:IOSObjectArray_Get(args, 3) withId:IOSObjectArray_Get(args, 4) withId:IOSObjectArray_Get(args, 5) withId:IOSObjectArray_Get(args, 6) withId:IOSObjectArray_Get(args, 7) withId:IOSObjectArray_Get(args, 8)];
}

- (void)dealloc {
  RELEASE_(val$zipFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc9:);
  methods[1].selector = @selector(callWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$zipFunction_", "LRxFunctionsFunc9;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "([Ljava/lang/Object;)TR;", "Lrx/functions/Func9<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;-TT8;-TT9;+TR;>;", "LRxSingle;", "zipWithRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxSingle:withRxFunctionsFunc9:", "Ljava/lang/Object;Lrx/functions/FuncN<TR;>;" };
  static const J2ObjcClassInfo _RxSingle_10 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_10;
}

@end

void RxSingle_10_initWithRxFunctionsFunc9_(RxSingle_10 *self, id<RxFunctionsFunc9> capture$0) {
  JreStrongAssign(&self->val$zipFunction_, capture$0);
  NSObject_init(self);
}

RxSingle_10 *new_RxSingle_10_initWithRxFunctionsFunc9_(id<RxFunctionsFunc9> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_10, initWithRxFunctionsFunc9_, capture$0)
}

RxSingle_10 *create_RxSingle_10_initWithRxFunctionsFunc9_(id<RxFunctionsFunc9> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_10, initWithRxFunctionsFunc9_, capture$0)
}

@implementation RxSingle_11

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxSingle_11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onErrorWithNSException:(NSException *)e {
  @throw create_RxExceptionsOnErrorNotImplementedException_initWithNSException_(e);
}

- (void)onSuccessWithId:(id)args {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onSuccessWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "onSuccess", "LNSObject;", "(TT;)V", "LRxSingle;", "subscribe", "Lrx/SingleSubscriber<TT;>;" };
  static const J2ObjcClassInfo _RxSingle_11 = { "", "rx", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, 6, 7, -1 };
  return &_RxSingle_11;
}

@end

void RxSingle_11_init(RxSingle_11 *self) {
  RxSingleSubscriber_init(self);
}

RxSingle_11 *new_RxSingle_11_init() {
  J2OBJC_NEW_IMPL(RxSingle_11, init)
}

RxSingle_11 *create_RxSingle_11_init() {
  J2OBJC_CREATE_IMPL(RxSingle_11, init)
}

@implementation RxSingle_12

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0 {
  RxSingle_12_initWithRxFunctionsAction1_(self, capture$0);
  return self;
}

- (void)onErrorWithNSException:(NSException *)e {
  @throw create_RxExceptionsOnErrorNotImplementedException_initWithNSException_(e);
}

- (void)onSuccessWithId:(id)args {
  [((id<RxFunctionsAction1>) nil_chk(val$onSuccess_)) callWithId:args];
}

- (void)dealloc {
  RELEASE_(val$onSuccess_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsAction1:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onSuccessWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$onSuccess_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSuccess", "LNSObject;", "(TT;)V", "Lrx/functions/Action1<-TT;>;", "LRxSingle;", "subscribeWithRxFunctionsAction1:", "Lrx/SingleSubscriber<TT;>;" };
  static const J2ObjcClassInfo _RxSingle_12 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 3, 1, 6, -1, 7, 8, -1 };
  return &_RxSingle_12;
}

@end

void RxSingle_12_initWithRxFunctionsAction1_(RxSingle_12 *self, id<RxFunctionsAction1> capture$0) {
  JreStrongAssign(&self->val$onSuccess_, capture$0);
  RxSingleSubscriber_init(self);
}

RxSingle_12 *new_RxSingle_12_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_12, initWithRxFunctionsAction1_, capture$0)
}

RxSingle_12 *create_RxSingle_12_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_12, initWithRxFunctionsAction1_, capture$0)
}

@implementation RxSingle_13

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0
                    withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$1 {
  RxSingle_13_initWithRxFunctionsAction1_withRxFunctionsAction1_(self, capture$0, capture$1);
  return self;
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxFunctionsAction1>) nil_chk(val$onError_)) callWithId:e];
}

- (void)onSuccessWithId:(id)args {
  [((id<RxFunctionsAction1>) nil_chk(val$onSuccess_)) callWithId:args];
}

- (void)dealloc {
  RELEASE_(val$onError_);
  RELEASE_(val$onSuccess_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsAction1:withRxFunctionsAction1:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onSuccessWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$onError_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$onSuccess_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSuccess", "LNSObject;", "(TT;)V", "Lrx/functions/Action1<Ljava/lang/Throwable;>;", "Lrx/functions/Action1<-TT;>;", "LRxSingle;", "subscribeWithRxFunctionsAction1:withRxFunctionsAction1:", "Lrx/SingleSubscriber<TT;>;" };
  static const J2ObjcClassInfo _RxSingle_13 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 3, 2, 7, -1, 8, 9, -1 };
  return &_RxSingle_13;
}

@end

void RxSingle_13_initWithRxFunctionsAction1_withRxFunctionsAction1_(RxSingle_13 *self, id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1) {
  JreStrongAssign(&self->val$onError_, capture$0);
  JreStrongAssign(&self->val$onSuccess_, capture$1);
  RxSingleSubscriber_init(self);
}

RxSingle_13 *new_RxSingle_13_initWithRxFunctionsAction1_withRxFunctionsAction1_(id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1) {
  J2OBJC_NEW_IMPL(RxSingle_13, initWithRxFunctionsAction1_withRxFunctionsAction1_, capture$0, capture$1)
}

RxSingle_13 *create_RxSingle_13_initWithRxFunctionsAction1_withRxFunctionsAction1_(id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1) {
  J2OBJC_CREATE_IMPL(RxSingle_13, initWithRxFunctionsAction1_withRxFunctionsAction1_, capture$0, capture$1)
}

@implementation RxSingle_14

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0 {
  RxSingle_14_initWithRxObserver_(self, capture$0);
  return self;
}

- (void)onSuccessWithId:(id)value {
  [((id<RxObserver>) nil_chk(val$observer_)) onNextWithId:value];
  [val$observer_ onCompleted];
}

- (void)onErrorWithNSException:(NSException *)error {
  [((id<RxObserver>) nil_chk(val$observer_)) onErrorWithNSException:error];
}

- (void)dealloc {
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObserver:);
  methods[1].selector = @selector(onSuccessWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "onSuccess", "LNSObject;", "(TT;)V", "onError", "LNSException;", "Lrx/Observer<-TT;>;", "LRxSingle;", "subscribeWithRxObserver:", "Lrx/SingleSubscriber<TT;>;" };
  static const J2ObjcClassInfo _RxSingle_14 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 3, 1, 6, -1, 7, 8, -1 };
  return &_RxSingle_14;
}

@end

void RxSingle_14_initWithRxObserver_(RxSingle_14 *self, id<RxObserver> capture$0) {
  JreStrongAssign(&self->val$observer_, capture$0);
  RxSingleSubscriber_init(self);
}

RxSingle_14 *new_RxSingle_14_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_14, initWithRxObserver_, capture$0)
}

RxSingle_14 *create_RxSingle_14_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_14, initWithRxObserver_, capture$0)
}

@implementation RxSingle_15

- (instancetype)initWithRxSingle:(RxSingle *)outer$
                 withRxScheduler:(RxScheduler *)capture$0 {
  RxSingle_15_initWithRxSingle_withRxScheduler_(self, outer$, capture$0);
  return self;
}

- (void)callWithId:(RxSingleSubscriber *)t {
  RxScheduler_Worker *w = [((RxScheduler *) nil_chk(val$scheduler_)) createWorker];
  [((RxSingleSubscriber *) nil_chk(t)) addWithRxSubscription:w];
  [((RxScheduler_Worker *) nil_chk(w)) scheduleWithRxFunctionsAction0:create_RxSingle_15_1_initWithRxSingle_15_withRxSingleSubscriber_withRxScheduler_Worker_(self, t, w)];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingle:withRxScheduler:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxSingle;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TT;>;)V", "Lrx/Single<TT;>;", "LRxSingle;", "subscribeOnWithRxScheduler:", "Ljava/lang/Object;Lrx/Single$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxSingle_15 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 2, 4, -1, 5, 6, -1 };
  return &_RxSingle_15;
}

@end

void RxSingle_15_initWithRxSingle_withRxScheduler_(RxSingle_15 *self, RxSingle *outer$, RxScheduler *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$scheduler_, capture$0);
  NSObject_init(self);
}

RxSingle_15 *new_RxSingle_15_initWithRxSingle_withRxScheduler_(RxSingle *outer$, RxScheduler *capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_15, initWithRxSingle_withRxScheduler_, outer$, capture$0)
}

RxSingle_15 *create_RxSingle_15_initWithRxSingle_withRxScheduler_(RxSingle *outer$, RxScheduler *capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_15, initWithRxSingle_withRxScheduler_, outer$, capture$0)
}

@implementation RxSingle_15_1

- (instancetype)initWithRxSingle_15:(RxSingle_15 *)outer$
             withRxSingleSubscriber:(RxSingleSubscriber *)capture$0
             withRxScheduler_Worker:(RxScheduler_Worker *)capture$1 {
  RxSingle_15_1_initWithRxSingle_15_withRxSingleSubscriber_withRxScheduler_Worker_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)call {
  RxSingleSubscriber *single = create_RxSingle_15_1_1_initWithRxSingle_15_1_(self);
  [((RxSingleSubscriber *) nil_chk(val$t_)) addWithRxSubscription:single];
  RxSingle_subscribeWithRxSingleSubscriber_(this$0_->this$0_, single);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$t_);
  RELEASE_(val$w_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingle_15:withRxSingleSubscriber:withRxScheduler_Worker:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxSingle_15;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$t_", "LRxSingleSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
    { "val$w_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Lrx/SingleSubscriber<-TT;>;", "LRxSingle_15;", "callWithId:" };
  static const J2ObjcClassInfo _RxSingle_15_1 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 3, 1, -1, 2, -1, -1 };
  return &_RxSingle_15_1;
}

@end

void RxSingle_15_1_initWithRxSingle_15_withRxSingleSubscriber_withRxScheduler_Worker_(RxSingle_15_1 *self, RxSingle_15 *outer$, RxSingleSubscriber *capture$0, RxScheduler_Worker *capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$t_, capture$0);
  JreStrongAssign(&self->val$w_, capture$1);
  NSObject_init(self);
}

RxSingle_15_1 *new_RxSingle_15_1_initWithRxSingle_15_withRxSingleSubscriber_withRxScheduler_Worker_(RxSingle_15 *outer$, RxSingleSubscriber *capture$0, RxScheduler_Worker *capture$1) {
  J2OBJC_NEW_IMPL(RxSingle_15_1, initWithRxSingle_15_withRxSingleSubscriber_withRxScheduler_Worker_, outer$, capture$0, capture$1)
}

RxSingle_15_1 *create_RxSingle_15_1_initWithRxSingle_15_withRxSingleSubscriber_withRxScheduler_Worker_(RxSingle_15 *outer$, RxSingleSubscriber *capture$0, RxScheduler_Worker *capture$1) {
  J2OBJC_CREATE_IMPL(RxSingle_15_1, initWithRxSingle_15_withRxSingleSubscriber_withRxScheduler_Worker_, outer$, capture$0, capture$1)
}

@implementation RxSingle_15_1_1

- (instancetype)initWithRxSingle_15_1:(RxSingle_15_1 *)outer$ {
  RxSingle_15_1_1_initWithRxSingle_15_1_(self, outer$);
  return self;
}

- (void)onSuccessWithId:(id)value {
  @try {
    [((RxSingleSubscriber *) nil_chk(this$0_->val$t_)) onSuccessWithId:value];
  }
  @finally {
    [((RxScheduler_Worker *) nil_chk(this$0_->val$w_)) unsubscribe];
  }
}

- (void)onErrorWithNSException:(NSException *)error {
  @try {
    [((RxSingleSubscriber *) nil_chk(this$0_->val$t_)) onErrorWithNSException:error];
  }
  @finally {
    [((RxScheduler_Worker *) nil_chk(this$0_->val$w_)) unsubscribe];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingle_15_1:);
  methods[1].selector = @selector(onSuccessWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxSingle_15_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onSuccess", "LNSObject;", "(TT;)V", "onError", "LNSException;", "LRxSingle_15_1;", "call", "Lrx/SingleSubscriber<TT;>;" };
  static const J2ObjcClassInfo _RxSingle_15_1_1 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 3, 1, 5, -1, 6, 7, -1 };
  return &_RxSingle_15_1_1;
}

@end

void RxSingle_15_1_1_initWithRxSingle_15_1_(RxSingle_15_1_1 *self, RxSingle_15_1 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  RxSingleSubscriber_init(self);
}

RxSingle_15_1_1 *new_RxSingle_15_1_1_initWithRxSingle_15_1_(RxSingle_15_1 *outer$) {
  J2OBJC_NEW_IMPL(RxSingle_15_1_1, initWithRxSingle_15_1_, outer$)
}

RxSingle_15_1_1 *create_RxSingle_15_1_1_initWithRxSingle_15_1_(RxSingle_15_1 *outer$) {
  J2OBJC_CREATE_IMPL(RxSingle_15_1_1, initWithRxSingle_15_1_, outer$)
}

@implementation RxSingle_16

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0 {
  RxSingle_16_initWithRxFunctionsAction1_(self, capture$0);
  return self;
}

- (void)callWithId:(NSException *)throwable {
  [((id<RxFunctionsAction1>) nil_chk(val$onError_)) callWithId:throwable];
}

- (void)dealloc {
  RELEASE_(val$onError_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsAction1:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$onError_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "Lrx/functions/Action1<Ljava/lang/Throwable;>;", "LRxSingle;", "doOnErrorWithRxFunctionsAction1:", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxSingle_16 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxSingle_16;
}

@end

void RxSingle_16_initWithRxFunctionsAction1_(RxSingle_16 *self, id<RxFunctionsAction1> capture$0) {
  JreStrongAssign(&self->val$onError_, capture$0);
  NSObject_init(self);
}

RxSingle_16 *new_RxSingle_16_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_16, initWithRxFunctionsAction1_, capture$0)
}

RxSingle_16 *create_RxSingle_16_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_16, initWithRxFunctionsAction1_, capture$0)
}

@implementation RxSingle_17

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0 {
  RxSingle_17_initWithRxFunctionsAction1_(self, capture$0);
  return self;
}

- (void)callWithId:(id)t {
  [((id<RxFunctionsAction1>) nil_chk(val$onNotification_)) callWithId:RxNotification_createOnNextWithId_(t)];
}

- (void)dealloc {
  RELEASE_(val$onNotification_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsAction1:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$onNotification_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;", "(TT;)V", "Lrx/functions/Action1<Lrx/Notification<+TT;>;>;", "LRxSingle;", "doOnEachWithRxFunctionsAction1:", "Ljava/lang/Object;Lrx/functions/Action1<TT;>;" };
  static const J2ObjcClassInfo _RxSingle_17 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_17;
}

@end

void RxSingle_17_initWithRxFunctionsAction1_(RxSingle_17 *self, id<RxFunctionsAction1> capture$0) {
  JreStrongAssign(&self->val$onNotification_, capture$0);
  NSObject_init(self);
}

RxSingle_17 *new_RxSingle_17_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_17, initWithRxFunctionsAction1_, capture$0)
}

RxSingle_17 *create_RxSingle_17_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_17, initWithRxFunctionsAction1_, capture$0)
}

@implementation RxSingle_18

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0 {
  RxSingle_18_initWithRxFunctionsAction1_(self, capture$0);
  return self;
}

- (void)callWithId:(NSException *)throwable {
  [((id<RxFunctionsAction1>) nil_chk(val$onNotification_)) callWithId:RxNotification_createOnErrorWithNSException_(throwable)];
}

- (void)dealloc {
  RELEASE_(val$onNotification_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsAction1:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$onNotification_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "Lrx/functions/Action1<Lrx/Notification<+TT;>;>;", "LRxSingle;", "doOnEachWithRxFunctionsAction1:", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxSingle_18 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxSingle_18;
}

@end

void RxSingle_18_initWithRxFunctionsAction1_(RxSingle_18 *self, id<RxFunctionsAction1> capture$0) {
  JreStrongAssign(&self->val$onNotification_, capture$0);
  NSObject_init(self);
}

RxSingle_18 *new_RxSingle_18_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_18, initWithRxFunctionsAction1_, capture$0)
}

RxSingle_18 *create_RxSingle_18_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_18, initWithRxFunctionsAction1_, capture$0)
}

@implementation RxSingle_19

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)capture$0 {
  RxSingle_19_initWithJavaUtilConcurrentCallable_(self, capture$0);
  return self;
}

- (void)callWithId:(RxSingleSubscriber *)singleSubscriber {
  RxSingle *single;
  @try {
    single = [((id<JavaUtilConcurrentCallable>) nil_chk(val$singleFactory_)) call];
  }
  @catch (NSException *t) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(t);
    [((RxSingleSubscriber *) nil_chk(singleSubscriber)) onErrorWithNSException:t];
    return;
  }
  RxSingle_subscribeWithRxSingleSubscriber_(nil_chk(single), singleSubscriber);
}

- (void)dealloc {
  RELEASE_(val$singleFactory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentCallable:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$singleFactory_", "LJavaUtilConcurrentCallable;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TT;>;)V", "Ljava/util/concurrent/Callable<Lrx/Single<TT;>;>;", "LRxSingle;", "deferWithJavaUtilConcurrentCallable:", "Ljava/lang/Object;Lrx/Single$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxSingle_19 = { "", "rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxSingle_19;
}

@end

void RxSingle_19_initWithJavaUtilConcurrentCallable_(RxSingle_19 *self, id<JavaUtilConcurrentCallable> capture$0) {
  JreStrongAssign(&self->val$singleFactory_, capture$0);
  NSObject_init(self);
}

RxSingle_19 *new_RxSingle_19_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> capture$0) {
  J2OBJC_NEW_IMPL(RxSingle_19, initWithJavaUtilConcurrentCallable_, capture$0)
}

RxSingle_19 *create_RxSingle_19_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> capture$0) {
  J2OBJC_CREATE_IMPL(RxSingle_19, initWithJavaUtilConcurrentCallable_, capture$0)
}
