//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorSampleWithTime")
#ifdef RESTRICT_RxInternalOperatorsOperatorSampleWithTime
#define INCLUDE_ALL_RxInternalOperatorsOperatorSampleWithTime 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorSampleWithTime 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorSampleWithTime

#if !defined (RxInternalOperatorsOperatorSampleWithTime_) && (INCLUDE_ALL_RxInternalOperatorsOperatorSampleWithTime || defined(INCLUDE_RxInternalOperatorsOperatorSampleWithTime))
#define RxInternalOperatorsOperatorSampleWithTime_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "RxObservable.h"

@class JavaUtilConcurrentTimeUnit;
@class RxScheduler;
@class RxSubscriber;

@interface RxInternalOperatorsOperatorSampleWithTime : NSObject < RxObservable_Operator > {
 @public
  jlong time_;
  JavaUtilConcurrentTimeUnit *unit_;
  RxScheduler *scheduler_;
}

#pragma mark Public

- (instancetype)initWithLong:(jlong)time
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
             withRxScheduler:(RxScheduler *)scheduler;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSampleWithTime)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSampleWithTime, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSampleWithTime, scheduler_, RxScheduler *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorSampleWithTime_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxInternalOperatorsOperatorSampleWithTime *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

FOUNDATION_EXPORT RxInternalOperatorsOperatorSampleWithTime *new_RxInternalOperatorsOperatorSampleWithTime_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorSampleWithTime *create_RxInternalOperatorsOperatorSampleWithTime_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSampleWithTime)

#endif

#if !defined (RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsOperatorSampleWithTime || defined(INCLUDE_RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber))
#define RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "RxSubscriber.h"

#define RESTRICT_RxFunctionsAction0 1
#define INCLUDE_RxFunctionsAction0 1
#include "RxFunctionsAction0.h"

@class JavaUtilConcurrentAtomicAtomicReference;

@interface RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber : RxSubscriber < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *value_;
}

#pragma mark Public

- (instancetype)initWithRxSubscriber:(RxSubscriber *)subscriber;

- (void)call;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (void)onStart;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber, value_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber_initWithRxSubscriber_(RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber *self, RxSubscriber *subscriber);

FOUNDATION_EXPORT RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber *new_RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber_initWithRxSubscriber_(RxSubscriber *subscriber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber *create_RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber_initWithRxSubscriber_(RxSubscriber *subscriber);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSampleWithTime_SamplerSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorSampleWithTime")
