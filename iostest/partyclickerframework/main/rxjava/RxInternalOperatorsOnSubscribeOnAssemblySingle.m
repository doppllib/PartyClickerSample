//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxExceptionsAssemblyStackTraceException.h"
#include "RxInternalOperatorsOnSubscribeOnAssembly.h"
#include "RxInternalOperatorsOnSubscribeOnAssemblySingle.h"
#include "RxSingle.h"
#include "RxSingleSubscriber.h"

volatile_jboolean RxInternalOperatorsOnSubscribeOnAssemblySingle_fullStackTrace;

@implementation RxInternalOperatorsOnSubscribeOnAssemblySingle

- (instancetype)initWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)source {
  RxInternalOperatorsOnSubscribeOnAssemblySingle_initWithRxSingle_OnSubscribe_(self, source);
  return self;
}

- (void)callWithId:(RxSingleSubscriber *)t {
  [((id<RxSingle_OnSubscribe>) nil_chk(source_)) callWithId:create_RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber_initWithRxSingleSubscriber_withNSString_(t, stacktrace_)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(stacktrace_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingle_OnSubscribe:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxSingle_OnSubscribe;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "stacktrace_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "fullStackTrace", "Z", .constantValue.asLong = 0, 0x49, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSingle_OnSubscribe;", "(Lrx/Single$OnSubscribe<TT;>;)V", "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TT;>;)V", "Lrx/Single$OnSubscribe<TT;>;", &RxInternalOperatorsOnSubscribeOnAssemblySingle_fullStackTrace, "LRxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Single$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeOnAssemblySingle = { "OnSubscribeOnAssemblySingle", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 3, -1, 7, -1, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeOnAssemblySingle;
}

@end

void RxInternalOperatorsOnSubscribeOnAssemblySingle_initWithRxSingle_OnSubscribe_(RxInternalOperatorsOnSubscribeOnAssemblySingle *self, id<RxSingle_OnSubscribe> source) {
  NSObject_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->stacktrace_, RxInternalOperatorsOnSubscribeOnAssembly_createStacktrace());
}

RxInternalOperatorsOnSubscribeOnAssemblySingle *new_RxInternalOperatorsOnSubscribeOnAssemblySingle_initWithRxSingle_OnSubscribe_(id<RxSingle_OnSubscribe> source) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeOnAssemblySingle, initWithRxSingle_OnSubscribe_, source)
}

RxInternalOperatorsOnSubscribeOnAssemblySingle *create_RxInternalOperatorsOnSubscribeOnAssemblySingle_initWithRxSingle_OnSubscribe_(id<RxSingle_OnSubscribe> source) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeOnAssemblySingle, initWithRxSingle_OnSubscribe_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeOnAssemblySingle)

@implementation RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber

- (instancetype)initWithRxSingleSubscriber:(RxSingleSubscriber *)actual
                              withNSString:(NSString *)stacktrace {
  RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber_initWithRxSingleSubscriber_withNSString_(self, actual, stacktrace);
  return self;
}

- (void)onErrorWithNSException:(NSException *)e {
  [create_RxExceptionsAssemblyStackTraceException_initWithNSString_(stacktrace_) attachToWithNSException:e];
  [((RxSingleSubscriber *) nil_chk(actual_)) onErrorWithNSException:e];
}

- (void)onSuccessWithId:(id)t {
  [((RxSingleSubscriber *) nil_chk(actual_)) onSuccessWithId:t];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(stacktrace_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingleSubscriber:withNSString:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onSuccessWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LRxSingleSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "stacktrace_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSingleSubscriber;LNSString;", "(Lrx/SingleSubscriber<-TT;>;Ljava/lang/String;)V", "onError", "LNSException;", "onSuccess", "LNSObject;", "(TT;)V", "Lrx/SingleSubscriber<-TT;>;", "LRxInternalOperatorsOnSubscribeOnAssemblySingle;", "<T:Ljava/lang/Object;>Lrx/SingleSubscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber = { "OnAssemblySingleSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 3, 2, 8, -1, -1, 9, -1 };
  return &_RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber;
}

@end

void RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber_initWithRxSingleSubscriber_withNSString_(RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber *self, RxSingleSubscriber *actual, NSString *stacktrace) {
  RxSingleSubscriber_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->stacktrace_, stacktrace);
  [((RxSingleSubscriber *) nil_chk(actual)) addWithRxSubscription:self];
}

RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber *new_RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber_initWithRxSingleSubscriber_withNSString_(RxSingleSubscriber *actual, NSString *stacktrace) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber, initWithRxSingleSubscriber_withNSString_, actual, stacktrace)
}

RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber *create_RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber_initWithRxSingleSubscriber_withNSString_(RxSingleSubscriber *actual, NSString *stacktrace) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber, initWithRxSingleSubscriber_withNSString_, actual, stacktrace)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeOnAssemblySingle_OnAssemblySingleSubscriber)
