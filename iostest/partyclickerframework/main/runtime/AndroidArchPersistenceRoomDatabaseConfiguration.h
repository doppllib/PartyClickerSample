//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidArchPersistenceRoomDatabaseConfiguration")
#ifdef RESTRICT_AndroidArchPersistenceRoomDatabaseConfiguration
#define INCLUDE_ALL_AndroidArchPersistenceRoomDatabaseConfiguration 0
#else
#define INCLUDE_ALL_AndroidArchPersistenceRoomDatabaseConfiguration 1
#endif
#undef RESTRICT_AndroidArchPersistenceRoomDatabaseConfiguration

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidArchPersistenceRoomDatabaseConfiguration_) && (INCLUDE_ALL_AndroidArchPersistenceRoomDatabaseConfiguration || defined(INCLUDE_AndroidArchPersistenceRoomDatabaseConfiguration))
#define AndroidArchPersistenceRoomDatabaseConfiguration_

@class AndroidArchPersistenceRoomRoomDatabase_MigrationContainer;
@class AndroidContentContext;
@protocol AndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory;

@interface AndroidArchPersistenceRoomDatabaseConfiguration : NSObject {
 @public
  id<AndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory> sqliteOpenHelperFactory_;
  AndroidContentContext *context_;
  NSString *name_;
  AndroidArchPersistenceRoomRoomDatabase_MigrationContainer *migrationContainer_;
  jboolean allowMainThreadQueries_;
}

#pragma mark Public

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)name
withAndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory:(id<AndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory>)sqliteOpenHelperFactory
withAndroidArchPersistenceRoomRoomDatabase_MigrationContainer:(AndroidArchPersistenceRoomRoomDatabase_MigrationContainer *)migrationContainer
                                  withBoolean:(jboolean)allowMainThreadQueries;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchPersistenceRoomDatabaseConfiguration)

J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomDatabaseConfiguration, sqliteOpenHelperFactory_, id<AndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory>)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomDatabaseConfiguration, context_, AndroidContentContext *)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomDatabaseConfiguration, name_, NSString *)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomDatabaseConfiguration, migrationContainer_, AndroidArchPersistenceRoomRoomDatabase_MigrationContainer *)

FOUNDATION_EXPORT void AndroidArchPersistenceRoomDatabaseConfiguration_initWithAndroidContentContext_withNSString_withAndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory_withAndroidArchPersistenceRoomRoomDatabase_MigrationContainer_withBoolean_(AndroidArchPersistenceRoomDatabaseConfiguration *self, AndroidContentContext *context, NSString *name, id<AndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory> sqliteOpenHelperFactory, AndroidArchPersistenceRoomRoomDatabase_MigrationContainer *migrationContainer, jboolean allowMainThreadQueries);

FOUNDATION_EXPORT AndroidArchPersistenceRoomDatabaseConfiguration *new_AndroidArchPersistenceRoomDatabaseConfiguration_initWithAndroidContentContext_withNSString_withAndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory_withAndroidArchPersistenceRoomRoomDatabase_MigrationContainer_withBoolean_(AndroidContentContext *context, NSString *name, id<AndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory> sqliteOpenHelperFactory, AndroidArchPersistenceRoomRoomDatabase_MigrationContainer *migrationContainer, jboolean allowMainThreadQueries) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidArchPersistenceRoomDatabaseConfiguration *create_AndroidArchPersistenceRoomDatabaseConfiguration_initWithAndroidContentContext_withNSString_withAndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory_withAndroidArchPersistenceRoomRoomDatabase_MigrationContainer_withBoolean_(AndroidContentContext *context, NSString *name, id<AndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory> sqliteOpenHelperFactory, AndroidArchPersistenceRoomRoomDatabase_MigrationContainer *migrationContainer, jboolean allowMainThreadQueries);

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchPersistenceRoomDatabaseConfiguration)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidArchPersistenceRoomDatabaseConfiguration")
