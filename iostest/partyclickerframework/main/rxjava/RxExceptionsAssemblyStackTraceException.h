//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxExceptionsAssemblyStackTraceException")
#ifdef RESTRICT_RxExceptionsAssemblyStackTraceException
#define INCLUDE_ALL_RxExceptionsAssemblyStackTraceException 0
#else
#define INCLUDE_ALL_RxExceptionsAssemblyStackTraceException 1
#endif
#undef RESTRICT_RxExceptionsAssemblyStackTraceException

#if !defined (RxExceptionsAssemblyStackTraceException_) && (INCLUDE_ALL_RxExceptionsAssemblyStackTraceException || defined(INCLUDE_RxExceptionsAssemblyStackTraceException))
#define RxExceptionsAssemblyStackTraceException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@interface RxExceptionsAssemblyStackTraceException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)message;

- (void)attachToWithNSException:(NSException *)exception;

- (NSException *)fillInStackTrace;

+ (RxExceptionsAssemblyStackTraceException *)findWithNSException:(NSException *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsAssemblyStackTraceException)

FOUNDATION_EXPORT void RxExceptionsAssemblyStackTraceException_initWithNSString_(RxExceptionsAssemblyStackTraceException *self, NSString *message);

FOUNDATION_EXPORT RxExceptionsAssemblyStackTraceException *new_RxExceptionsAssemblyStackTraceException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsAssemblyStackTraceException *create_RxExceptionsAssemblyStackTraceException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT RxExceptionsAssemblyStackTraceException *RxExceptionsAssemblyStackTraceException_findWithNSException_(NSException *e);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsAssemblyStackTraceException)

#endif

#pragma pop_macro("INCLUDE_ALL_RxExceptionsAssemblyStackTraceException")
