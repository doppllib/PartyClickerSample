//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxExceptionsOnErrorFailedException")
#ifdef RESTRICT_RxExceptionsOnErrorFailedException
#define INCLUDE_ALL_RxExceptionsOnErrorFailedException 0
#else
#define INCLUDE_ALL_RxExceptionsOnErrorFailedException 1
#endif
#undef RESTRICT_RxExceptionsOnErrorFailedException

#if !defined (RxExceptionsOnErrorFailedException_) && (INCLUDE_ALL_RxExceptionsOnErrorFailedException || defined(INCLUDE_RxExceptionsOnErrorFailedException))
#define RxExceptionsOnErrorFailedException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@interface RxExceptionsOnErrorFailedException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)e;

- (instancetype)initWithNSException:(NSException *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsOnErrorFailedException)

FOUNDATION_EXPORT void RxExceptionsOnErrorFailedException_initWithNSString_withNSException_(RxExceptionsOnErrorFailedException *self, NSString *message, NSException *e);

FOUNDATION_EXPORT RxExceptionsOnErrorFailedException *new_RxExceptionsOnErrorFailedException_initWithNSString_withNSException_(NSString *message, NSException *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsOnErrorFailedException *create_RxExceptionsOnErrorFailedException_initWithNSString_withNSException_(NSString *message, NSException *e);

FOUNDATION_EXPORT void RxExceptionsOnErrorFailedException_initWithNSException_(RxExceptionsOnErrorFailedException *self, NSException *e);

FOUNDATION_EXPORT RxExceptionsOnErrorFailedException *new_RxExceptionsOnErrorFailedException_initWithNSException_(NSException *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsOnErrorFailedException *create_RxExceptionsOnErrorFailedException_initWithNSException_(NSException *e);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsOnErrorFailedException)

#endif

#pragma pop_macro("INCLUDE_ALL_RxExceptionsOnErrorFailedException")
