//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcat")
#ifdef RESTRICT_RxInternalOperatorsCompletableOnSubscribeConcat
#define INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcat 0
#else
#define INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcat 1
#endif
#undef RESTRICT_RxInternalOperatorsCompletableOnSubscribeConcat

#if !defined (RxInternalOperatorsCompletableOnSubscribeConcat_) && (INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcat || defined(INCLUDE_RxInternalOperatorsCompletableOnSubscribeConcat))
#define RxInternalOperatorsCompletableOnSubscribeConcat_

#define RESTRICT_RxCompletable 1
#define INCLUDE_RxCompletable_OnSubscribe 1
#include "RxCompletable.h"

@class RxObservable;
@protocol RxCompletableSubscriber;

@interface RxInternalOperatorsCompletableOnSubscribeConcat : NSObject < RxCompletable_OnSubscribe > {
 @public
  RxObservable *sources_;
  jint prefetch_;
}

#pragma mark Public

- (instancetype)initWithRxObservable:(RxObservable *)sources
                             withInt:(jint)prefetch;

- (void)callWithId:(id<RxCompletableSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableOnSubscribeConcat)

J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcat, sources_, RxObservable *)

FOUNDATION_EXPORT void RxInternalOperatorsCompletableOnSubscribeConcat_initWithRxObservable_withInt_(RxInternalOperatorsCompletableOnSubscribeConcat *self, RxObservable *sources, jint prefetch);

FOUNDATION_EXPORT RxInternalOperatorsCompletableOnSubscribeConcat *new_RxInternalOperatorsCompletableOnSubscribeConcat_initWithRxObservable_withInt_(RxObservable *sources, jint prefetch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsCompletableOnSubscribeConcat *create_RxInternalOperatorsCompletableOnSubscribeConcat_initWithRxObservable_withInt_(RxObservable *sources, jint prefetch);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableOnSubscribeConcat)

#endif

#if !defined (RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcat || defined(INCLUDE_RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber))
#define RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "RxSubscriber.h"

@class JavaUtilConcurrentAtomicAtomicBoolean;
@class JavaUtilConcurrentAtomicAtomicInteger;
@class RxCompletable;
@class RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber;
@class RxInternalUtilUnsafeSpscArrayQueue;
@class RxSubscriptionsSerialSubscription;
@protocol RxCompletableSubscriber;

@interface RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber : RxSubscriber {
 @public
  id<RxCompletableSubscriber> actual_;
  RxSubscriptionsSerialSubscription *sr_;
  RxInternalUtilUnsafeSpscArrayQueue *queue_;
  volatile_jboolean done_;
  JavaUtilConcurrentAtomicAtomicBoolean *once_;
  RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber *inner_;
  JavaUtilConcurrentAtomicAtomicInteger *wip_;
}

#pragma mark Public

- (instancetype)initWithRxCompletableSubscriber:(id<RxCompletableSubscriber>)actual
                                        withInt:(jint)prefetch;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(RxCompletable *)t;

#pragma mark Package-Private

- (void)innerComplete;

- (void)innerErrorWithNSException:(NSException *)e;

- (void)next;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber, actual_, id<RxCompletableSubscriber>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber, sr_, RxSubscriptionsSerialSubscription *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber, queue_, RxInternalUtilUnsafeSpscArrayQueue *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber, once_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber, inner_, RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber, wip_, JavaUtilConcurrentAtomicAtomicInteger *)

FOUNDATION_EXPORT void RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_initWithRxCompletableSubscriber_withInt_(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber *self, id<RxCompletableSubscriber> actual, jint prefetch);

FOUNDATION_EXPORT RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber *new_RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_initWithRxCompletableSubscriber_withInt_(id<RxCompletableSubscriber> actual, jint prefetch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber *create_RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_initWithRxCompletableSubscriber_withInt_(id<RxCompletableSubscriber> actual, jint prefetch);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber)

#endif

#if !defined (RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcat || defined(INCLUDE_RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber))
#define RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber_

#define RESTRICT_RxCompletableSubscriber 1
#define INCLUDE_RxCompletableSubscriber 1
#include "RxCompletableSubscriber.h"

@class RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber;
@protocol RxSubscription;

@interface RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber : NSObject < RxCompletableSubscriber >

#pragma mark Public

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

#pragma mark Package-Private

- (instancetype)initWithRxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber:(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber)

FOUNDATION_EXPORT void RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber_initWithRxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber *self, RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber *outer$);

FOUNDATION_EXPORT RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber *new_RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber_initWithRxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber *create_RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber_initWithRxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableOnSubscribeConcat_CompletableConcatSubscriber_ConcatInnerSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcat")
