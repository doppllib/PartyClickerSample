//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxPluginsRxJavaHooks")
#ifdef RESTRICT_RxPluginsRxJavaHooks
#define INCLUDE_ALL_RxPluginsRxJavaHooks 0
#else
#define INCLUDE_ALL_RxPluginsRxJavaHooks 1
#endif
#undef RESTRICT_RxPluginsRxJavaHooks

#if !defined (RxPluginsRxJavaHooks_) && (INCLUDE_ALL_RxPluginsRxJavaHooks || defined(INCLUDE_RxPluginsRxJavaHooks))
#define RxPluginsRxJavaHooks_

@class RxCompletable;
@class RxObservable;
@class RxScheduler;
@class RxSingle;
@protocol RxCompletable_OnSubscribe;
@protocol RxCompletable_Operator;
@protocol RxFunctionsAction0;
@protocol RxFunctionsAction1;
@protocol RxFunctionsFunc0;
@protocol RxFunctionsFunc1;
@protocol RxFunctionsFunc2;
@protocol RxObservable_OnSubscribe;
@protocol RxObservable_Operator;
@protocol RxSingle_OnSubscribe;
@protocol RxSubscription;

@interface RxPluginsRxJavaHooks : NSObject

#pragma mark Public

+ (void)clear;

+ (void)clearAssemblyTracking;

+ (void)enableAssemblyTracking;

+ (id<RxFunctionsFunc1>)getOnCompletableCreate;

+ (id<RxFunctionsFunc1>)getOnCompletableLift;

+ (id<RxFunctionsFunc2>)getOnCompletableStart;

+ (id<RxFunctionsFunc1>)getOnCompletableSubscribeError;

+ (id<RxFunctionsFunc1>)getOnComputationScheduler;

+ (id<RxFunctionsAction1>)getOnError;

+ (id<RxFunctionsFunc0>)getOnGenericScheduledExecutorService;

+ (id<RxFunctionsFunc1>)getOnIOScheduler;

+ (id<RxFunctionsFunc1>)getOnNewThreadScheduler;

+ (id<RxFunctionsFunc1>)getOnObservableCreate;

+ (id<RxFunctionsFunc1>)getOnObservableLift;

+ (id<RxFunctionsFunc1>)getOnObservableReturn;

+ (id<RxFunctionsFunc2>)getOnObservableStart;

+ (id<RxFunctionsFunc1>)getOnObservableSubscribeError;

+ (id<RxFunctionsFunc1>)getOnScheduleAction;

+ (id<RxFunctionsFunc1>)getOnSingleCreate;

+ (id<RxFunctionsFunc1>)getOnSingleLift;

+ (id<RxFunctionsFunc1>)getOnSingleReturn;

+ (id<RxFunctionsFunc2>)getOnSingleStart;

+ (id<RxFunctionsFunc1>)getOnSingleSubscribeError;

+ (jboolean)isLockdown;

+ (void)lockdown;

+ (NSException *)onCompletableErrorWithNSException:(NSException *)error;

+ (id<RxCompletable_Operator>)onCompletableLiftWithRxCompletable_Operator:(id<RxCompletable_Operator>)operator_;

+ (id<RxCompletable_OnSubscribe>)onCompletableStartWithRxCompletable:(RxCompletable *)instance
                                       withRxCompletable_OnSubscribe:(id<RxCompletable_OnSubscribe>)onSubscribe;

+ (RxScheduler *)onComputationSchedulerWithRxScheduler:(RxScheduler *)scheduler;

+ (id<RxObservable_OnSubscribe>)onCreateWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe;

+ (id<RxSingle_OnSubscribe>)onCreateWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)onSubscribe;

+ (id<RxCompletable_OnSubscribe>)onCreateWithRxCompletable_OnSubscribe:(id<RxCompletable_OnSubscribe>)onSubscribe;

+ (void)onErrorWithNSException:(NSException *)ex;

+ (RxScheduler *)onIOSchedulerWithRxScheduler:(RxScheduler *)scheduler;

+ (RxScheduler *)onNewThreadSchedulerWithRxScheduler:(RxScheduler *)scheduler;

+ (NSException *)onObservableErrorWithNSException:(NSException *)error;

+ (id<RxObservable_Operator>)onObservableLiftWithRxObservable_Operator:(id<RxObservable_Operator>)operator_;

+ (id<RxSubscription>)onObservableReturnWithRxSubscription:(id<RxSubscription>)subscription;

+ (id<RxObservable_OnSubscribe>)onObservableStartWithRxObservable:(RxObservable *)instance
                                     withRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe;

+ (id<RxFunctionsAction0>)onScheduledActionWithRxFunctionsAction0:(id<RxFunctionsAction0>)action;

+ (NSException *)onSingleErrorWithNSException:(NSException *)error;

+ (id<RxObservable_Operator>)onSingleLiftWithRxObservable_Operator:(id<RxObservable_Operator>)operator_;

+ (id<RxSubscription>)onSingleReturnWithRxSubscription:(id<RxSubscription>)subscription;

+ (id<RxSingle_OnSubscribe>)onSingleStartWithRxSingle:(RxSingle *)instance
                             withRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)onSubscribe;

+ (void)reset;

+ (void)resetAssemblyTracking;

+ (void)setOnCompletableCreateWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onCompletableCreate;

+ (void)setOnCompletableLiftWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onCompletableLift;

+ (void)setOnCompletableStartWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)onCompletableStart;

+ (void)setOnCompletableSubscribeErrorWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onCompletableSubscribeError;

+ (void)setOnComputationSchedulerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onComputationScheduler;

+ (void)setOnErrorWithRxFunctionsAction1:(id<RxFunctionsAction1>)onError;

+ (void)setOnGenericScheduledExecutorServiceWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)factory;

+ (void)setOnIOSchedulerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onIOScheduler;

+ (void)setOnNewThreadSchedulerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onNewThreadScheduler;

+ (void)setOnObservableCreateWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onObservableCreate;

+ (void)setOnObservableLiftWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onObservableLift;

+ (void)setOnObservableReturnWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onObservableReturn;

+ (void)setOnObservableStartWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)onObservableStart;

+ (void)setOnObservableSubscribeErrorWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onObservableSubscribeError;

+ (void)setOnScheduleActionWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onScheduleAction;

+ (void)setOnSingleCreateWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onSingleCreate;

+ (void)setOnSingleLiftWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onSingleLift;

+ (void)setOnSingleReturnWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onSingleReturn;

+ (void)setOnSingleStartWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)onSingleStart;

+ (void)setOnSingleSubscribeErrorWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onSingleSubscribeError;

#pragma mark Package-Private

+ (void)init__ OBJC_METHOD_FAMILY_NONE;

+ (void)initCreate OBJC_METHOD_FAMILY_NONE;

+ (void)signalUncaughtWithNSException:(NSException *)ex;

@end

J2OBJC_STATIC_INIT(RxPluginsRxJavaHooks)

inline jboolean RxPluginsRxJavaHooks_get_lockdown_();
inline jboolean RxPluginsRxJavaHooks_set_lockdown_(jboolean value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_jboolean RxPluginsRxJavaHooks_lockdown_;
J2OBJC_STATIC_FIELD_PRIMITIVE_VOLATILE(RxPluginsRxJavaHooks, lockdown_, jboolean)

inline id<RxFunctionsAction1> RxPluginsRxJavaHooks_get_onError();
inline id<RxFunctionsAction1> RxPluginsRxJavaHooks_set_onError(id<RxFunctionsAction1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onError;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onError, id<RxFunctionsAction1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onObservableCreate();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onObservableCreate(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onObservableCreate;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onObservableCreate, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onSingleCreate();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onSingleCreate(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onSingleCreate;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onSingleCreate, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onCompletableCreate();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onCompletableCreate(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onCompletableCreate;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onCompletableCreate, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc2> RxPluginsRxJavaHooks_get_onObservableStart();
inline id<RxFunctionsFunc2> RxPluginsRxJavaHooks_set_onObservableStart(id<RxFunctionsFunc2> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onObservableStart;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onObservableStart, id<RxFunctionsFunc2>)

inline id<RxFunctionsFunc2> RxPluginsRxJavaHooks_get_onSingleStart();
inline id<RxFunctionsFunc2> RxPluginsRxJavaHooks_set_onSingleStart(id<RxFunctionsFunc2> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onSingleStart;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onSingleStart, id<RxFunctionsFunc2>)

inline id<RxFunctionsFunc2> RxPluginsRxJavaHooks_get_onCompletableStart();
inline id<RxFunctionsFunc2> RxPluginsRxJavaHooks_set_onCompletableStart(id<RxFunctionsFunc2> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onCompletableStart;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onCompletableStart, id<RxFunctionsFunc2>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onComputationScheduler();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onComputationScheduler(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onComputationScheduler;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onComputationScheduler, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onIOScheduler();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onIOScheduler(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onIOScheduler;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onIOScheduler, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onNewThreadScheduler();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onNewThreadScheduler(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onNewThreadScheduler;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onNewThreadScheduler, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onScheduleAction();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onScheduleAction(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onScheduleAction;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onScheduleAction, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onObservableReturn();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onObservableReturn(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onObservableReturn;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onObservableReturn, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onSingleReturn();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onSingleReturn(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onSingleReturn;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onSingleReturn, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc0> RxPluginsRxJavaHooks_get_onGenericScheduledExecutorService();
inline id<RxFunctionsFunc0> RxPluginsRxJavaHooks_set_onGenericScheduledExecutorService(id<RxFunctionsFunc0> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onGenericScheduledExecutorService;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onGenericScheduledExecutorService, id<RxFunctionsFunc0>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onObservableSubscribeError();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onObservableSubscribeError(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onObservableSubscribeError;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onObservableSubscribeError, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onSingleSubscribeError();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onSingleSubscribeError(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onSingleSubscribeError;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onSingleSubscribeError, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onCompletableSubscribeError();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onCompletableSubscribeError(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onCompletableSubscribeError;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onCompletableSubscribeError, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onObservableLift();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onObservableLift(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onObservableLift;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onObservableLift, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onSingleLift();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onSingleLift(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onSingleLift;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onSingleLift, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_get_onCompletableLift();
inline id<RxFunctionsFunc1> RxPluginsRxJavaHooks_set_onCompletableLift(id<RxFunctionsFunc1> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id RxPluginsRxJavaHooks_onCompletableLift;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(RxPluginsRxJavaHooks, onCompletableLift, id<RxFunctionsFunc1>)

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_init__();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_initCreate();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_reset();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_clear();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_lockdown();

FOUNDATION_EXPORT jboolean RxPluginsRxJavaHooks_isLockdown();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_onErrorWithNSException_(NSException *ex);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_signalUncaughtWithNSException_(NSException *ex);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxPluginsRxJavaHooks_onCreateWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> onSubscribe);

FOUNDATION_EXPORT id<RxSingle_OnSubscribe> RxPluginsRxJavaHooks_onCreateWithRxSingle_OnSubscribe_(id<RxSingle_OnSubscribe> onSubscribe);

FOUNDATION_EXPORT id<RxCompletable_OnSubscribe> RxPluginsRxJavaHooks_onCreateWithRxCompletable_OnSubscribe_(id<RxCompletable_OnSubscribe> onSubscribe);

FOUNDATION_EXPORT RxScheduler *RxPluginsRxJavaHooks_onComputationSchedulerWithRxScheduler_(RxScheduler *scheduler);

FOUNDATION_EXPORT RxScheduler *RxPluginsRxJavaHooks_onIOSchedulerWithRxScheduler_(RxScheduler *scheduler);

FOUNDATION_EXPORT RxScheduler *RxPluginsRxJavaHooks_onNewThreadSchedulerWithRxScheduler_(RxScheduler *scheduler);

FOUNDATION_EXPORT id<RxFunctionsAction0> RxPluginsRxJavaHooks_onScheduledActionWithRxFunctionsAction0_(id<RxFunctionsAction0> action);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxPluginsRxJavaHooks_onObservableStartWithRxObservable_withRxObservable_OnSubscribe_(RxObservable *instance, id<RxObservable_OnSubscribe> onSubscribe);

FOUNDATION_EXPORT id<RxSubscription> RxPluginsRxJavaHooks_onObservableReturnWithRxSubscription_(id<RxSubscription> subscription);

FOUNDATION_EXPORT NSException *RxPluginsRxJavaHooks_onObservableErrorWithNSException_(NSException *error);

FOUNDATION_EXPORT id<RxObservable_Operator> RxPluginsRxJavaHooks_onObservableLiftWithRxObservable_Operator_(id<RxObservable_Operator> operator_);

FOUNDATION_EXPORT id<RxSingle_OnSubscribe> RxPluginsRxJavaHooks_onSingleStartWithRxSingle_withRxSingle_OnSubscribe_(RxSingle *instance, id<RxSingle_OnSubscribe> onSubscribe);

FOUNDATION_EXPORT id<RxSubscription> RxPluginsRxJavaHooks_onSingleReturnWithRxSubscription_(id<RxSubscription> subscription);

FOUNDATION_EXPORT NSException *RxPluginsRxJavaHooks_onSingleErrorWithNSException_(NSException *error);

FOUNDATION_EXPORT id<RxObservable_Operator> RxPluginsRxJavaHooks_onSingleLiftWithRxObservable_Operator_(id<RxObservable_Operator> operator_);

FOUNDATION_EXPORT id<RxCompletable_OnSubscribe> RxPluginsRxJavaHooks_onCompletableStartWithRxCompletable_withRxCompletable_OnSubscribe_(RxCompletable *instance, id<RxCompletable_OnSubscribe> onSubscribe);

FOUNDATION_EXPORT NSException *RxPluginsRxJavaHooks_onCompletableErrorWithNSException_(NSException *error);

FOUNDATION_EXPORT id<RxCompletable_Operator> RxPluginsRxJavaHooks_onCompletableLiftWithRxCompletable_Operator_(id<RxCompletable_Operator> operator_);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnErrorWithRxFunctionsAction1_(id<RxFunctionsAction1> onError);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnCompletableCreateWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onCompletableCreate);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnObservableCreateWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onObservableCreate);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnSingleCreateWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onSingleCreate);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnComputationSchedulerWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onComputationScheduler);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnIOSchedulerWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onIOScheduler);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnNewThreadSchedulerWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onNewThreadScheduler);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnScheduleActionWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onScheduleAction);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnCompletableStartWithRxFunctionsFunc2_(id<RxFunctionsFunc2> onCompletableStart);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnObservableStartWithRxFunctionsFunc2_(id<RxFunctionsFunc2> onObservableStart);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnSingleStartWithRxFunctionsFunc2_(id<RxFunctionsFunc2> onSingleStart);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnObservableReturnWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onObservableReturn);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnSingleReturnWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onSingleReturn);

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnSingleSubscribeErrorWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onSingleSubscribeError);

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnSingleSubscribeError();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnCompletableSubscribeErrorWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onCompletableSubscribeError);

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnCompletableSubscribeError();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnObservableSubscribeErrorWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onObservableSubscribeError);

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnObservableSubscribeError();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnObservableLiftWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onObservableLift);

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnObservableLift();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnSingleLiftWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onSingleLift);

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnSingleLift();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnCompletableLiftWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onCompletableLift);

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnCompletableLift();

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnComputationScheduler();

FOUNDATION_EXPORT id<RxFunctionsAction1> RxPluginsRxJavaHooks_getOnError();

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnIOScheduler();

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnNewThreadScheduler();

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnObservableCreate();

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnScheduleAction();

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnSingleCreate();

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnCompletableCreate();

FOUNDATION_EXPORT id<RxFunctionsFunc2> RxPluginsRxJavaHooks_getOnCompletableStart();

FOUNDATION_EXPORT id<RxFunctionsFunc2> RxPluginsRxJavaHooks_getOnObservableStart();

FOUNDATION_EXPORT id<RxFunctionsFunc2> RxPluginsRxJavaHooks_getOnSingleStart();

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnObservableReturn();

FOUNDATION_EXPORT id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnSingleReturn();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_resetAssemblyTracking();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_clearAssemblyTracking();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_enableAssemblyTracking();

FOUNDATION_EXPORT void RxPluginsRxJavaHooks_setOnGenericScheduledExecutorServiceWithRxFunctionsFunc0_(id<RxFunctionsFunc0> factory);

FOUNDATION_EXPORT id<RxFunctionsFunc0> RxPluginsRxJavaHooks_getOnGenericScheduledExecutorService();

J2OBJC_TYPE_LITERAL_HEADER(RxPluginsRxJavaHooks)

#endif

#pragma pop_macro("INCLUDE_ALL_RxPluginsRxJavaHooks")
