//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PPAppModule_ProvidesPartyDatabaseFactory")
#ifdef RESTRICT_PPAppModule_ProvidesPartyDatabaseFactory
#define INCLUDE_ALL_PPAppModule_ProvidesPartyDatabaseFactory 0
#else
#define INCLUDE_ALL_PPAppModule_ProvidesPartyDatabaseFactory 1
#endif
#undef RESTRICT_PPAppModule_ProvidesPartyDatabaseFactory

#if !defined (PPAppModule_ProvidesPartyDatabaseFactory_) && (INCLUDE_ALL_PPAppModule_ProvidesPartyDatabaseFactory || defined(INCLUDE_PPAppModule_ProvidesPartyDatabaseFactory))
#define PPAppModule_ProvidesPartyDatabaseFactory_

#define RESTRICT_DaggerInternalFactory 1
#define INCLUDE_DaggerInternalFactory 1
#include "DaggerInternalFactory.h"

@class PDPartyDatabase;
@class PPAppModule;
@protocol JavaxInjectProvider;

@interface PPAppModule_ProvidesPartyDatabaseFactory : NSObject < DaggerInternalFactory >

#pragma mark Public

- (instancetype)initWithPPAppModule:(PPAppModule *)module
            withJavaxInjectProvider:(id<JavaxInjectProvider>)applicationProvider;

+ (id<DaggerInternalFactory>)createWithPPAppModule:(PPAppModule *)module
                           withJavaxInjectProvider:(id<JavaxInjectProvider>)applicationProvider;

- (PDPartyDatabase *)get;

@end

J2OBJC_EMPTY_STATIC_INIT(PPAppModule_ProvidesPartyDatabaseFactory)

FOUNDATION_EXPORT void PPAppModule_ProvidesPartyDatabaseFactory_initWithPPAppModule_withJavaxInjectProvider_(PPAppModule_ProvidesPartyDatabaseFactory *self, PPAppModule *module, id<JavaxInjectProvider> applicationProvider);

FOUNDATION_EXPORT PPAppModule_ProvidesPartyDatabaseFactory *new_PPAppModule_ProvidesPartyDatabaseFactory_initWithPPAppModule_withJavaxInjectProvider_(PPAppModule *module, id<JavaxInjectProvider> applicationProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PPAppModule_ProvidesPartyDatabaseFactory *create_PPAppModule_ProvidesPartyDatabaseFactory_initWithPPAppModule_withJavaxInjectProvider_(PPAppModule *module, id<JavaxInjectProvider> applicationProvider);

FOUNDATION_EXPORT id<DaggerInternalFactory> PPAppModule_ProvidesPartyDatabaseFactory_createWithPPAppModule_withJavaxInjectProvider_(PPAppModule *module, id<JavaxInjectProvider> applicationProvider);

J2OBJC_TYPE_LITERAL_HEADER(PPAppModule_ProvidesPartyDatabaseFactory)

@compatibility_alias ComKgalliganPartyclickerPresenterAppModule_ProvidesPartyDatabaseFactory PPAppModule_ProvidesPartyDatabaseFactory;

#endif

#pragma pop_macro("INCLUDE_ALL_PPAppModule_ProvidesPartyDatabaseFactory")
