//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxAsyncEmitter.h"
#include "RxBackpressureOverflow.h"
#include "RxCompletable.h"
#include "RxEmitter.h"
#include "RxExceptionsExceptions.h"
#include "RxExceptionsOnErrorFailedException.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsAction2.h"
#include "RxFunctionsActions.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxFunctionsFunc3.h"
#include "RxFunctionsFunc4.h"
#include "RxFunctionsFunc5.h"
#include "RxFunctionsFunc6.h"
#include "RxFunctionsFunc7.h"
#include "RxFunctionsFunc8.h"
#include "RxFunctionsFunc9.h"
#include "RxFunctionsFuncN.h"
#include "RxFunctionsFunctions.h"
#include "RxInternalOperatorsCachedObservable.h"
#include "RxInternalOperatorsEmptyObservableHolder.h"
#include "RxInternalOperatorsNeverObservableHolder.h"
#include "RxInternalOperatorsOnSubscribeAmb.h"
#include "RxInternalOperatorsOnSubscribeCollect.h"
#include "RxInternalOperatorsOnSubscribeCombineLatest.h"
#include "RxInternalOperatorsOnSubscribeConcatMap.h"
#include "RxInternalOperatorsOnSubscribeDefer.h"
#include "RxInternalOperatorsOnSubscribeDelaySubscription.h"
#include "RxInternalOperatorsOnSubscribeDelaySubscriptionOther.h"
#include "RxInternalOperatorsOnSubscribeDelaySubscriptionWithSelector.h"
#include "RxInternalOperatorsOnSubscribeDetach.h"
#include "RxInternalOperatorsOnSubscribeDoOnEach.h"
#include "RxInternalOperatorsOnSubscribeFilter.h"
#include "RxInternalOperatorsOnSubscribeFlattenIterable.h"
#include "RxInternalOperatorsOnSubscribeFromArray.h"
#include "RxInternalOperatorsOnSubscribeFromAsyncEmitter.h"
#include "RxInternalOperatorsOnSubscribeFromCallable.h"
#include "RxInternalOperatorsOnSubscribeFromEmitter.h"
#include "RxInternalOperatorsOnSubscribeFromIterable.h"
#include "RxInternalOperatorsOnSubscribeGroupJoin.h"
#include "RxInternalOperatorsOnSubscribeJoin.h"
#include "RxInternalOperatorsOnSubscribeLift.h"
#include "RxInternalOperatorsOnSubscribeMap.h"
#include "RxInternalOperatorsOnSubscribeRange.h"
#include "RxInternalOperatorsOnSubscribeRedo.h"
#include "RxInternalOperatorsOnSubscribeReduce.h"
#include "RxInternalOperatorsOnSubscribeReduceSeed.h"
#include "RxInternalOperatorsOnSubscribeSingle.h"
#include "RxInternalOperatorsOnSubscribeSkipTimed.h"
#include "RxInternalOperatorsOnSubscribeTakeLastOne.h"
#include "RxInternalOperatorsOnSubscribeThrow.h"
#include "RxInternalOperatorsOnSubscribeTimerOnce.h"
#include "RxInternalOperatorsOnSubscribeTimerPeriodically.h"
#include "RxInternalOperatorsOnSubscribeToMap.h"
#include "RxInternalOperatorsOnSubscribeToMultimap.h"
#include "RxInternalOperatorsOnSubscribeToObservableFuture.h"
#include "RxInternalOperatorsOnSubscribeUsing.h"
#include "RxInternalOperatorsOperatorAll.h"
#include "RxInternalOperatorsOperatorAny.h"
#include "RxInternalOperatorsOperatorAsObservable.h"
#include "RxInternalOperatorsOperatorBufferWithSingleObservable.h"
#include "RxInternalOperatorsOperatorBufferWithSize.h"
#include "RxInternalOperatorsOperatorBufferWithStartEndObservable.h"
#include "RxInternalOperatorsOperatorBufferWithTime.h"
#include "RxInternalOperatorsOperatorCast.h"
#include "RxInternalOperatorsOperatorDebounceWithSelector.h"
#include "RxInternalOperatorsOperatorDebounceWithTime.h"
#include "RxInternalOperatorsOperatorDelay.h"
#include "RxInternalOperatorsOperatorDelayWithSelector.h"
#include "RxInternalOperatorsOperatorDematerialize.h"
#include "RxInternalOperatorsOperatorDistinct.h"
#include "RxInternalOperatorsOperatorDistinctUntilChanged.h"
#include "RxInternalOperatorsOperatorDoAfterTerminate.h"
#include "RxInternalOperatorsOperatorDoOnRequest.h"
#include "RxInternalOperatorsOperatorDoOnSubscribe.h"
#include "RxInternalOperatorsOperatorDoOnUnsubscribe.h"
#include "RxInternalOperatorsOperatorEagerConcatMap.h"
#include "RxInternalOperatorsOperatorElementAt.h"
#include "RxInternalOperatorsOperatorGroupBy.h"
#include "RxInternalOperatorsOperatorIgnoreElements.h"
#include "RxInternalOperatorsOperatorMapNotification.h"
#include "RxInternalOperatorsOperatorMapPair.h"
#include "RxInternalOperatorsOperatorMaterialize.h"
#include "RxInternalOperatorsOperatorMerge.h"
#include "RxInternalOperatorsOperatorObserveOn.h"
#include "RxInternalOperatorsOperatorOnBackpressureBuffer.h"
#include "RxInternalOperatorsOperatorOnBackpressureDrop.h"
#include "RxInternalOperatorsOperatorOnBackpressureLatest.h"
#include "RxInternalOperatorsOperatorOnErrorResumeNextViaFunction.h"
#include "RxInternalOperatorsOperatorPublish.h"
#include "RxInternalOperatorsOperatorReplay.h"
#include "RxInternalOperatorsOperatorRetryWithPredicate.h"
#include "RxInternalOperatorsOperatorSampleWithObservable.h"
#include "RxInternalOperatorsOperatorSampleWithTime.h"
#include "RxInternalOperatorsOperatorScan.h"
#include "RxInternalOperatorsOperatorSequenceEqual.h"
#include "RxInternalOperatorsOperatorSerialize.h"
#include "RxInternalOperatorsOperatorSingle.h"
#include "RxInternalOperatorsOperatorSkip.h"
#include "RxInternalOperatorsOperatorSkipLast.h"
#include "RxInternalOperatorsOperatorSkipLastTimed.h"
#include "RxInternalOperatorsOperatorSkipUntil.h"
#include "RxInternalOperatorsOperatorSkipWhile.h"
#include "RxInternalOperatorsOperatorSubscribeOn.h"
#include "RxInternalOperatorsOperatorSwitch.h"
#include "RxInternalOperatorsOperatorSwitchIfEmpty.h"
#include "RxInternalOperatorsOperatorTake.h"
#include "RxInternalOperatorsOperatorTakeLast.h"
#include "RxInternalOperatorsOperatorTakeLastTimed.h"
#include "RxInternalOperatorsOperatorTakeTimed.h"
#include "RxInternalOperatorsOperatorTakeUntil.h"
#include "RxInternalOperatorsOperatorTakeUntilPredicate.h"
#include "RxInternalOperatorsOperatorTakeWhile.h"
#include "RxInternalOperatorsOperatorThrottleFirst.h"
#include "RxInternalOperatorsOperatorTimeInterval.h"
#include "RxInternalOperatorsOperatorTimeout.h"
#include "RxInternalOperatorsOperatorTimeoutWithSelector.h"
#include "RxInternalOperatorsOperatorTimestamp.h"
#include "RxInternalOperatorsOperatorToObservableList.h"
#include "RxInternalOperatorsOperatorToObservableSortedList.h"
#include "RxInternalOperatorsOperatorUnsubscribeOn.h"
#include "RxInternalOperatorsOperatorWindowWithObservable.h"
#include "RxInternalOperatorsOperatorWindowWithObservableFactory.h"
#include "RxInternalOperatorsOperatorWindowWithSize.h"
#include "RxInternalOperatorsOperatorWindowWithStartEndObservable.h"
#include "RxInternalOperatorsOperatorWindowWithTime.h"
#include "RxInternalOperatorsOperatorWithLatestFrom.h"
#include "RxInternalOperatorsOperatorWithLatestFromMany.h"
#include "RxInternalOperatorsOperatorZip.h"
#include "RxInternalOperatorsOperatorZipIterable.h"
#include "RxInternalUtilActionNotificationObserver.h"
#include "RxInternalUtilActionObserver.h"
#include "RxInternalUtilActionSubscriber.h"
#include "RxInternalUtilInternalObservableUtils.h"
#include "RxInternalUtilObserverSubscriber.h"
#include "RxInternalUtilRxRingBuffer.h"
#include "RxInternalUtilScalarSynchronousObservable.h"
#include "RxInternalUtilUtilityFunctions.h"
#include "RxObservable.h"
#include "RxObservablesAsyncOnSubscribe.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObservablesConnectableObservable.h"
#include "RxObservablesSyncOnSubscribe.h"
#include "RxObserver.h"
#include "RxObserversSafeSubscriber.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSingle.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSubscriptions.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/Future.h"
#include "java/util/concurrent/TimeUnit.h"

@interface RxObservable ()

- (RxObservable *)mapNotificationWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onNext
                                 withRxFunctionsFunc1:(id<RxFunctionsFunc1>)onError
                                 withRxFunctionsFunc0:(id<RxFunctionsFunc0>)onCompleted;

@end

__attribute__((unused)) static RxObservable *RxObservable_liftWithRxObservable_Operator_(RxObservable *self, id<RxObservable_Operator> operator_);

__attribute__((unused)) static RxObservable *RxObservable_nest(RxObservable *self);

__attribute__((unused)) static RxObservable *RxObservable_bufferWithInt_withInt_(RxObservable *self, jint count, jint skip);

__attribute__((unused)) static RxObservable *RxObservable_bufferWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_bufferWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(RxObservable *self, jlong timespan, JavaUtilConcurrentTimeUnit *unit, jint count, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_bufferWithRxObservable_withInt_(RxObservable *self, RxObservable *boundary, jint initialCapacity);

__attribute__((unused)) static RxObservable *RxObservable_cacheWithInitialCapacityWithInt_(RxObservable *self, jint initialCapacity);

__attribute__((unused)) static RxObservable *RxObservable_castWithIOSClass_(RxObservable *self, IOSClass *klass);

__attribute__((unused)) static RxObservable *RxObservable_concatMapWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> func);

__attribute__((unused)) static RxObservable *RxObservable_concatMapDelayErrorWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> func);

__attribute__((unused)) static RxObservable *RxObservable_debounceWithLong_withJavaUtilConcurrentTimeUnit_(RxObservable *self, jlong timeout, JavaUtilConcurrentTimeUnit *unit);

__attribute__((unused)) static RxObservable *RxObservable_debounceWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong timeout, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_switchIfEmptyWithRxObservable_(RxObservable *self, RxObservable *alternate);

__attribute__((unused)) static RxObservable *RxObservable_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_delaySubscriptionWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_delaySubscriptionWithRxFunctionsFunc0_(RxObservable *self, id<RxFunctionsFunc0> subscriptionDelay);

__attribute__((unused)) static RxObservable *RxObservable_concatMapEagerWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> mapper);

__attribute__((unused)) static RxObservable *RxObservable_concatMapEagerWithRxFunctionsFunc1_withInt_(RxObservable *self, id<RxFunctionsFunc1> mapper, jint capacityHint);

__attribute__((unused)) static RxObservable *RxObservable_existsWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> predicate);

__attribute__((unused)) static RxObservable *RxObservable_filterWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> predicate);

__attribute__((unused)) static RxObservable *RxObservable_flatMapWithRxFunctionsFunc1_withRxFunctionsFunc2_(RxObservable *self, id<RxFunctionsFunc1> collectionSelector, id<RxFunctionsFunc2> resultSelector);

__attribute__((unused)) static RxObservable *RxObservable_flatMapWithRxFunctionsFunc1_withRxFunctionsFunc2_withInt_(RxObservable *self, id<RxFunctionsFunc1> collectionSelector, id<RxFunctionsFunc2> resultSelector, jint maxConcurrent);

__attribute__((unused)) static RxObservable *RxObservable_flatMapIterableWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> collectionSelector);

__attribute__((unused)) static RxObservable *RxObservable_flatMapIterableWithRxFunctionsFunc1_withInt_(RxObservable *self, id<RxFunctionsFunc1> collectionSelector, jint maxConcurrent);

__attribute__((unused)) static RxObservable *RxObservable_ignoreElements(RxObservable *self);

__attribute__((unused)) static RxObservable *RxObservable_mapWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> func);

__attribute__((unused)) static RxObservable *RxObservable_mapNotificationWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(RxObservable *self, id<RxFunctionsFunc1> onNext, id<RxFunctionsFunc1> onError, id<RxFunctionsFunc0> onCompleted);

__attribute__((unused)) static RxObservable *RxObservable_observeOnWithRxScheduler_withInt_(RxObservable *self, RxScheduler *scheduler, jint bufferSize);

__attribute__((unused)) static RxObservable *RxObservable_observeOnWithRxScheduler_withBoolean_withInt_(RxObservable *self, RxScheduler *scheduler, jboolean delayError, jint bufferSize);

__attribute__((unused)) static RxObservablesConnectableObservable *RxObservable_publish(RxObservable *self);

__attribute__((unused)) static RxObservable *RxObservable_reduceWithId_withRxFunctionsFunc2_(RxObservable *self, id initialValue, id<RxFunctionsFunc2> accumulator);

__attribute__((unused)) static RxObservablesConnectableObservable *RxObservable_replay(RxObservable *self);

__attribute__((unused)) static RxObservable *RxObservable_replayWithRxFunctionsFunc1_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, id<RxFunctionsFunc1> selector, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_replayWithRxFunctionsFunc1_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, id<RxFunctionsFunc1> selector, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservablesConnectableObservable *RxObservable_replayWithInt_(RxObservable *self, jint bufferSize);

__attribute__((unused)) static RxObservablesConnectableObservable *RxObservable_replayWithInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservablesConnectableObservable *RxObservable_replayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_sampleWithLong_withJavaUtilConcurrentTimeUnit_(RxObservable *self, jlong period, JavaUtilConcurrentTimeUnit *unit);

__attribute__((unused)) static RxObservable *RxObservable_sampleWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong period, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_single(RxObservable *self);

__attribute__((unused)) static RxObservable *RxObservable_singleOrDefaultWithId_(RxObservable *self, id defaultValue);

__attribute__((unused)) static RxObservable *RxObservable_skipWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_skipLastWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static id<RxSubscription> RxObservable_subscribeWithRxFunctionsAction1_(RxObservable *self, id<RxFunctionsAction1> onNext);

__attribute__((unused)) static id<RxSubscription> RxObservable_subscribeWithRxFunctionsAction1_withRxFunctionsAction1_(RxObservable *self, id<RxFunctionsAction1> onNext, id<RxFunctionsAction1> onError);

__attribute__((unused)) static id<RxSubscription> RxObservable_subscribeWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(RxObservable *self, id<RxFunctionsAction1> onNext, id<RxFunctionsAction1> onError, id<RxFunctionsAction0> onCompleted);

__attribute__((unused)) static id<RxSubscription> RxObservable_subscribeWithRxSubscriber_(RxObservable *self, RxSubscriber *subscriber);

__attribute__((unused)) static RxObservable *RxObservable_subscribeOnWithRxScheduler_(RxObservable *self, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_takeWithInt_(RxObservable *self, jint count);

__attribute__((unused)) static RxObservable *RxObservable_takeWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_takeFirstWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> predicate);

__attribute__((unused)) static RxObservable *RxObservable_takeLastWithInt_(RxObservable *self, jint count);

__attribute__((unused)) static RxObservable *RxObservable_takeLastWithInt_withLong_withJavaUtilConcurrentTimeUnit_(RxObservable *self, jint count, jlong time, JavaUtilConcurrentTimeUnit *unit);

__attribute__((unused)) static RxObservable *RxObservable_takeLastWithInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jint count, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_takeLastWithLong_withJavaUtilConcurrentTimeUnit_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit);

__attribute__((unused)) static RxObservable *RxObservable_takeLastWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_throttleFirstWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong skipDuration, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_timeIntervalWithRxScheduler_(RxObservable *self, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_timeoutWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(RxObservable *self, id<RxFunctionsFunc0> firstTimeoutSelector, id<RxFunctionsFunc1> timeoutSelector, RxObservable *other);

__attribute__((unused)) static RxObservable *RxObservable_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(RxObservable *self, jlong timeout, JavaUtilConcurrentTimeUnit *timeUnit, RxObservable *other, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_timestampWithRxScheduler_(RxObservable *self, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_toList(RxObservable *self);

__attribute__((unused)) static RxObservable *RxObservable_toSortedList(RxObservable *self);

__attribute__((unused)) static RxObservable *RxObservable_toSortedListWithRxFunctionsFunc2_(RxObservable *self, id<RxFunctionsFunc2> sortFunction);

__attribute__((unused)) static RxObservable *RxObservable_windowWithInt_withInt_(RxObservable *self, jint count, jint skip);

__attribute__((unused)) static RxObservable *RxObservable_windowWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_windowWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(RxObservable *self, jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, jint count, RxScheduler *scheduler);

__attribute__((unused)) static RxObservable *RxObservable_windowWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(RxObservable *self, jlong timespan, JavaUtilConcurrentTimeUnit *unit, jint count, RxScheduler *scheduler);

__attribute__((unused)) static IOSObjectArray *RxObservable__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxObservable__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxObservable__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxObservable__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxObservable__Annotations$4();

@interface RxObservable_OnSubscribe : NSObject

@end

@interface RxObservable_Operator : NSObject

@end

@interface RxObservable_Transformer : NSObject

@end

@implementation RxObservable

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)f {
  RxObservable_initWithRxObservable_OnSubscribe_(self, f);
  return self;
}

+ (RxObservable *)createWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)f {
  return RxObservable_createWithRxObservable_OnSubscribe_(f);
}

+ (RxObservable *)createWithRxObservablesSyncOnSubscribe:(RxObservablesSyncOnSubscribe *)syncOnSubscribe {
  return RxObservable_createWithRxObservablesSyncOnSubscribe_(syncOnSubscribe);
}

+ (RxObservable *)createWithRxObservablesAsyncOnSubscribe:(RxObservablesAsyncOnSubscribe *)asyncOnSubscribe {
  return RxObservable_createWithRxObservablesAsyncOnSubscribe_(asyncOnSubscribe);
}

- (RxObservable *)liftWithRxObservable_Operator:(id<RxObservable_Operator>)operator_ {
  return RxObservable_liftWithRxObservable_Operator_(self, operator_);
}

- (RxObservable *)composeWithRxObservable_Transformer:(id<RxObservable_Transformer>)transformer {
  return [((id<RxObservable_Transformer>) nil_chk((transformer))) callWithId:self];
}

- (id)toWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)converter {
  return [((id<RxFunctionsFunc1>) nil_chk(converter)) callWithId:self];
}

- (RxSingle *)toSingle {
  return create_RxSingle_initWithRxSingle_OnSubscribe_(RxInternalOperatorsOnSubscribeSingle_createWithRxObservable_(self));
}

- (RxCompletable *)toCompletable {
  return RxCompletable_fromObservableWithRxObservable_(self);
}

+ (RxObservable *)ambWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return RxObservable_ambWithJavaLangIterable_(sources);
}

+ (RxObservable *)ambWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2 {
  return RxObservable_ambWithRxObservable_withRxObservable_(o1, o2);
}

+ (RxObservable *)ambWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3 {
  return RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_(o1, o2, o3);
}

+ (RxObservable *)ambWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4 {
  return RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4);
}

+ (RxObservable *)ambWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                     withRxObservable:(RxObservable *)o5 {
  return RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5);
}

+ (RxObservable *)ambWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                     withRxObservable:(RxObservable *)o5
                     withRxObservable:(RxObservable *)o6 {
  return RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6);
}

+ (RxObservable *)ambWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                     withRxObservable:(RxObservable *)o5
                     withRxObservable:(RxObservable *)o6
                     withRxObservable:(RxObservable *)o7 {
  return RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7);
}

+ (RxObservable *)ambWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                     withRxObservable:(RxObservable *)o5
                     withRxObservable:(RxObservable *)o6
                     withRxObservable:(RxObservable *)o7
                     withRxObservable:(RxObservable *)o8 {
  return RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7, o8);
}

+ (RxObservable *)ambWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                     withRxObservable:(RxObservable *)o5
                     withRxObservable:(RxObservable *)o6
                     withRxObservable:(RxObservable *)o7
                     withRxObservable:(RxObservable *)o8
                     withRxObservable:(RxObservable *)o9 {
  return RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7, o8, o9);
}

+ (RxObservable *)combineLatestWithRxObservable:(RxObservable *)o1
                               withRxObservable:(RxObservable *)o2
                           withRxFunctionsFunc2:(id<RxFunctionsFunc2>)combineFunction {
  return RxObservable_combineLatestWithRxObservable_withRxObservable_withRxFunctionsFunc2_(o1, o2, combineFunction);
}

+ (RxObservable *)combineLatestWithRxObservable:(RxObservable *)o1
                               withRxObservable:(RxObservable *)o2
                               withRxObservable:(RxObservable *)o3
                           withRxFunctionsFunc3:(id<RxFunctionsFunc3>)combineFunction {
  return RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc3_(o1, o2, o3, combineFunction);
}

+ (RxObservable *)combineLatestWithRxObservable:(RxObservable *)o1
                               withRxObservable:(RxObservable *)o2
                               withRxObservable:(RxObservable *)o3
                               withRxObservable:(RxObservable *)o4
                           withRxFunctionsFunc4:(id<RxFunctionsFunc4>)combineFunction {
  return RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc4_(o1, o2, o3, o4, combineFunction);
}

+ (RxObservable *)combineLatestWithRxObservable:(RxObservable *)o1
                               withRxObservable:(RxObservable *)o2
                               withRxObservable:(RxObservable *)o3
                               withRxObservable:(RxObservable *)o4
                               withRxObservable:(RxObservable *)o5
                           withRxFunctionsFunc5:(id<RxFunctionsFunc5>)combineFunction {
  return RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc5_(o1, o2, o3, o4, o5, combineFunction);
}

+ (RxObservable *)combineLatestWithRxObservable:(RxObservable *)o1
                               withRxObservable:(RxObservable *)o2
                               withRxObservable:(RxObservable *)o3
                               withRxObservable:(RxObservable *)o4
                               withRxObservable:(RxObservable *)o5
                               withRxObservable:(RxObservable *)o6
                           withRxFunctionsFunc6:(id<RxFunctionsFunc6>)combineFunction {
  return RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc6_(o1, o2, o3, o4, o5, o6, combineFunction);
}

+ (RxObservable *)combineLatestWithRxObservable:(RxObservable *)o1
                               withRxObservable:(RxObservable *)o2
                               withRxObservable:(RxObservable *)o3
                               withRxObservable:(RxObservable *)o4
                               withRxObservable:(RxObservable *)o5
                               withRxObservable:(RxObservable *)o6
                               withRxObservable:(RxObservable *)o7
                           withRxFunctionsFunc7:(id<RxFunctionsFunc7>)combineFunction {
  return RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc7_(o1, o2, o3, o4, o5, o6, o7, combineFunction);
}

+ (RxObservable *)combineLatestWithRxObservable:(RxObservable *)o1
                               withRxObservable:(RxObservable *)o2
                               withRxObservable:(RxObservable *)o3
                               withRxObservable:(RxObservable *)o4
                               withRxObservable:(RxObservable *)o5
                               withRxObservable:(RxObservable *)o6
                               withRxObservable:(RxObservable *)o7
                               withRxObservable:(RxObservable *)o8
                           withRxFunctionsFunc8:(id<RxFunctionsFunc8>)combineFunction {
  return RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc8_(o1, o2, o3, o4, o5, o6, o7, o8, combineFunction);
}

+ (RxObservable *)combineLatestWithRxObservable:(RxObservable *)o1
                               withRxObservable:(RxObservable *)o2
                               withRxObservable:(RxObservable *)o3
                               withRxObservable:(RxObservable *)o4
                               withRxObservable:(RxObservable *)o5
                               withRxObservable:(RxObservable *)o6
                               withRxObservable:(RxObservable *)o7
                               withRxObservable:(RxObservable *)o8
                               withRxObservable:(RxObservable *)o9
                           withRxFunctionsFunc9:(id<RxFunctionsFunc9>)combineFunction {
  return RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc9_(o1, o2, o3, o4, o5, o6, o7, o8, o9, combineFunction);
}

+ (RxObservable *)combineLatestWithJavaUtilList:(id<JavaUtilList>)sources
                           withRxFunctionsFuncN:(id<RxFunctionsFuncN>)combineFunction {
  return RxObservable_combineLatestWithJavaUtilList_withRxFunctionsFuncN_(sources, combineFunction);
}

+ (RxObservable *)combineLatestWithJavaLangIterable:(id<JavaLangIterable>)sources
                               withRxFunctionsFuncN:(id<RxFunctionsFuncN>)combineFunction {
  return RxObservable_combineLatestWithJavaLangIterable_withRxFunctionsFuncN_(sources, combineFunction);
}

+ (RxObservable *)combineLatestDelayErrorWithJavaLangIterable:(id<JavaLangIterable>)sources
                                         withRxFunctionsFuncN:(id<RxFunctionsFuncN>)combineFunction {
  return RxObservable_combineLatestDelayErrorWithJavaLangIterable_withRxFunctionsFuncN_(sources, combineFunction);
}

+ (RxObservable *)concatWithJavaLangIterable:(id<JavaLangIterable>)sequences {
  return RxObservable_concatWithJavaLangIterable_(sequences);
}

+ (RxObservable *)concatWithRxObservable:(RxObservable *)observables {
  return RxObservable_concatWithRxObservable_(observables);
}

+ (RxObservable *)concatWithRxObservable:(RxObservable *)t1
                        withRxObservable:(RxObservable *)t2 {
  return RxObservable_concatWithRxObservable_withRxObservable_(t1, t2);
}

+ (RxObservable *)concatWithRxObservable:(RxObservable *)t1
                        withRxObservable:(RxObservable *)t2
                        withRxObservable:(RxObservable *)t3 {
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_(t1, t2, t3);
}

+ (RxObservable *)concatWithRxObservable:(RxObservable *)t1
                        withRxObservable:(RxObservable *)t2
                        withRxObservable:(RxObservable *)t3
                        withRxObservable:(RxObservable *)t4 {
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4);
}

+ (RxObservable *)concatWithRxObservable:(RxObservable *)t1
                        withRxObservable:(RxObservable *)t2
                        withRxObservable:(RxObservable *)t3
                        withRxObservable:(RxObservable *)t4
                        withRxObservable:(RxObservable *)t5 {
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5);
}

+ (RxObservable *)concatWithRxObservable:(RxObservable *)t1
                        withRxObservable:(RxObservable *)t2
                        withRxObservable:(RxObservable *)t3
                        withRxObservable:(RxObservable *)t4
                        withRxObservable:(RxObservable *)t5
                        withRxObservable:(RxObservable *)t6 {
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6);
}

+ (RxObservable *)concatWithRxObservable:(RxObservable *)t1
                        withRxObservable:(RxObservable *)t2
                        withRxObservable:(RxObservable *)t3
                        withRxObservable:(RxObservable *)t4
                        withRxObservable:(RxObservable *)t5
                        withRxObservable:(RxObservable *)t6
                        withRxObservable:(RxObservable *)t7 {
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7);
}

+ (RxObservable *)concatWithRxObservable:(RxObservable *)t1
                        withRxObservable:(RxObservable *)t2
                        withRxObservable:(RxObservable *)t3
                        withRxObservable:(RxObservable *)t4
                        withRxObservable:(RxObservable *)t5
                        withRxObservable:(RxObservable *)t6
                        withRxObservable:(RxObservable *)t7
                        withRxObservable:(RxObservable *)t8 {
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7, t8);
}

+ (RxObservable *)concatWithRxObservable:(RxObservable *)t1
                        withRxObservable:(RxObservable *)t2
                        withRxObservable:(RxObservable *)t3
                        withRxObservable:(RxObservable *)t4
                        withRxObservable:(RxObservable *)t5
                        withRxObservable:(RxObservable *)t6
                        withRxObservable:(RxObservable *)t7
                        withRxObservable:(RxObservable *)t8
                        withRxObservable:(RxObservable *)t9 {
  return RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7, t8, t9);
}

+ (RxObservable *)concatDelayErrorWithRxObservable:(RxObservable *)sources {
  return RxObservable_concatDelayErrorWithRxObservable_(sources);
}

+ (RxObservable *)concatDelayErrorWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return RxObservable_concatDelayErrorWithJavaLangIterable_(sources);
}

+ (RxObservable *)concatDelayErrorWithRxObservable:(RxObservable *)t1
                                  withRxObservable:(RxObservable *)t2 {
  return RxObservable_concatDelayErrorWithRxObservable_withRxObservable_(t1, t2);
}

+ (RxObservable *)concatDelayErrorWithRxObservable:(RxObservable *)t1
                                  withRxObservable:(RxObservable *)t2
                                  withRxObservable:(RxObservable *)t3 {
  return RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_(t1, t2, t3);
}

+ (RxObservable *)concatDelayErrorWithRxObservable:(RxObservable *)t1
                                  withRxObservable:(RxObservable *)t2
                                  withRxObservable:(RxObservable *)t3
                                  withRxObservable:(RxObservable *)t4 {
  return RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4);
}

+ (RxObservable *)concatDelayErrorWithRxObservable:(RxObservable *)t1
                                  withRxObservable:(RxObservable *)t2
                                  withRxObservable:(RxObservable *)t3
                                  withRxObservable:(RxObservable *)t4
                                  withRxObservable:(RxObservable *)t5 {
  return RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5);
}

+ (RxObservable *)concatDelayErrorWithRxObservable:(RxObservable *)t1
                                  withRxObservable:(RxObservable *)t2
                                  withRxObservable:(RxObservable *)t3
                                  withRxObservable:(RxObservable *)t4
                                  withRxObservable:(RxObservable *)t5
                                  withRxObservable:(RxObservable *)t6 {
  return RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6);
}

+ (RxObservable *)concatDelayErrorWithRxObservable:(RxObservable *)t1
                                  withRxObservable:(RxObservable *)t2
                                  withRxObservable:(RxObservable *)t3
                                  withRxObservable:(RxObservable *)t4
                                  withRxObservable:(RxObservable *)t5
                                  withRxObservable:(RxObservable *)t6
                                  withRxObservable:(RxObservable *)t7 {
  return RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7);
}

+ (RxObservable *)concatDelayErrorWithRxObservable:(RxObservable *)t1
                                  withRxObservable:(RxObservable *)t2
                                  withRxObservable:(RxObservable *)t3
                                  withRxObservable:(RxObservable *)t4
                                  withRxObservable:(RxObservable *)t5
                                  withRxObservable:(RxObservable *)t6
                                  withRxObservable:(RxObservable *)t7
                                  withRxObservable:(RxObservable *)t8 {
  return RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7, t8);
}

+ (RxObservable *)concatDelayErrorWithRxObservable:(RxObservable *)t1
                                  withRxObservable:(RxObservable *)t2
                                  withRxObservable:(RxObservable *)t3
                                  withRxObservable:(RxObservable *)t4
                                  withRxObservable:(RxObservable *)t5
                                  withRxObservable:(RxObservable *)t6
                                  withRxObservable:(RxObservable *)t7
                                  withRxObservable:(RxObservable *)t8
                                  withRxObservable:(RxObservable *)t9 {
  return RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7, t8, t9);
}

+ (RxObservable *)deferWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)observableFactory {
  return RxObservable_deferWithRxFunctionsFunc0_(observableFactory);
}

+ (RxObservable *)empty {
  return RxObservable_empty();
}

+ (RxObservable *)errorWithNSException:(NSException *)exception {
  return RxObservable_errorWithNSException_(exception);
}

+ (RxObservable *)fromWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future {
  return RxObservable_fromWithJavaUtilConcurrentFuture_(future);
}

+ (RxObservable *)fromWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                          withLong:(jlong)timeout
                    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_fromWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(future, timeout, unit);
}

+ (RxObservable *)fromWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                   withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_fromWithJavaUtilConcurrentFuture_withRxScheduler_(future, scheduler);
}

+ (RxObservable *)fromWithJavaLangIterable:(id<JavaLangIterable>)iterable {
  return RxObservable_fromWithJavaLangIterable_(iterable);
}

+ (RxObservable *)fromWithNSObjectArray:(IOSObjectArray *)array {
  return RxObservable_fromWithNSObjectArray_(array);
}

+ (RxObservable *)fromEmitterWithRxFunctionsAction1:(id<RxFunctionsAction1>)emitter
                withRxAsyncEmitter_BackpressureMode:(RxAsyncEmitter_BackpressureMode *)backpressure {
  return RxObservable_fromEmitterWithRxFunctionsAction1_withRxAsyncEmitter_BackpressureMode_(emitter, backpressure);
}

+ (RxObservable *)fromEmitterWithRxFunctionsAction1:(id<RxFunctionsAction1>)emitter
                     withRxEmitter_BackpressureMode:(RxEmitter_BackpressureMode *)backpressure {
  return RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(emitter, backpressure);
}

+ (RxObservable *)fromCallableWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)func {
  return RxObservable_fromCallableWithJavaUtilConcurrentCallable_(func);
}

+ (RxObservable *)intervalWithLong:(jlong)interval
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_(interval, unit);
}

+ (RxObservable *)intervalWithLong:(jlong)interval
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(interval, unit, scheduler);
}

+ (RxObservable *)intervalWithLong:(jlong)initialDelay
                          withLong:(jlong)period
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_(initialDelay, period, unit);
}

+ (RxObservable *)intervalWithLong:(jlong)initialDelay
                          withLong:(jlong)period
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(initialDelay, period, unit, scheduler);
}

+ (RxObservable *)justWithId:(id)value {
  return RxObservable_justWithId_(value);
}

+ (RxObservable *)justWithId:(id)t1
                      withId:(id)t2 {
  return RxObservable_justWithId_withId_(t1, t2);
}

+ (RxObservable *)justWithId:(id)t1
                      withId:(id)t2
                      withId:(id)t3 {
  return RxObservable_justWithId_withId_withId_(t1, t2, t3);
}

+ (RxObservable *)justWithId:(id)t1
                      withId:(id)t2
                      withId:(id)t3
                      withId:(id)t4 {
  return RxObservable_justWithId_withId_withId_withId_(t1, t2, t3, t4);
}

+ (RxObservable *)justWithId:(id)t1
                      withId:(id)t2
                      withId:(id)t3
                      withId:(id)t4
                      withId:(id)t5 {
  return RxObservable_justWithId_withId_withId_withId_withId_(t1, t2, t3, t4, t5);
}

+ (RxObservable *)justWithId:(id)t1
                      withId:(id)t2
                      withId:(id)t3
                      withId:(id)t4
                      withId:(id)t5
                      withId:(id)t6 {
  return RxObservable_justWithId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6);
}

+ (RxObservable *)justWithId:(id)t1
                      withId:(id)t2
                      withId:(id)t3
                      withId:(id)t4
                      withId:(id)t5
                      withId:(id)t6
                      withId:(id)t7 {
  return RxObservable_justWithId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7);
}

+ (RxObservable *)justWithId:(id)t1
                      withId:(id)t2
                      withId:(id)t3
                      withId:(id)t4
                      withId:(id)t5
                      withId:(id)t6
                      withId:(id)t7
                      withId:(id)t8 {
  return RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8);
}

+ (RxObservable *)justWithId:(id)t1
                      withId:(id)t2
                      withId:(id)t3
                      withId:(id)t4
                      withId:(id)t5
                      withId:(id)t6
                      withId:(id)t7
                      withId:(id)t8
                      withId:(id)t9 {
  return RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8, t9);
}

+ (RxObservable *)justWithId:(id)t1
                      withId:(id)t2
                      withId:(id)t3
                      withId:(id)t4
                      withId:(id)t5
                      withId:(id)t6
                      withId:(id)t7
                      withId:(id)t8
                      withId:(id)t9
                      withId:(id)t10 {
  return RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10);
}

+ (RxObservable *)mergeWithJavaLangIterable:(id<JavaLangIterable>)sequences {
  return RxObservable_mergeWithJavaLangIterable_(sequences);
}

+ (RxObservable *)mergeWithJavaLangIterable:(id<JavaLangIterable>)sequences
                                    withInt:(jint)maxConcurrent {
  return RxObservable_mergeWithJavaLangIterable_withInt_(sequences, maxConcurrent);
}

+ (RxObservable *)mergeWithRxObservable:(RxObservable *)source {
  return RxObservable_mergeWithRxObservable_(source);
}

+ (RxObservable *)mergeWithRxObservable:(RxObservable *)source
                                withInt:(jint)maxConcurrent {
  return RxObservable_mergeWithRxObservable_withInt_(source, maxConcurrent);
}

+ (RxObservable *)mergeWithRxObservable:(RxObservable *)t1
                       withRxObservable:(RxObservable *)t2 {
  return RxObservable_mergeWithRxObservable_withRxObservable_(t1, t2);
}

+ (RxObservable *)mergeWithRxObservable:(RxObservable *)t1
                       withRxObservable:(RxObservable *)t2
                       withRxObservable:(RxObservable *)t3 {
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_(t1, t2, t3);
}

+ (RxObservable *)mergeWithRxObservable:(RxObservable *)t1
                       withRxObservable:(RxObservable *)t2
                       withRxObservable:(RxObservable *)t3
                       withRxObservable:(RxObservable *)t4 {
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4);
}

+ (RxObservable *)mergeWithRxObservable:(RxObservable *)t1
                       withRxObservable:(RxObservable *)t2
                       withRxObservable:(RxObservable *)t3
                       withRxObservable:(RxObservable *)t4
                       withRxObservable:(RxObservable *)t5 {
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5);
}

+ (RxObservable *)mergeWithRxObservable:(RxObservable *)t1
                       withRxObservable:(RxObservable *)t2
                       withRxObservable:(RxObservable *)t3
                       withRxObservable:(RxObservable *)t4
                       withRxObservable:(RxObservable *)t5
                       withRxObservable:(RxObservable *)t6 {
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6);
}

+ (RxObservable *)mergeWithRxObservable:(RxObservable *)t1
                       withRxObservable:(RxObservable *)t2
                       withRxObservable:(RxObservable *)t3
                       withRxObservable:(RxObservable *)t4
                       withRxObservable:(RxObservable *)t5
                       withRxObservable:(RxObservable *)t6
                       withRxObservable:(RxObservable *)t7 {
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7);
}

+ (RxObservable *)mergeWithRxObservable:(RxObservable *)t1
                       withRxObservable:(RxObservable *)t2
                       withRxObservable:(RxObservable *)t3
                       withRxObservable:(RxObservable *)t4
                       withRxObservable:(RxObservable *)t5
                       withRxObservable:(RxObservable *)t6
                       withRxObservable:(RxObservable *)t7
                       withRxObservable:(RxObservable *)t8 {
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7, t8);
}

+ (RxObservable *)mergeWithRxObservable:(RxObservable *)t1
                       withRxObservable:(RxObservable *)t2
                       withRxObservable:(RxObservable *)t3
                       withRxObservable:(RxObservable *)t4
                       withRxObservable:(RxObservable *)t5
                       withRxObservable:(RxObservable *)t6
                       withRxObservable:(RxObservable *)t7
                       withRxObservable:(RxObservable *)t8
                       withRxObservable:(RxObservable *)t9 {
  return RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7, t8, t9);
}

+ (RxObservable *)mergeWithRxObservableArray:(IOSObjectArray *)sequences {
  return RxObservable_mergeWithRxObservableArray_(sequences);
}

+ (RxObservable *)mergeWithRxObservableArray:(IOSObjectArray *)sequences
                                     withInt:(jint)maxConcurrent {
  return RxObservable_mergeWithRxObservableArray_withInt_(sequences, maxConcurrent);
}

+ (RxObservable *)mergeDelayErrorWithRxObservable:(RxObservable *)source {
  return RxObservable_mergeDelayErrorWithRxObservable_(source);
}

+ (RxObservable *)mergeDelayErrorWithRxObservable:(RxObservable *)source
                                          withInt:(jint)maxConcurrent {
  return RxObservable_mergeDelayErrorWithRxObservable_withInt_(source, maxConcurrent);
}

+ (RxObservable *)mergeDelayErrorWithJavaLangIterable:(id<JavaLangIterable>)sequences {
  return RxObservable_mergeDelayErrorWithJavaLangIterable_(sequences);
}

+ (RxObservable *)mergeDelayErrorWithJavaLangIterable:(id<JavaLangIterable>)sequences
                                              withInt:(jint)maxConcurrent {
  return RxObservable_mergeDelayErrorWithJavaLangIterable_withInt_(sequences, maxConcurrent);
}

+ (RxObservable *)mergeDelayErrorWithRxObservable:(RxObservable *)t1
                                 withRxObservable:(RxObservable *)t2 {
  return RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_(t1, t2);
}

+ (RxObservable *)mergeDelayErrorWithRxObservable:(RxObservable *)t1
                                 withRxObservable:(RxObservable *)t2
                                 withRxObservable:(RxObservable *)t3 {
  return RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_(t1, t2, t3);
}

+ (RxObservable *)mergeDelayErrorWithRxObservable:(RxObservable *)t1
                                 withRxObservable:(RxObservable *)t2
                                 withRxObservable:(RxObservable *)t3
                                 withRxObservable:(RxObservable *)t4 {
  return RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4);
}

+ (RxObservable *)mergeDelayErrorWithRxObservable:(RxObservable *)t1
                                 withRxObservable:(RxObservable *)t2
                                 withRxObservable:(RxObservable *)t3
                                 withRxObservable:(RxObservable *)t4
                                 withRxObservable:(RxObservable *)t5 {
  return RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5);
}

+ (RxObservable *)mergeDelayErrorWithRxObservable:(RxObservable *)t1
                                 withRxObservable:(RxObservable *)t2
                                 withRxObservable:(RxObservable *)t3
                                 withRxObservable:(RxObservable *)t4
                                 withRxObservable:(RxObservable *)t5
                                 withRxObservable:(RxObservable *)t6 {
  return RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6);
}

+ (RxObservable *)mergeDelayErrorWithRxObservable:(RxObservable *)t1
                                 withRxObservable:(RxObservable *)t2
                                 withRxObservable:(RxObservable *)t3
                                 withRxObservable:(RxObservable *)t4
                                 withRxObservable:(RxObservable *)t5
                                 withRxObservable:(RxObservable *)t6
                                 withRxObservable:(RxObservable *)t7 {
  return RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7);
}

+ (RxObservable *)mergeDelayErrorWithRxObservable:(RxObservable *)t1
                                 withRxObservable:(RxObservable *)t2
                                 withRxObservable:(RxObservable *)t3
                                 withRxObservable:(RxObservable *)t4
                                 withRxObservable:(RxObservable *)t5
                                 withRxObservable:(RxObservable *)t6
                                 withRxObservable:(RxObservable *)t7
                                 withRxObservable:(RxObservable *)t8 {
  return RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7, t8);
}

+ (RxObservable *)mergeDelayErrorWithRxObservable:(RxObservable *)t1
                                 withRxObservable:(RxObservable *)t2
                                 withRxObservable:(RxObservable *)t3
                                 withRxObservable:(RxObservable *)t4
                                 withRxObservable:(RxObservable *)t5
                                 withRxObservable:(RxObservable *)t6
                                 withRxObservable:(RxObservable *)t7
                                 withRxObservable:(RxObservable *)t8
                                 withRxObservable:(RxObservable *)t9 {
  return RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(t1, t2, t3, t4, t5, t6, t7, t8, t9);
}

- (RxObservable *)nest {
  return RxObservable_nest(self);
}

+ (RxObservable *)never {
  return RxObservable_never();
}

+ (RxObservable *)rangeWithInt:(jint)start
                       withInt:(jint)count {
  return RxObservable_rangeWithInt_withInt_(start, count);
}

+ (RxObservable *)rangeWithInt:(jint)start
                       withInt:(jint)count
               withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_rangeWithInt_withInt_withRxScheduler_(start, count, scheduler);
}

+ (RxObservable *)sequenceEqualWithRxObservable:(RxObservable *)first
                               withRxObservable:(RxObservable *)second {
  return RxObservable_sequenceEqualWithRxObservable_withRxObservable_(first, second);
}

+ (RxObservable *)sequenceEqualWithRxObservable:(RxObservable *)first
                               withRxObservable:(RxObservable *)second
                           withRxFunctionsFunc2:(id<RxFunctionsFunc2>)equality {
  return RxObservable_sequenceEqualWithRxObservable_withRxObservable_withRxFunctionsFunc2_(first, second, equality);
}

+ (RxObservable *)switchOnNextWithRxObservable:(RxObservable *)sequenceOfSequences {
  return RxObservable_switchOnNextWithRxObservable_(sequenceOfSequences);
}

+ (RxObservable *)switchOnNextDelayErrorWithRxObservable:(RxObservable *)sequenceOfSequences {
  return RxObservable_switchOnNextDelayErrorWithRxObservable_(sequenceOfSequences);
}

+ (RxObservable *)timerWithLong:(jlong)initialDelay
                       withLong:(jlong)period
 withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_timerWithLong_withLong_withJavaUtilConcurrentTimeUnit_(initialDelay, period, unit);
}

+ (RxObservable *)timerWithLong:(jlong)initialDelay
                       withLong:(jlong)period
 withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_timerWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(initialDelay, period, unit, scheduler);
}

+ (RxObservable *)timerWithLong:(jlong)delay
 withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_(delay, unit);
}

+ (RxObservable *)timerWithLong:(jlong)delay
 withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(delay, unit, scheduler);
}

+ (RxObservable *)using__WithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFactory
                         withRxFunctionsFunc1:(id<RxFunctionsFunc1>)observableFactory
                       withRxFunctionsAction1:(id<RxFunctionsAction1>)disposeAction {
  return RxObservable_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_(resourceFactory, observableFactory, disposeAction);
}

+ (RxObservable *)using__WithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFactory
                         withRxFunctionsFunc1:(id<RxFunctionsFunc1>)observableFactory
                       withRxFunctionsAction1:(id<RxFunctionsAction1>)disposeAction
                                  withBoolean:(jboolean)disposeEagerly {
  return RxObservable_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, disposeAction, disposeEagerly);
}

+ (RxObservable *)zipWithJavaLangIterable:(id<JavaLangIterable>)ws
                     withRxFunctionsFuncN:(id<RxFunctionsFuncN>)zipFunction {
  return RxObservable_zipWithJavaLangIterable_withRxFunctionsFuncN_(ws, zipFunction);
}

+ (RxObservable *)zipWithRxObservableArray:(IOSObjectArray *)ws
                      withRxFunctionsFuncN:(id<RxFunctionsFuncN>)zipFunction {
  return RxObservable_zipWithRxObservableArray_withRxFunctionsFuncN_(ws, zipFunction);
}

+ (RxObservable *)zipWithRxObservable:(RxObservable *)ws
                 withRxFunctionsFuncN:(id<RxFunctionsFuncN>)zipFunction {
  return RxObservable_zipWithRxObservable_withRxFunctionsFuncN_(ws, zipFunction);
}

+ (RxObservable *)zipWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                 withRxFunctionsFunc2:(id<RxFunctionsFunc2>)zipFunction {
  return RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(o1, o2, zipFunction);
}

+ (RxObservable *)zipWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                 withRxFunctionsFunc3:(id<RxFunctionsFunc3>)zipFunction {
  return RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc3_(o1, o2, o3, zipFunction);
}

+ (RxObservable *)zipWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                 withRxFunctionsFunc4:(id<RxFunctionsFunc4>)zipFunction {
  return RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc4_(o1, o2, o3, o4, zipFunction);
}

+ (RxObservable *)zipWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                     withRxObservable:(RxObservable *)o5
                 withRxFunctionsFunc5:(id<RxFunctionsFunc5>)zipFunction {
  return RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc5_(o1, o2, o3, o4, o5, zipFunction);
}

+ (RxObservable *)zipWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                     withRxObservable:(RxObservable *)o5
                     withRxObservable:(RxObservable *)o6
                 withRxFunctionsFunc6:(id<RxFunctionsFunc6>)zipFunction {
  return RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc6_(o1, o2, o3, o4, o5, o6, zipFunction);
}

+ (RxObservable *)zipWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                     withRxObservable:(RxObservable *)o5
                     withRxObservable:(RxObservable *)o6
                     withRxObservable:(RxObservable *)o7
                 withRxFunctionsFunc7:(id<RxFunctionsFunc7>)zipFunction {
  return RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc7_(o1, o2, o3, o4, o5, o6, o7, zipFunction);
}

+ (RxObservable *)zipWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                     withRxObservable:(RxObservable *)o5
                     withRxObservable:(RxObservable *)o6
                     withRxObservable:(RxObservable *)o7
                     withRxObservable:(RxObservable *)o8
                 withRxFunctionsFunc8:(id<RxFunctionsFunc8>)zipFunction {
  return RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc8_(o1, o2, o3, o4, o5, o6, o7, o8, zipFunction);
}

+ (RxObservable *)zipWithRxObservable:(RxObservable *)o1
                     withRxObservable:(RxObservable *)o2
                     withRxObservable:(RxObservable *)o3
                     withRxObservable:(RxObservable *)o4
                     withRxObservable:(RxObservable *)o5
                     withRxObservable:(RxObservable *)o6
                     withRxObservable:(RxObservable *)o7
                     withRxObservable:(RxObservable *)o8
                     withRxObservable:(RxObservable *)o9
                 withRxFunctionsFunc9:(id<RxFunctionsFunc9>)zipFunction {
  return RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc9_(o1, o2, o3, o4, o5, o6, o7, o8, o9, zipFunction);
}

- (RxObservable *)allWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorAll_initWithRxFunctionsFunc1_(predicate));
}

- (RxObservable *)ambWithWithRxObservable:(RxObservable *)t1 {
  return RxObservable_ambWithRxObservable_withRxObservable_(self, t1);
}

- (RxObservable *)asObservable {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorAsObservable_instance());
}

- (RxObservable *)bufferWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)bufferClosingSelector {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxFunctionsFunc0_withInt_(bufferClosingSelector, 16));
}

- (RxObservable *)bufferWithInt:(jint)count {
  return RxObservable_bufferWithInt_withInt_(self, count, count);
}

- (RxObservable *)bufferWithInt:(jint)count
                        withInt:(jint)skip {
  return RxObservable_bufferWithInt_withInt_(self, count, skip);
}

- (RxObservable *)bufferWithLong:(jlong)timespan
                        withLong:(jlong)timeshift
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_bufferWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, timespan, timeshift, unit, RxSchedulersSchedulers_computation());
}

- (RxObservable *)bufferWithLong:(jlong)timespan
                        withLong:(jlong)timeshift
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_bufferWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, timespan, timeshift, unit, scheduler);
}

- (RxObservable *)bufferWithLong:(jlong)timespan
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_bufferWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, unit, JavaLangInteger_MAX_VALUE, RxSchedulersSchedulers_computation());
}

- (RxObservable *)bufferWithLong:(jlong)timespan
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                         withInt:(jint)count {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorBufferWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(timespan, timespan, unit, count, RxSchedulersSchedulers_computation()));
}

- (RxObservable *)bufferWithLong:(jlong)timespan
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                         withInt:(jint)count
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_bufferWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, unit, count, scheduler);
}

- (RxObservable *)bufferWithLong:(jlong)timespan
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_bufferWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, timespan, timespan, unit, scheduler);
}

- (RxObservable *)bufferWithRxObservable:(RxObservable *)bufferOpenings
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)bufferClosingSelector {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorBufferWithStartEndObservable_initWithRxObservable_withRxFunctionsFunc1_(bufferOpenings, bufferClosingSelector));
}

- (RxObservable *)bufferWithRxObservable:(RxObservable *)boundary {
  return RxObservable_bufferWithRxObservable_withInt_(self, boundary, 16);
}

- (RxObservable *)bufferWithRxObservable:(RxObservable *)boundary
                                 withInt:(jint)initialCapacity {
  return RxObservable_bufferWithRxObservable_withInt_(self, boundary, initialCapacity);
}

- (RxObservable *)cache {
  return RxInternalOperatorsCachedObservable_fromWithRxObservable_(self);
}

- (RxObservable *)cacheWithInt:(jint)initialCapacity {
  return RxObservable_cacheWithInitialCapacityWithInt_(self, initialCapacity);
}

- (RxObservable *)cacheWithInitialCapacityWithInt:(jint)initialCapacity {
  return RxObservable_cacheWithInitialCapacityWithInt_(self, initialCapacity);
}

- (RxObservable *)castWithIOSClass:(IOSClass *)klass {
  return RxObservable_castWithIOSClass_(self, klass);
}

- (RxObservable *)collectWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)stateFactory
                       withRxFunctionsAction2:(id<RxFunctionsAction2>)collector {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeCollect_initWithRxObservable_withRxFunctionsFunc0_withRxFunctionsAction2_(self, stateFactory, collector));
}

- (RxObservable *)concatMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func {
  return RxObservable_concatMapWithRxFunctionsFunc1_(self, func);
}

- (RxObservable *)concatMapDelayErrorWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func {
  return RxObservable_concatMapDelayErrorWithRxFunctionsFunc1_(self, func);
}

- (RxObservable *)concatMapIterableWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)collectionSelector {
  return RxInternalOperatorsOnSubscribeFlattenIterable_createFromWithRxObservable_withRxFunctionsFunc1_withInt_(self, collectionSelector, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE));
}

- (RxObservable *)concatWithWithRxObservable:(RxObservable *)t1 {
  return RxObservable_concatWithRxObservable_withRxObservable_(self, t1);
}

- (RxObservable *)containsWithId:(id)element {
  return RxObservable_existsWithRxFunctionsFunc1_(self, RxInternalUtilInternalObservableUtils_equalsWithWithId_(element));
}

- (RxObservable *)count {
  return RxObservable_reduceWithId_withRxFunctionsFunc2_(self, JavaLangInteger_valueOfWithInt_(0), JreLoadStatic(RxInternalUtilInternalObservableUtils, COUNTER));
}

- (RxObservable *)countLong {
  return RxObservable_reduceWithId_withRxFunctionsFunc2_(self, JavaLangLong_valueOfWithLong_(0LL), JreLoadStatic(RxInternalUtilInternalObservableUtils, LONG_COUNTER));
}

- (RxObservable *)debounceWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)debounceSelector {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDebounceWithSelector_initWithRxFunctionsFunc1_(debounceSelector));
}

- (RxObservable *)debounceWithLong:(jlong)timeout
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_debounceWithLong_withJavaUtilConcurrentTimeUnit_(self, timeout, unit);
}

- (RxObservable *)debounceWithLong:(jlong)timeout
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_debounceWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, timeout, unit, scheduler);
}

- (RxObservable *)defaultIfEmptyWithId:(id)defaultValue {
  return RxObservable_switchIfEmptyWithRxObservable_(self, RxObservable_justWithId_(defaultValue));
}

- (RxObservable *)switchIfEmptyWithRxObservable:(RxObservable *)alternate {
  return RxObservable_switchIfEmptyWithRxObservable_(self, alternate);
}

- (RxObservable *)delayWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)subscriptionDelay
                       withRxFunctionsFunc1:(id<RxFunctionsFunc1>)itemDelay {
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_delaySubscriptionWithRxFunctionsFunc0_(self, subscriptionDelay)), create_RxInternalOperatorsOperatorDelayWithSelector_initWithRxObservable_withRxFunctionsFunc1_(self, itemDelay));
}

- (RxObservable *)delayWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)itemDelay {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDelayWithSelector_initWithRxObservable_withRxFunctionsFunc1_(self, itemDelay));
}

- (RxObservable *)delayWithLong:(jlong)delay
 withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, delay, unit, RxSchedulersSchedulers_computation());
}

- (RxObservable *)delayWithLong:(jlong)delay
 withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, delay, unit, scheduler);
}

- (RxObservable *)delaySubscriptionWithLong:(jlong)delay
             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_delaySubscriptionWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, delay, unit, RxSchedulersSchedulers_computation());
}

- (RxObservable *)delaySubscriptionWithLong:(jlong)delay
             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                            withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_delaySubscriptionWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, delay, unit, scheduler);
}

- (RxObservable *)delaySubscriptionWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)subscriptionDelay {
  return RxObservable_delaySubscriptionWithRxFunctionsFunc0_(self, subscriptionDelay);
}

- (RxObservable *)delaySubscriptionWithRxObservable:(RxObservable *)other {
  if (other == nil) {
    @throw create_JavaLangNullPointerException_init();
  }
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDelaySubscriptionOther_initWithRxObservable_withRxObservable_(self, other));
}

- (RxObservable *)dematerialize {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorDematerialize_instance());
}

- (RxObservable *)distinct {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorDistinct_instance());
}

- (RxObservable *)distinctWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDistinct_initWithRxFunctionsFunc1_(keySelector));
}

- (RxObservable *)distinctUntilChanged {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorDistinctUntilChanged_instance());
}

- (RxObservable *)distinctUntilChangedWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDistinctUntilChanged_initWithRxFunctionsFunc1_(keySelector));
}

- (RxObservable *)distinctUntilChangedWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)comparator {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDistinctUntilChanged_initWithRxFunctionsFunc2_(comparator));
}

- (RxObservable *)doOnCompletedWithRxFunctionsAction0:(id<RxFunctionsAction0>)onCompleted {
  id<RxFunctionsAction1> onNext = RxFunctionsActions_empty();
  id<RxFunctionsAction1> onError = RxFunctionsActions_empty();
  id<RxObserver> observer = create_RxInternalUtilActionObserver_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(onNext, onError, onCompleted);
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDoOnEach_initWithRxObservable_withRxObserver_(self, observer));
}

- (RxObservable *)doOnEachWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNotification {
  id<RxObserver> observer = create_RxInternalUtilActionNotificationObserver_initWithRxFunctionsAction1_(onNotification);
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDoOnEach_initWithRxObservable_withRxObserver_(self, observer));
}

- (RxObservable *)doOnEachWithRxObserver:(id<RxObserver>)observer {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDoOnEach_initWithRxObservable_withRxObserver_(self, observer));
}

- (RxObservable *)doOnErrorWithRxFunctionsAction1:(id<RxFunctionsAction1>)onError {
  id<RxFunctionsAction1> onNext = RxFunctionsActions_empty();
  id<RxFunctionsAction0> onCompleted = RxFunctionsActions_empty();
  id<RxObserver> observer = create_RxInternalUtilActionObserver_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(onNext, onError, onCompleted);
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDoOnEach_initWithRxObservable_withRxObserver_(self, observer));
}

- (RxObservable *)doOnNextWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext {
  id<RxFunctionsAction1> onError = RxFunctionsActions_empty();
  id<RxFunctionsAction0> onCompleted = RxFunctionsActions_empty();
  id<RxObserver> observer = create_RxInternalUtilActionObserver_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(onNext, onError, onCompleted);
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDoOnEach_initWithRxObservable_withRxObserver_(self, observer));
}

- (RxObservable *)doOnRequestWithRxFunctionsAction1:(id<RxFunctionsAction1>)onRequest {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDoOnRequest_initWithRxFunctionsAction1_(onRequest));
}

- (RxObservable *)doOnSubscribeWithRxFunctionsAction0:(id<RxFunctionsAction0>)subscribe {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDoOnSubscribe_initWithRxFunctionsAction0_(subscribe));
}

- (RxObservable *)doOnTerminateWithRxFunctionsAction0:(id<RxFunctionsAction0>)onTerminate {
  id<RxFunctionsAction1> onNext = RxFunctionsActions_empty();
  id<RxFunctionsAction1> onError = RxFunctionsActions_toAction1WithRxFunctionsAction0_(onTerminate);
  id<RxObserver> observer = create_RxInternalUtilActionObserver_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(onNext, onError, onTerminate);
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDoOnEach_initWithRxObservable_withRxObserver_(self, observer));
}

- (RxObservable *)doOnUnsubscribeWithRxFunctionsAction0:(id<RxFunctionsAction0>)unsubscribe {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDoOnUnsubscribe_initWithRxFunctionsAction0_(unsubscribe));
}

+ (RxObservable *)concatEagerWithRxObservable:(RxObservable *)o1
                             withRxObservable:(RxObservable *)o2 {
  return RxObservable_concatEagerWithRxObservable_withRxObservable_(o1, o2);
}

+ (RxObservable *)concatEagerWithRxObservable:(RxObservable *)o1
                             withRxObservable:(RxObservable *)o2
                             withRxObservable:(RxObservable *)o3 {
  return RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_(o1, o2, o3);
}

+ (RxObservable *)concatEagerWithRxObservable:(RxObservable *)o1
                             withRxObservable:(RxObservable *)o2
                             withRxObservable:(RxObservable *)o3
                             withRxObservable:(RxObservable *)o4 {
  return RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4);
}

+ (RxObservable *)concatEagerWithRxObservable:(RxObservable *)o1
                             withRxObservable:(RxObservable *)o2
                             withRxObservable:(RxObservable *)o3
                             withRxObservable:(RxObservable *)o4
                             withRxObservable:(RxObservable *)o5 {
  return RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5);
}

+ (RxObservable *)concatEagerWithRxObservable:(RxObservable *)o1
                             withRxObservable:(RxObservable *)o2
                             withRxObservable:(RxObservable *)o3
                             withRxObservable:(RxObservable *)o4
                             withRxObservable:(RxObservable *)o5
                             withRxObservable:(RxObservable *)o6 {
  return RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6);
}

+ (RxObservable *)concatEagerWithRxObservable:(RxObservable *)o1
                             withRxObservable:(RxObservable *)o2
                             withRxObservable:(RxObservable *)o3
                             withRxObservable:(RxObservable *)o4
                             withRxObservable:(RxObservable *)o5
                             withRxObservable:(RxObservable *)o6
                             withRxObservable:(RxObservable *)o7 {
  return RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7);
}

+ (RxObservable *)concatEagerWithRxObservable:(RxObservable *)o1
                             withRxObservable:(RxObservable *)o2
                             withRxObservable:(RxObservable *)o3
                             withRxObservable:(RxObservable *)o4
                             withRxObservable:(RxObservable *)o5
                             withRxObservable:(RxObservable *)o6
                             withRxObservable:(RxObservable *)o7
                             withRxObservable:(RxObservable *)o8 {
  return RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7, o8);
}

+ (RxObservable *)concatEagerWithRxObservable:(RxObservable *)o1
                             withRxObservable:(RxObservable *)o2
                             withRxObservable:(RxObservable *)o3
                             withRxObservable:(RxObservable *)o4
                             withRxObservable:(RxObservable *)o5
                             withRxObservable:(RxObservable *)o6
                             withRxObservable:(RxObservable *)o7
                             withRxObservable:(RxObservable *)o8
                             withRxObservable:(RxObservable *)o9 {
  return RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7, o8, o9);
}

+ (RxObservable *)concatEagerWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return RxObservable_concatEagerWithJavaLangIterable_(sources);
}

+ (RxObservable *)concatEagerWithJavaLangIterable:(id<JavaLangIterable>)sources
                                          withInt:(jint)capacityHint {
  return RxObservable_concatEagerWithJavaLangIterable_withInt_(sources, capacityHint);
}

+ (RxObservable *)concatEagerWithRxObservable:(RxObservable *)sources {
  return RxObservable_concatEagerWithRxObservable_(sources);
}

+ (RxObservable *)concatEagerWithRxObservable:(RxObservable *)sources
                                      withInt:(jint)capacityHint {
  return RxObservable_concatEagerWithRxObservable_withInt_(sources, capacityHint);
}

- (RxObservable *)concatMapEagerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)mapper {
  return RxObservable_concatMapEagerWithRxFunctionsFunc1_(self, mapper);
}

- (RxObservable *)concatMapEagerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)mapper
                                             withInt:(jint)capacityHint {
  return RxObservable_concatMapEagerWithRxFunctionsFunc1_withInt_(self, mapper, capacityHint);
}

- (RxObservable *)concatMapEagerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)mapper
                                             withInt:(jint)capacityHint
                                             withInt:(jint)maxConcurrent {
  if (capacityHint < 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"capacityHint > 0 required but it was ", capacityHint));
  }
  if (maxConcurrent < 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"maxConcurrent > 0 required but it was ", capacityHint));
  }
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorEagerConcatMap_initWithRxFunctionsFunc1_withInt_withInt_(mapper, capacityHint, maxConcurrent));
}

- (RxObservable *)elementAtWithInt:(jint)index {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorElementAt_initWithInt_(index));
}

- (RxObservable *)elementAtOrDefaultWithInt:(jint)index
                                     withId:(id)defaultValue {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorElementAt_initWithInt_withId_(index, defaultValue));
}

- (RxObservable *)existsWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_existsWithRxFunctionsFunc1_(self, predicate);
}

- (RxObservable *)filterWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_filterWithRxFunctionsFunc1_(self, predicate);
}

- (RxObservable *)finallyDoWithRxFunctionsAction0:(id<RxFunctionsAction0>)action {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDoAfterTerminate_initWithRxFunctionsAction0_(action));
}

- (RxObservable *)doAfterTerminateWithRxFunctionsAction0:(id<RxFunctionsAction0>)action {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDoAfterTerminate_initWithRxFunctionsAction0_(action));
}

- (RxObservable *)first {
  return RxObservable_single(nil_chk(RxObservable_takeWithInt_(self, 1)));
}

- (RxObservable *)firstWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_single(nil_chk(RxObservable_takeFirstWithRxFunctionsFunc1_(self, predicate)));
}

- (RxObservable *)firstOrDefaultWithId:(id)defaultValue {
  return RxObservable_singleOrDefaultWithId_(nil_chk(RxObservable_takeWithInt_(self, 1)), defaultValue);
}

- (RxObservable *)firstOrDefaultWithId:(id)defaultValue
                  withRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_singleOrDefaultWithId_(nil_chk(RxObservable_takeFirstWithRxFunctionsFunc1_(self, predicate)), defaultValue);
}

- (RxObservable *)flatMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func {
  if ([self java_getClass] == RxInternalUtilScalarSynchronousObservable_class_()) {
    return [((RxInternalUtilScalarSynchronousObservable *) cast_chk(self, [RxInternalUtilScalarSynchronousObservable class])) scalarFlatMapWithRxFunctionsFunc1:func];
  }
  return RxObservable_mergeWithRxObservable_(RxObservable_mapWithRxFunctionsFunc1_(self, func));
}

- (RxObservable *)flatMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func
                                      withInt:(jint)maxConcurrent {
  if ([self java_getClass] == RxInternalUtilScalarSynchronousObservable_class_()) {
    return [((RxInternalUtilScalarSynchronousObservable *) cast_chk(self, [RxInternalUtilScalarSynchronousObservable class])) scalarFlatMapWithRxFunctionsFunc1:func];
  }
  return RxObservable_mergeWithRxObservable_withInt_(RxObservable_mapWithRxFunctionsFunc1_(self, func), maxConcurrent);
}

- (RxObservable *)flatMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onNext
                         withRxFunctionsFunc1:(id<RxFunctionsFunc1>)onError
                         withRxFunctionsFunc0:(id<RxFunctionsFunc0>)onCompleted {
  return RxObservable_mergeWithRxObservable_(RxObservable_mapNotificationWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(self, onNext, onError, onCompleted));
}

- (RxObservable *)flatMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onNext
                         withRxFunctionsFunc1:(id<RxFunctionsFunc1>)onError
                         withRxFunctionsFunc0:(id<RxFunctionsFunc0>)onCompleted
                                      withInt:(jint)maxConcurrent {
  return RxObservable_mergeWithRxObservable_withInt_(RxObservable_mapNotificationWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(self, onNext, onError, onCompleted), maxConcurrent);
}

- (RxObservable *)flatMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)collectionSelector
                         withRxFunctionsFunc2:(id<RxFunctionsFunc2>)resultSelector {
  return RxObservable_flatMapWithRxFunctionsFunc1_withRxFunctionsFunc2_(self, collectionSelector, resultSelector);
}

- (RxObservable *)flatMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)collectionSelector
                         withRxFunctionsFunc2:(id<RxFunctionsFunc2>)resultSelector
                                      withInt:(jint)maxConcurrent {
  return RxObservable_flatMapWithRxFunctionsFunc1_withRxFunctionsFunc2_withInt_(self, collectionSelector, resultSelector, maxConcurrent);
}

- (RxObservable *)flatMapIterableWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)collectionSelector {
  return RxObservable_flatMapIterableWithRxFunctionsFunc1_(self, collectionSelector);
}

- (RxObservable *)flatMapIterableWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)collectionSelector
                                              withInt:(jint)maxConcurrent {
  return RxObservable_flatMapIterableWithRxFunctionsFunc1_withInt_(self, collectionSelector, maxConcurrent);
}

- (RxObservable *)flatMapIterableWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)collectionSelector
                                 withRxFunctionsFunc2:(id<RxFunctionsFunc2>)resultSelector {
  return RxObservable_flatMapWithRxFunctionsFunc1_withRxFunctionsFunc2_(self, RxInternalOperatorsOperatorMapPair_convertSelectorWithRxFunctionsFunc1_(collectionSelector), resultSelector);
}

- (RxObservable *)flatMapIterableWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)collectionSelector
                                 withRxFunctionsFunc2:(id<RxFunctionsFunc2>)resultSelector
                                              withInt:(jint)maxConcurrent {
  return RxObservable_flatMapWithRxFunctionsFunc1_withRxFunctionsFunc2_withInt_(self, RxInternalOperatorsOperatorMapPair_convertSelectorWithRxFunctionsFunc1_(collectionSelector), resultSelector, maxConcurrent);
}

- (void)forEachWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext {
  RxObservable_subscribeWithRxFunctionsAction1_(self, onNext);
}

- (void)forEachWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext
               withRxFunctionsAction1:(id<RxFunctionsAction1>)onError {
  RxObservable_subscribeWithRxFunctionsAction1_withRxFunctionsAction1_(self, onNext, onError);
}

- (void)forEachWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext
               withRxFunctionsAction1:(id<RxFunctionsAction1>)onError
               withRxFunctionsAction0:(id<RxFunctionsAction0>)onComplete {
  RxObservable_subscribeWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(self, onNext, onError, onComplete);
}

- (RxObservable *)groupByWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                         withRxFunctionsFunc1:(id<RxFunctionsFunc1>)elementSelector {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_withRxFunctionsFunc1_(keySelector, elementSelector));
}

- (RxObservable *)groupByWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                         withRxFunctionsFunc1:(id<RxFunctionsFunc1>)elementSelector
                         withRxFunctionsFunc1:(id<RxFunctionsFunc1>)evictingMapFactory {
  if (evictingMapFactory == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"evictingMapFactory cannot be null");
  }
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc1_(keySelector, elementSelector, evictingMapFactory));
}

- (RxObservable *)groupByWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_(keySelector));
}

- (RxObservable *)groupJoinWithRxObservable:(RxObservable *)right
                       withRxFunctionsFunc1:(id<RxFunctionsFunc1>)leftDuration
                       withRxFunctionsFunc1:(id<RxFunctionsFunc1>)rightDuration
                       withRxFunctionsFunc2:(id<RxFunctionsFunc2>)resultSelector {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeGroupJoin_initWithRxObservable_withRxObservable_withRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc2_(self, right, leftDuration, rightDuration, resultSelector));
}

- (RxObservable *)ignoreElements {
  return RxObservable_ignoreElements(self);
}

- (RxObservable *)isEmpty {
  return RxObservable_liftWithRxObservable_Operator_(self, JreLoadStatic(RxInternalUtilInternalObservableUtils, IS_EMPTY));
}

- (RxObservable *)joinWithRxObservable:(RxObservable *)right
                  withRxFunctionsFunc1:(id<RxFunctionsFunc1>)leftDurationSelector
                  withRxFunctionsFunc1:(id<RxFunctionsFunc1>)rightDurationSelector
                  withRxFunctionsFunc2:(id<RxFunctionsFunc2>)resultSelector {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeJoin_initWithRxObservable_withRxObservable_withRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc2_(self, right, leftDurationSelector, rightDurationSelector, resultSelector));
}

- (RxObservable *)last {
  return RxObservable_single(nil_chk(RxObservable_takeLastWithInt_(self, 1)));
}

- (RxObservable *)lastWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_single(nil_chk(RxObservable_takeLastWithInt_(nil_chk(RxObservable_filterWithRxFunctionsFunc1_(self, predicate)), 1)));
}

- (RxObservable *)lastOrDefaultWithId:(id)defaultValue {
  return RxObservable_singleOrDefaultWithId_(nil_chk(RxObservable_takeLastWithInt_(self, 1)), defaultValue);
}

- (RxObservable *)lastOrDefaultWithId:(id)defaultValue
                 withRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_singleOrDefaultWithId_(nil_chk(RxObservable_takeLastWithInt_(nil_chk(RxObservable_filterWithRxFunctionsFunc1_(self, predicate)), 1)), defaultValue);
}

- (RxObservable *)limitWithInt:(jint)count {
  return RxObservable_takeWithInt_(self, count);
}

- (RxObservable *)mapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func {
  return RxObservable_mapWithRxFunctionsFunc1_(self, func);
}

- (RxObservable *)mapNotificationWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onNext
                                 withRxFunctionsFunc1:(id<RxFunctionsFunc1>)onError
                                 withRxFunctionsFunc0:(id<RxFunctionsFunc0>)onCompleted {
  return RxObservable_mapNotificationWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(self, onNext, onError, onCompleted);
}

- (RxObservable *)materialize {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorMaterialize_instance());
}

- (RxObservable *)mergeWithWithRxObservable:(RxObservable *)t1 {
  return RxObservable_mergeWithRxObservable_withRxObservable_(self, t1);
}

- (RxObservable *)observeOnWithRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_observeOnWithRxScheduler_withInt_(self, scheduler, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE));
}

- (RxObservable *)observeOnWithRxScheduler:(RxScheduler *)scheduler
                                   withInt:(jint)bufferSize {
  return RxObservable_observeOnWithRxScheduler_withInt_(self, scheduler, bufferSize);
}

- (RxObservable *)observeOnWithRxScheduler:(RxScheduler *)scheduler
                               withBoolean:(jboolean)delayError {
  return RxObservable_observeOnWithRxScheduler_withBoolean_withInt_(self, scheduler, delayError, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE));
}

- (RxObservable *)observeOnWithRxScheduler:(RxScheduler *)scheduler
                               withBoolean:(jboolean)delayError
                                   withInt:(jint)bufferSize {
  return RxObservable_observeOnWithRxScheduler_withBoolean_withInt_(self, scheduler, delayError, bufferSize);
}

- (RxObservable *)ofTypeWithIOSClass:(IOSClass *)klass {
  return RxObservable_castWithIOSClass_(nil_chk(RxObservable_filterWithRxFunctionsFunc1_(self, RxInternalUtilInternalObservableUtils_isInstanceOfWithIOSClass_(klass))), klass);
}

- (RxObservable *)onBackpressureBuffer {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorOnBackpressureBuffer_instance());
}

- (RxObservable *)onBackpressureBufferWithLong:(jlong)capacity {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorOnBackpressureBuffer_initWithLong_(capacity));
}

- (RxObservable *)onBackpressureBufferWithLong:(jlong)capacity
                        withRxFunctionsAction0:(id<RxFunctionsAction0>)onOverflow {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorOnBackpressureBuffer_initWithLong_withRxFunctionsAction0_(capacity, onOverflow));
}

- (RxObservable *)onBackpressureBufferWithLong:(jlong)capacity
                        withRxFunctionsAction0:(id<RxFunctionsAction0>)onOverflow
           withRxBackpressureOverflow_Strategy:(id<RxBackpressureOverflow_Strategy>)overflowStrategy {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorOnBackpressureBuffer_initWithLong_withRxFunctionsAction0_withRxBackpressureOverflow_Strategy_(capacity, onOverflow, overflowStrategy));
}

- (RxObservable *)onBackpressureDropWithRxFunctionsAction1:(id<RxFunctionsAction1>)onDrop {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorOnBackpressureDrop_initWithRxFunctionsAction1_(onDrop));
}

- (RxObservable *)onBackpressureDrop {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorOnBackpressureDrop_instance());
}

- (RxObservable *)onBackpressureLatest {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorOnBackpressureLatest_instance());
}

- (RxObservable *)onErrorResumeNextWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunction {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_initWithRxFunctionsFunc1_(resumeFunction));
}

- (RxObservable *)onErrorResumeNextWithRxObservable:(RxObservable *)resumeSequence {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_withOtherWithRxObservable_(resumeSequence));
}

- (RxObservable *)onErrorReturnWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunction {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_withSingleWithRxFunctionsFunc1_(resumeFunction));
}

- (RxObservable *)onExceptionResumeNextWithRxObservable:(RxObservable *)resumeSequence {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_withExceptionWithRxObservable_(resumeSequence));
}

- (RxObservable *)onTerminateDetach {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDetach_initWithRxObservable_(self));
}

- (RxObservablesConnectableObservable *)publish {
  return RxObservable_publish(self);
}

- (RxObservable *)publishWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector {
  return RxInternalOperatorsOperatorPublish_createWithRxObservable_withRxFunctionsFunc1_(self, selector);
}

- (RxObservable *)rebatchRequestsWithInt:(jint)n {
  if (n <= 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"n > 0 required but it was ", n));
  }
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorObserveOn_rebatchWithInt_(n));
}

- (RxObservable *)reduceWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)accumulator {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeReduce_initWithRxObservable_withRxFunctionsFunc2_(self, accumulator));
}

- (RxObservable *)reduceWithId:(id)initialValue
          withRxFunctionsFunc2:(id<RxFunctionsFunc2>)accumulator {
  return RxObservable_reduceWithId_withRxFunctionsFunc2_(self, initialValue, accumulator);
}

- (RxObservable *)repeat {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_(self);
}

- (RxObservable *)repeatWithRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxScheduler_(self, scheduler);
}

- (RxObservable *)repeatWithLong:(jlong)count {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withLong_(self, count);
}

- (RxObservable *)repeatWithLong:(jlong)count
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withLong_withRxScheduler_(self, count, scheduler);
}

- (RxObservable *)repeatWhenWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler
                                 withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxFunctionsFunc1_withRxScheduler_(self, RxInternalUtilInternalObservableUtils_createRepeatDematerializerWithRxFunctionsFunc1_(notificationHandler), scheduler);
}

- (RxObservable *)repeatWhenWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxFunctionsFunc1_(self, RxInternalUtilInternalObservableUtils_createRepeatDematerializerWithRxFunctionsFunc1_(notificationHandler));
}

- (RxObservablesConnectableObservable *)replay {
  return RxObservable_replay(self);
}

- (RxObservable *)replayWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector {
  return RxInternalOperatorsOperatorReplay_multicastSelectorWithRxFunctionsFunc0_withRxFunctionsFunc1_(RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_(self), selector);
}

- (RxObservable *)replayWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector
                                     withInt:(jint)bufferSize {
  return RxInternalOperatorsOperatorReplay_multicastSelectorWithRxFunctionsFunc0_withRxFunctionsFunc1_(RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_withInt_(self, bufferSize), selector);
}

- (RxObservable *)replayWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector
                                     withInt:(jint)bufferSize
                                    withLong:(jlong)time
              withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_replayWithRxFunctionsFunc1_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, selector, bufferSize, time, unit, RxSchedulersSchedulers_computation());
}

- (RxObservable *)replayWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector
                                     withInt:(jint)bufferSize
                                    withLong:(jlong)time
              withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                             withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_replayWithRxFunctionsFunc1_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, selector, bufferSize, time, unit, scheduler);
}

- (RxObservable *)replayWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector
                                     withInt:(jint)bufferSize
                             withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOperatorReplay_multicastSelectorWithRxFunctionsFunc0_withRxFunctionsFunc1_(RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_withInt_(self, bufferSize), RxInternalUtilInternalObservableUtils_createReplaySelectorAndObserveOnWithRxFunctionsFunc1_withRxScheduler_(selector, scheduler));
}

- (RxObservable *)replayWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector
                                    withLong:(jlong)time
              withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_replayWithRxFunctionsFunc1_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, selector, time, unit, RxSchedulersSchedulers_computation());
}

- (RxObservable *)replayWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector
                                    withLong:(jlong)time
              withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                             withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_replayWithRxFunctionsFunc1_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, selector, time, unit, scheduler);
}

- (RxObservable *)replayWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector
                             withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOperatorReplay_multicastSelectorWithRxFunctionsFunc0_withRxFunctionsFunc1_(RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_(self), RxInternalUtilInternalObservableUtils_createReplaySelectorAndObserveOnWithRxFunctionsFunc1_withRxScheduler_(selector, scheduler));
}

- (RxObservablesConnectableObservable *)replayWithInt:(jint)bufferSize {
  return RxObservable_replayWithInt_(self, bufferSize);
}

- (RxObservablesConnectableObservable *)replayWithInt:(jint)bufferSize
                                             withLong:(jlong)time
                       withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_replayWithInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, bufferSize, time, unit, RxSchedulersSchedulers_computation());
}

- (RxObservablesConnectableObservable *)replayWithInt:(jint)bufferSize
                                             withLong:(jlong)time
                       withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                      withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_replayWithInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, bufferSize, time, unit, scheduler);
}

- (RxObservablesConnectableObservable *)replayWithInt:(jint)bufferSize
                                      withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOperatorReplay_observeOnWithRxObservablesConnectableObservable_withRxScheduler_(RxObservable_replayWithInt_(self, bufferSize), scheduler);
}

- (RxObservablesConnectableObservable *)replayWithLong:(jlong)time
                        withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_replayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, RxSchedulersSchedulers_computation());
}

- (RxObservablesConnectableObservable *)replayWithLong:(jlong)time
                        withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                       withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_replayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, scheduler);
}

- (RxObservablesConnectableObservable *)replayWithRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOperatorReplay_observeOnWithRxObservablesConnectableObservable_withRxScheduler_(RxObservable_replay(self), scheduler);
}

- (RxObservable *)retry {
  return RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_(self);
}

- (RxObservable *)retryWithLong:(jlong)count {
  return RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withLong_(self, count);
}

- (RxObservable *)retryWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)predicate {
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_nest(self)), create_RxInternalOperatorsOperatorRetryWithPredicate_initWithRxFunctionsFunc2_(predicate));
}

- (RxObservable *)retryWhenWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler {
  return RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withRxFunctionsFunc1_(self, RxInternalUtilInternalObservableUtils_createRetryDematerializerWithRxFunctionsFunc1_(notificationHandler));
}

- (RxObservable *)retryWhenWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler
                                withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withRxFunctionsFunc1_withRxScheduler_(self, RxInternalUtilInternalObservableUtils_createRetryDematerializerWithRxFunctionsFunc1_(notificationHandler), scheduler);
}

- (RxObservable *)sampleWithLong:(jlong)period
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_sampleWithLong_withJavaUtilConcurrentTimeUnit_(self, period, unit);
}

- (RxObservable *)sampleWithLong:(jlong)period
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_sampleWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, period, unit, scheduler);
}

- (RxObservable *)sampleWithRxObservable:(RxObservable *)sampler {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorSampleWithObservable_initWithRxObservable_(sampler));
}

- (RxObservable *)scanWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)accumulator {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorScan_initWithRxFunctionsFunc2_(accumulator));
}

- (RxObservable *)scanWithId:(id)initialValue
        withRxFunctionsFunc2:(id<RxFunctionsFunc2>)accumulator {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorScan_initWithId_withRxFunctionsFunc2_(initialValue, accumulator));
}

- (RxObservable *)serialize {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorSerialize_instance());
}

- (RxObservable *)share {
  return [((RxObservablesConnectableObservable *) nil_chk(RxObservable_publish(self))) refCount];
}

- (RxObservable *)single {
  return RxObservable_single(self);
}

- (RxObservable *)singleWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_single(nil_chk(RxObservable_filterWithRxFunctionsFunc1_(self, predicate)));
}

- (RxObservable *)singleOrDefaultWithId:(id)defaultValue {
  return RxObservable_singleOrDefaultWithId_(self, defaultValue);
}

- (RxObservable *)singleOrDefaultWithId:(id)defaultValue
                   withRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_singleOrDefaultWithId_(nil_chk(RxObservable_filterWithRxFunctionsFunc1_(self, predicate)), defaultValue);
}

- (RxObservable *)skipWithInt:(jint)count {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorSkip_initWithInt_(count));
}

- (RxObservable *)skipWithLong:(jlong)time
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_skipWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, RxSchedulersSchedulers_computation());
}

- (RxObservable *)skipWithLong:(jlong)time
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
               withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_skipWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, scheduler);
}

- (RxObservable *)skipLastWithInt:(jint)count {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorSkipLast_initWithInt_(count));
}

- (RxObservable *)skipLastWithLong:(jlong)time
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_skipLastWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, RxSchedulersSchedulers_computation());
}

- (RxObservable *)skipLastWithLong:(jlong)time
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_skipLastWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, scheduler);
}

- (RxObservable *)skipUntilWithRxObservable:(RxObservable *)other {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorSkipUntil_initWithRxObservable_(other));
}

- (RxObservable *)skipWhileWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorSkipWhile_initWithRxFunctionsFunc2_(RxInternalOperatorsOperatorSkipWhile_toPredicate2WithRxFunctionsFunc1_(predicate)));
}

- (RxObservable *)startWithWithRxObservable:(RxObservable *)values {
  return RxObservable_concatWithRxObservable_withRxObservable_(values, self);
}

- (RxObservable *)startWithWithJavaLangIterable:(id<JavaLangIterable>)values {
  return RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_fromWithJavaLangIterable_(values), self);
}

- (RxObservable *)startWithWithId:(id)t1 {
  return RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_justWithId_(t1), self);
}

- (RxObservable *)startWithWithId:(id)t1
                           withId:(id)t2 {
  return RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_justWithId_withId_(t1, t2), self);
}

- (RxObservable *)startWithWithId:(id)t1
                           withId:(id)t2
                           withId:(id)t3 {
  return RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_justWithId_withId_withId_(t1, t2, t3), self);
}

- (RxObservable *)startWithWithId:(id)t1
                           withId:(id)t2
                           withId:(id)t3
                           withId:(id)t4 {
  return RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_justWithId_withId_withId_withId_(t1, t2, t3, t4), self);
}

- (RxObservable *)startWithWithId:(id)t1
                           withId:(id)t2
                           withId:(id)t3
                           withId:(id)t4
                           withId:(id)t5 {
  return RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_(t1, t2, t3, t4, t5), self);
}

- (RxObservable *)startWithWithId:(id)t1
                           withId:(id)t2
                           withId:(id)t3
                           withId:(id)t4
                           withId:(id)t5
                           withId:(id)t6 {
  return RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6), self);
}

- (RxObservable *)startWithWithId:(id)t1
                           withId:(id)t2
                           withId:(id)t3
                           withId:(id)t4
                           withId:(id)t5
                           withId:(id)t6
                           withId:(id)t7 {
  return RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7), self);
}

- (RxObservable *)startWithWithId:(id)t1
                           withId:(id)t2
                           withId:(id)t3
                           withId:(id)t4
                           withId:(id)t5
                           withId:(id)t6
                           withId:(id)t7
                           withId:(id)t8 {
  return RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8), self);
}

- (RxObservable *)startWithWithId:(id)t1
                           withId:(id)t2
                           withId:(id)t3
                           withId:(id)t4
                           withId:(id)t5
                           withId:(id)t6
                           withId:(id)t7
                           withId:(id)t8
                           withId:(id)t9 {
  return RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8, t9), self);
}

- (id<RxSubscription>)subscribe {
  id<RxFunctionsAction1> onNext = RxFunctionsActions_empty();
  id<RxFunctionsAction1> onError = JreLoadStatic(RxInternalUtilInternalObservableUtils, ERROR_NOT_IMPLEMENTED);
  id<RxFunctionsAction0> onCompleted = RxFunctionsActions_empty();
  return RxObservable_subscribeWithRxSubscriber_(self, create_RxInternalUtilActionSubscriber_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(onNext, onError, onCompleted));
}

- (id<RxSubscription>)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext {
  return RxObservable_subscribeWithRxFunctionsAction1_(self, onNext);
}

- (id<RxSubscription>)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext
                               withRxFunctionsAction1:(id<RxFunctionsAction1>)onError {
  return RxObservable_subscribeWithRxFunctionsAction1_withRxFunctionsAction1_(self, onNext, onError);
}

- (id<RxSubscription>)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext
                               withRxFunctionsAction1:(id<RxFunctionsAction1>)onError
                               withRxFunctionsAction0:(id<RxFunctionsAction0>)onCompleted {
  return RxObservable_subscribeWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(self, onNext, onError, onCompleted);
}

- (id<RxSubscription>)subscribeWithRxObserver:(id<RxObserver>)observer {
  if ([observer isKindOfClass:[RxSubscriber class]]) {
    return RxObservable_subscribeWithRxSubscriber_(self, (RxSubscriber *) cast_chk(observer, [RxSubscriber class]));
  }
  if (observer == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"observer is null");
  }
  return RxObservable_subscribeWithRxSubscriber_(self, create_RxInternalUtilObserverSubscriber_initWithRxObserver_(observer));
}

- (id<RxSubscription>)unsafeSubscribeWithRxSubscriber:(RxSubscriber *)subscriber {
  @try {
    [((RxSubscriber *) nil_chk(subscriber)) onStart];
    [((id<RxObservable_OnSubscribe>) nil_chk(RxPluginsRxJavaHooks_onObservableStartWithRxObservable_withRxObservable_OnSubscribe_(self, onSubscribe_))) callWithId:subscriber];
    return RxPluginsRxJavaHooks_onObservableReturnWithRxSubscription_(subscriber);
  }
  @catch (NSException *e) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(e);
    @try {
      [subscriber onErrorWithNSException:RxPluginsRxJavaHooks_onObservableErrorWithNSException_(e)];
    }
    @catch (NSException *e2) {
      RxExceptionsExceptions_throwIfFatalWithNSException_(e2);
      JavaLangRuntimeException *r = create_RxExceptionsOnErrorFailedException_initWithNSString_withNSException_(JreStrcat("$$$", @"Error occurred attempting to subscribe [", [((NSException *) nil_chk(e)) getMessage], @"] and then again while trying to pass to onError."), e2);
      RxPluginsRxJavaHooks_onObservableErrorWithNSException_(r);
      @throw r;
    }
    return RxSubscriptionsSubscriptions_unsubscribed();
  }
}

- (id<RxSubscription>)subscribeWithRxSubscriber:(RxSubscriber *)subscriber {
  return RxObservable_subscribeWithRxSubscriber_(self, subscriber);
}

+ (id<RxSubscription>)subscribeWithRxSubscriber:(RxSubscriber *)subscriber
                               withRxObservable:(RxObservable *)observable {
  return RxObservable_subscribeWithRxSubscriber_withRxObservable_(subscriber, observable);
}

- (RxObservable *)subscribeOnWithRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_subscribeOnWithRxScheduler_(self, scheduler);
}

- (RxObservable *)switchMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func {
  return RxObservable_switchOnNextWithRxObservable_(RxObservable_mapWithRxFunctionsFunc1_(self, func));
}

- (RxObservable *)switchMapDelayErrorWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)func {
  return RxObservable_switchOnNextDelayErrorWithRxObservable_(RxObservable_mapWithRxFunctionsFunc1_(self, func));
}

- (RxObservable *)takeWithInt:(jint)count {
  return RxObservable_takeWithInt_(self, count);
}

- (RxObservable *)takeWithLong:(jlong)time
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_takeWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, RxSchedulersSchedulers_computation());
}

- (RxObservable *)takeWithLong:(jlong)time
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
               withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_takeWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, scheduler);
}

- (RxObservable *)takeFirstWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_takeFirstWithRxFunctionsFunc1_(self, predicate);
}

- (RxObservable *)takeLastWithInt:(jint)count {
  return RxObservable_takeLastWithInt_(self, count);
}

- (RxObservable *)takeLastWithInt:(jint)count
                         withLong:(jlong)time
   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_takeLastWithInt_withLong_withJavaUtilConcurrentTimeUnit_(self, count, time, unit);
}

- (RxObservable *)takeLastWithInt:(jint)count
                         withLong:(jlong)time
   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                  withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_takeLastWithInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, count, time, unit, scheduler);
}

- (RxObservable *)takeLastWithLong:(jlong)time
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_takeLastWithLong_withJavaUtilConcurrentTimeUnit_(self, time, unit);
}

- (RxObservable *)takeLastWithLong:(jlong)time
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_takeLastWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, scheduler);
}

- (RxObservable *)takeLastBufferWithInt:(jint)count {
  return RxObservable_toList(nil_chk(RxObservable_takeLastWithInt_(self, count)));
}

- (RxObservable *)takeLastBufferWithInt:(jint)count
                               withLong:(jlong)time
         withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_toList(nil_chk(RxObservable_takeLastWithInt_withLong_withJavaUtilConcurrentTimeUnit_(self, count, time, unit)));
}

- (RxObservable *)takeLastBufferWithInt:(jint)count
                               withLong:(jlong)time
         withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                        withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_toList(nil_chk(RxObservable_takeLastWithInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, count, time, unit, scheduler)));
}

- (RxObservable *)takeLastBufferWithLong:(jlong)time
          withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_toList(nil_chk(RxObservable_takeLastWithLong_withJavaUtilConcurrentTimeUnit_(self, time, unit)));
}

- (RxObservable *)takeLastBufferWithLong:(jlong)time
          withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                         withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_toList(nil_chk(RxObservable_takeLastWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, scheduler)));
}

- (RxObservable *)takeUntilWithRxObservable:(RxObservable *)other {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTakeUntil_initWithRxObservable_(other));
}

- (RxObservable *)takeWhileWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(predicate));
}

- (RxObservable *)takeUntilWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)stopPredicate {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTakeUntilPredicate_initWithRxFunctionsFunc1_(stopPredicate));
}

- (RxObservable *)throttleFirstWithLong:(jlong)windowDuration
         withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_throttleFirstWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, windowDuration, unit, RxSchedulersSchedulers_computation());
}

- (RxObservable *)throttleFirstWithLong:(jlong)skipDuration
         withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                        withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_throttleFirstWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, skipDuration, unit, scheduler);
}

- (RxObservable *)throttleLastWithLong:(jlong)intervalDuration
        withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_sampleWithLong_withJavaUtilConcurrentTimeUnit_(self, intervalDuration, unit);
}

- (RxObservable *)throttleLastWithLong:(jlong)intervalDuration
        withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                       withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_sampleWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, intervalDuration, unit, scheduler);
}

- (RxObservable *)throttleWithTimeoutWithLong:(jlong)timeout
               withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_debounceWithLong_withJavaUtilConcurrentTimeUnit_(self, timeout, unit);
}

- (RxObservable *)throttleWithTimeoutWithLong:(jlong)timeout
               withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                              withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_debounceWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, timeout, unit, scheduler);
}

- (RxObservable *)timeInterval {
  return RxObservable_timeIntervalWithRxScheduler_(self, RxSchedulersSchedulers_computation());
}

- (RxObservable *)timeIntervalWithRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_timeIntervalWithRxScheduler_(self, scheduler);
}

- (RxObservable *)timeoutWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)firstTimeoutSelector
                         withRxFunctionsFunc1:(id<RxFunctionsFunc1>)timeoutSelector {
  return RxObservable_timeoutWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(self, firstTimeoutSelector, timeoutSelector, nil);
}

- (RxObservable *)timeoutWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)firstTimeoutSelector
                         withRxFunctionsFunc1:(id<RxFunctionsFunc1>)timeoutSelector
                             withRxObservable:(RxObservable *)other {
  return RxObservable_timeoutWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(self, firstTimeoutSelector, timeoutSelector, other);
}

- (RxObservable *)timeoutWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)timeoutSelector {
  return RxObservable_timeoutWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(self, nil, timeoutSelector, nil);
}

- (RxObservable *)timeoutWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)timeoutSelector
                             withRxObservable:(RxObservable *)other {
  return RxObservable_timeoutWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(self, nil, timeoutSelector, other);
}

- (RxObservable *)timeoutWithLong:(jlong)timeout
   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit {
  return RxObservable_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(self, timeout, timeUnit, nil, RxSchedulersSchedulers_computation());
}

- (RxObservable *)timeoutWithLong:(jlong)timeout
   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
                 withRxObservable:(RxObservable *)other {
  return RxObservable_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(self, timeout, timeUnit, other, RxSchedulersSchedulers_computation());
}

- (RxObservable *)timeoutWithLong:(jlong)timeout
   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
                 withRxObservable:(RxObservable *)other
                  withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(self, timeout, timeUnit, other, scheduler);
}

- (RxObservable *)timeoutWithLong:(jlong)timeout
   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
                  withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(self, timeout, timeUnit, nil, scheduler);
}

- (RxObservable *)timestamp {
  return RxObservable_timestampWithRxScheduler_(self, RxSchedulersSchedulers_computation());
}

- (RxObservable *)timestampWithRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_timestampWithRxScheduler_(self, scheduler);
}

- (RxObservablesBlockingObservable *)toBlocking {
  return RxObservablesBlockingObservable_fromWithRxObservable_(self);
}

- (RxObservable *)toList {
  return RxObservable_toList(self);
}

- (RxObservable *)toMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMap_initWithRxObservable_withRxFunctionsFunc1_withRxFunctionsFunc1_(self, keySelector, RxInternalUtilUtilityFunctions_identity()));
}

- (RxObservable *)toMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                       withRxFunctionsFunc1:(id<RxFunctionsFunc1>)valueSelector {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMap_initWithRxObservable_withRxFunctionsFunc1_withRxFunctionsFunc1_(self, keySelector, valueSelector));
}

- (RxObservable *)toMapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                       withRxFunctionsFunc1:(id<RxFunctionsFunc1>)valueSelector
                       withRxFunctionsFunc0:(id<RxFunctionsFunc0>)mapFactory {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMap_initWithRxObservable_withRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(self, keySelector, valueSelector, mapFactory));
}

- (RxObservable *)toMultimapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMultimap_initWithRxObservable_withRxFunctionsFunc1_withRxFunctionsFunc1_(self, keySelector, RxInternalUtilUtilityFunctions_identity()));
}

- (RxObservable *)toMultimapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                            withRxFunctionsFunc1:(id<RxFunctionsFunc1>)valueSelector {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMultimap_initWithRxObservable_withRxFunctionsFunc1_withRxFunctionsFunc1_(self, keySelector, valueSelector));
}

- (RxObservable *)toMultimapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                            withRxFunctionsFunc1:(id<RxFunctionsFunc1>)valueSelector
                            withRxFunctionsFunc0:(id<RxFunctionsFunc0>)mapFactory {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMultimap_initWithRxObservable_withRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(self, keySelector, valueSelector, mapFactory));
}

- (RxObservable *)toMultimapWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                            withRxFunctionsFunc1:(id<RxFunctionsFunc1>)valueSelector
                            withRxFunctionsFunc0:(id<RxFunctionsFunc0>)mapFactory
                            withRxFunctionsFunc1:(id<RxFunctionsFunc1>)collectionFactory {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMultimap_initWithRxObservable_withRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_withRxFunctionsFunc1_(self, keySelector, valueSelector, mapFactory, collectionFactory));
}

- (RxObservable *)toSortedList {
  return RxObservable_toSortedList(self);
}

- (RxObservable *)toSortedListWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)sortFunction {
  return RxObservable_toSortedListWithRxFunctionsFunc2_(self, sortFunction);
}

- (RxObservable *)toSortedListWithInt:(jint)initialCapacity {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorToObservableSortedList_initWithInt_(initialCapacity));
}

- (RxObservable *)toSortedListWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)sortFunction
                                           withInt:(jint)initialCapacity {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorToObservableSortedList_initWithRxFunctionsFunc2_withInt_(sortFunction, initialCapacity));
}

- (RxObservable *)sorted {
  return RxObservable_flatMapIterableWithRxFunctionsFunc1_(nil_chk(RxObservable_toSortedList(self)), RxInternalUtilUtilityFunctions_identity());
}

- (RxObservable *)sortedWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)sortFunction {
  return RxObservable_flatMapIterableWithRxFunctionsFunc1_(nil_chk(RxObservable_toSortedListWithRxFunctionsFunc2_(self, sortFunction)), RxInternalUtilUtilityFunctions_identity());
}

- (RxObservable *)unsubscribeOnWithRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorUnsubscribeOn_initWithRxScheduler_(scheduler));
}

- (RxObservable *)withLatestFromWithRxObservable:(RxObservable *)other
                            withRxFunctionsFunc2:(id<RxFunctionsFunc2>)resultSelector {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorWithLatestFrom_initWithRxObservable_withRxFunctionsFunc2_(other, resultSelector));
}

- (RxObservable *)withLatestFromWithRxObservable:(RxObservable *)o1
                                withRxObservable:(RxObservable *)o2
                            withRxFunctionsFunc3:(id<RxFunctionsFunc3>)combiner {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWithLatestFromMany_initWithRxObservable_withRxObservableArray_withJavaLangIterable_withRxFunctionsFuncN_(self, [IOSObjectArray arrayWithObjects:(id[]){ o1, o2 } count:2 type:RxObservable_class_()], nil, RxFunctionsFunctions_fromFuncWithRxFunctionsFunc3_(combiner)));
}

- (RxObservable *)withLatestFromWithRxObservable:(RxObservable *)o1
                                withRxObservable:(RxObservable *)o2
                                withRxObservable:(RxObservable *)o3
                            withRxFunctionsFunc4:(id<RxFunctionsFunc4>)combiner {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWithLatestFromMany_initWithRxObservable_withRxObservableArray_withJavaLangIterable_withRxFunctionsFuncN_(self, [IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3 } count:3 type:RxObservable_class_()], nil, RxFunctionsFunctions_fromFuncWithRxFunctionsFunc4_(combiner)));
}

- (RxObservable *)withLatestFromWithRxObservable:(RxObservable *)o1
                                withRxObservable:(RxObservable *)o2
                                withRxObservable:(RxObservable *)o3
                                withRxObservable:(RxObservable *)o4
                            withRxFunctionsFunc5:(id<RxFunctionsFunc5>)combiner {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWithLatestFromMany_initWithRxObservable_withRxObservableArray_withJavaLangIterable_withRxFunctionsFuncN_(self, [IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4 } count:4 type:RxObservable_class_()], nil, RxFunctionsFunctions_fromFuncWithRxFunctionsFunc5_(combiner)));
}

- (RxObservable *)withLatestFromWithRxObservable:(RxObservable *)o1
                                withRxObservable:(RxObservable *)o2
                                withRxObservable:(RxObservable *)o3
                                withRxObservable:(RxObservable *)o4
                                withRxObservable:(RxObservable *)o5
                            withRxFunctionsFunc6:(id<RxFunctionsFunc6>)combiner {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWithLatestFromMany_initWithRxObservable_withRxObservableArray_withJavaLangIterable_withRxFunctionsFuncN_(self, [IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5 } count:5 type:RxObservable_class_()], nil, RxFunctionsFunctions_fromFuncWithRxFunctionsFunc6_(combiner)));
}

- (RxObservable *)withLatestFromWithRxObservable:(RxObservable *)o1
                                withRxObservable:(RxObservable *)o2
                                withRxObservable:(RxObservable *)o3
                                withRxObservable:(RxObservable *)o4
                                withRxObservable:(RxObservable *)o5
                                withRxObservable:(RxObservable *)o6
                            withRxFunctionsFunc7:(id<RxFunctionsFunc7>)combiner {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWithLatestFromMany_initWithRxObservable_withRxObservableArray_withJavaLangIterable_withRxFunctionsFuncN_(self, [IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6 } count:6 type:RxObservable_class_()], nil, RxFunctionsFunctions_fromFuncWithRxFunctionsFunc7_(combiner)));
}

- (RxObservable *)withLatestFromWithRxObservable:(RxObservable *)o1
                                withRxObservable:(RxObservable *)o2
                                withRxObservable:(RxObservable *)o3
                                withRxObservable:(RxObservable *)o4
                                withRxObservable:(RxObservable *)o5
                                withRxObservable:(RxObservable *)o6
                                withRxObservable:(RxObservable *)o7
                            withRxFunctionsFunc8:(id<RxFunctionsFunc8>)combiner {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWithLatestFromMany_initWithRxObservable_withRxObservableArray_withJavaLangIterable_withRxFunctionsFuncN_(self, [IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7 } count:7 type:RxObservable_class_()], nil, RxFunctionsFunctions_fromFuncWithRxFunctionsFunc8_(combiner)));
}

- (RxObservable *)withLatestFromWithRxObservable:(RxObservable *)o1
                                withRxObservable:(RxObservable *)o2
                                withRxObservable:(RxObservable *)o3
                                withRxObservable:(RxObservable *)o4
                                withRxObservable:(RxObservable *)o5
                                withRxObservable:(RxObservable *)o6
                                withRxObservable:(RxObservable *)o7
                                withRxObservable:(RxObservable *)o8
                            withRxFunctionsFunc9:(id<RxFunctionsFunc9>)combiner {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWithLatestFromMany_initWithRxObservable_withRxObservableArray_withJavaLangIterable_withRxFunctionsFuncN_(self, [IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7, o8 } count:8 type:RxObservable_class_()], nil, RxFunctionsFunctions_fromFuncWithRxFunctionsFunc9_(combiner)));
}

- (RxObservable *)withLatestFromWithRxObservableArray:(IOSObjectArray *)others
                                 withRxFunctionsFuncN:(id<RxFunctionsFuncN>)combiner {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWithLatestFromMany_initWithRxObservable_withRxObservableArray_withJavaLangIterable_withRxFunctionsFuncN_(self, others, nil, combiner));
}

- (RxObservable *)withLatestFromWithJavaLangIterable:(id<JavaLangIterable>)others
                                withRxFunctionsFuncN:(id<RxFunctionsFuncN>)combiner {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWithLatestFromMany_initWithRxObservable_withRxObservableArray_withJavaLangIterable_withRxFunctionsFuncN_(self, nil, others, combiner));
}

- (RxObservable *)windowWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)closingSelector {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorWindowWithObservableFactory_initWithRxFunctionsFunc0_(closingSelector));
}

- (RxObservable *)windowWithInt:(jint)count {
  return RxObservable_windowWithInt_withInt_(self, count, count);
}

- (RxObservable *)windowWithInt:(jint)count
                        withInt:(jint)skip {
  return RxObservable_windowWithInt_withInt_(self, count, skip);
}

- (RxObservable *)windowWithLong:(jlong)timespan
                        withLong:(jlong)timeshift
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_windowWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, timeshift, unit, JavaLangInteger_MAX_VALUE, RxSchedulersSchedulers_computation());
}

- (RxObservable *)windowWithLong:(jlong)timespan
                        withLong:(jlong)timeshift
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_windowWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, timespan, timeshift, unit, scheduler);
}

- (RxObservable *)windowWithLong:(jlong)timespan
                        withLong:(jlong)timeshift
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                         withInt:(jint)count
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_windowWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, timeshift, unit, count, scheduler);
}

- (RxObservable *)windowWithLong:(jlong)timespan
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxObservable_windowWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, timespan, timespan, unit, RxSchedulersSchedulers_computation());
}

- (RxObservable *)windowWithLong:(jlong)timespan
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                         withInt:(jint)count {
  return RxObservable_windowWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, unit, count, RxSchedulersSchedulers_computation());
}

- (RxObservable *)windowWithLong:(jlong)timespan
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                         withInt:(jint)count
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_windowWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, unit, count, scheduler);
}

- (RxObservable *)windowWithLong:(jlong)timespan
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxObservable_windowWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, unit, JavaLangInteger_MAX_VALUE, scheduler);
}

- (RxObservable *)windowWithRxObservable:(RxObservable *)windowOpenings
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)closingSelector {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorWindowWithStartEndObservable_initWithRxObservable_withRxFunctionsFunc1_(windowOpenings, closingSelector));
}

- (RxObservable *)windowWithRxObservable:(RxObservable *)boundary {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorWindowWithObservable_initWithRxObservable_(boundary));
}

- (RxObservable *)zipWithWithJavaLangIterable:(id<JavaLangIterable>)other
                         withRxFunctionsFunc2:(id<RxFunctionsFunc2>)zipFunction {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorZipIterable_initWithJavaLangIterable_withRxFunctionsFunc2_(other, zipFunction));
}

- (RxObservable *)zipWithWithRxObservable:(RxObservable *)other
                     withRxFunctionsFunc2:(id<RxFunctionsFunc2>)zipFunction {
  return RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(self, other, zipFunction);
}

- (void)dealloc {
  RELEASE_(onSubscribe_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 2, 0, -1, 3, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 2, 4, -1, 5, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 2, 6, -1, 7, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 8, 9, -1, 10, -1, -1 },
    { NULL, "LRxObservable;", 0x1, 11, 12, -1, 13, -1, -1 },
    { NULL, "LNSObject;", 0x11, 14, 15, -1, 16, -1, -1 },
    { NULL, "LRxSingle;", 0x1, -1, -1, -1, 17, -1, -1 },
    { NULL, "LRxCompletable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 18, 19, -1, 20, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 18, 21, -1, 22, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 18, 23, -1, 24, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 18, 25, -1, 26, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 18, 27, -1, 28, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 18, 29, -1, 30, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 18, 31, -1, 32, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 18, 33, -1, 34, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 18, 35, -1, 36, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 37, 38, -1, 39, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 37, 40, -1, 41, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 37, 42, -1, 43, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 37, 44, -1, 45, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 37, 46, -1, 47, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 37, 48, -1, 49, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 37, 50, -1, 51, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 37, 52, -1, 53, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 37, 54, -1, 55, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 37, 56, -1, 57, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 58, 56, -1, 57, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 59, 19, -1, 20, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 59, 60, -1, 61, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 59, 21, -1, 22, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 59, 23, -1, 24, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 59, 25, -1, 26, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 59, 27, -1, 28, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 59, 29, -1, 30, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 59, 31, -1, 32, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 59, 33, -1, 34, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 59, 35, -1, 36, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 62, 60, -1, 61, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 62, 19, -1, 20, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 62, 21, -1, 22, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 62, 23, -1, 24, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 62, 25, -1, 26, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 62, 27, -1, 28, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 62, 29, -1, 30, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 62, 31, -1, 32, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 62, 33, -1, 34, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 62, 35, -1, 36, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 63, 64, -1, 65, -1, -1 },
    { NULL, "LRxObservable;", 0x9, -1, -1, -1, 66, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 67, 68, -1, 69, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 70, 71, -1, 72, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 70, 73, -1, 74, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 70, 75, -1, 76, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 70, 19, -1, 77, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 70, 78, -1, 79, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 80, 81, -1, 82, 83, -1 },
    { NULL, "LRxObservable;", 0x9, 80, 84, -1, 85, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 86, 87, -1, 88, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 89, 90, -1, 91, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 89, 92, -1, 93, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 89, 94, -1, 95, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 89, 96, -1, 97, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 98, 99, -1, 100, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 98, 101, -1, 102, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 98, 103, -1, 104, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 98, 105, -1, 106, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 98, 107, -1, 108, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 98, 109, -1, 110, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 98, 111, -1, 112, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 98, 113, -1, 114, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 98, 115, -1, 116, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 98, 117, -1, 118, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 19, -1, 20, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 120, -1, 121, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 60, -1, 61, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 122, -1, 123, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 21, -1, 22, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 23, -1, 24, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 25, -1, 26, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 27, -1, 28, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 29, -1, 30, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 31, -1, 32, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 33, -1, 34, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 35, -1, 36, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 124, -1, 125, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 119, 126, -1, 127, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 60, -1, 61, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 122, -1, 123, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 19, -1, 20, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 120, -1, 121, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 21, -1, 22, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 23, -1, 24, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 25, -1, 26, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 27, -1, 28, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 29, -1, 30, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 31, -1, 32, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 33, -1, 34, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 128, 35, -1, 36, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 129, -1, -1 },
    { NULL, "LRxObservable;", 0x9, -1, -1, -1, 66, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 130, 131, -1, 132, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 130, 133, -1, 134, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 135, 21, -1, 136, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 135, 38, -1, 137, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 138, 60, -1, 61, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 139, 60, -1, 61, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 140, 94, -1, 95, 141, -1 },
    { NULL, "LRxObservable;", 0x9, 140, 96, -1, 97, 142, -1 },
    { NULL, "LRxObservable;", 0x9, 140, 90, -1, 91, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 140, 92, -1, 93, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 143, 144, -1, 145, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 143, 146, -1, 147, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 56, -1, 149, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 150, -1, 151, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 152, -1, 153, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 38, -1, 39, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 40, -1, 41, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 42, -1, 43, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 44, -1, 45, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 46, -1, 47, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 48, -1, 49, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 50, -1, 51, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 148, 52, -1, 53, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 154, 15, -1, 155, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 156, 60, -1, 157, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 64, -1, 160, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 161, -1, 162, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 131, -1, 163, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 94, -1, 164, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 96, -1, 165, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 90, -1, 166, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 167, -1, 168, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 169, -1, 170, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 92, -1, 171, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 172, -1, 173, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 60, -1, 174, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 159, 122, -1, 175, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 176, 161, -1, 177, 178, -1 },
    { NULL, "LRxObservable;", 0x11, 179, 161, -1, 177, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 180, 181, -1, 182, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 183, 184, -1, 185, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 186, 15, -1, 187, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 188, 15, -1, 187, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 189, 15, -1, 190, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 191, 60, -1, 157, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 192, 99, -1, 193, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 194, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 195, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 196, 15, -1, 197, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 196, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 196, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 200, 99, -1, 201, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 202, 60, -1, 157, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 203, 204, -1, 205, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 203, 15, -1, 197, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 203, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 203, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 206, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 206, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 206, 64, -1, 207, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 206, 60, -1, 208, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 209, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 210, 15, -1, 211, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 212, 15, -1, 211, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 212, 213, -1, 214, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 215, 216, -1, 217, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 218, 219, -1, 220, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 218, 221, -1, 222, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 223, 219, -1, 224, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 225, 219, -1, 226, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 227, 219, -1, 228, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 229, 216, -1, 217, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 230, 216, -1, 217, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 231, 216, -1, 217, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 21, -1, 22, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 23, -1, 24, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 25, -1, 26, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 27, -1, 28, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 29, -1, 30, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 31, -1, 32, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 33, -1, 34, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 35, -1, 36, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 19, -1, 20, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 120, -1, 121, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 60, -1, 61, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 232, 122, -1, 123, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 233, 15, -1, 187, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 233, 234, -1, 235, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 233, 236, -1, 237, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 238, 161, -1, 177, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 239, 240, -1, 241, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 242, 15, -1, 155, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 243, 15, -1, 244, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 245, 216, -1, 217, 246, -1 },
    { NULL, "LRxObservable;", 0x11, 247, 216, -1, 217, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 248, 15, -1, 244, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 249, 99, -1, 201, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 249, 250, -1, 251, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 252, 15, -1, 187, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 252, 234, -1, 235, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 252, 253, -1, 254, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 252, 255, -1, 256, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 252, 257, -1, 258, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 252, 259, -1, 260, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 261, 15, -1, 190, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 261, 234, -1, 262, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 261, 257, -1, 263, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 261, 259, -1, 264, -1, -1 },
    { NULL, "V", 0x11, 265, 219, -1, 266, -1, -1 },
    { NULL, "V", 0x11, 265, 267, -1, 268, -1, -1 },
    { NULL, "V", 0x11, 265, 269, -1, 270, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 271, 272, -1, 273, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 271, 274, -1, 275, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 271, 15, -1, 276, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 277, 278, -1, 279, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 280, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 281, 278, -1, 282, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 283, 15, -1, 244, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 284, 99, -1, 201, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 284, 250, -1, 251, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 285, 161, -1, 177, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 286, 15, -1, 287, -1, -1 },
    { NULL, "LRxObservable;", 0x2, 288, 253, -1, 289, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 290, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 291, 60, -1, 157, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 292, 293, -1, 294, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 292, 295, -1, 296, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 292, 297, -1, 298, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 292, 299, -1, 300, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 301, 181, -1, 182, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 302, 303, -1, 304, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 302, 305, -1, 306, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 302, 307, -1, 308, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 309, 219, -1, 226, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 310, 15, -1, 311, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 310, 60, -1, 157, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 312, 15, -1, 313, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 314, 60, -1, 157, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x11, -1, -1, -1, 315, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 316, 15, -1, 317, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 318, 161, -1, 177, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 319, 213, -1, 320, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 319, 321, -1, 322, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 323, 293, -1, 294, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 323, 303, -1, 304, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 323, 324, -1, 325, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 326, 327, -1, 328, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 326, 15, -1, 329, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x11, -1, -1, -1, 315, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 330, 15, -1, 317, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 330, 234, -1, 331, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 330, 332, -1, 333, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 330, 334, -1, 335, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 330, 336, -1, 337, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 330, 338, -1, 339, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 330, 340, -1, 341, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 330, 327, -1, 342, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x11, 330, 161, -1, 343, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x11, 330, 344, -1, 345, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x11, 330, 346, -1, 347, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x11, 330, 348, -1, 349, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x11, 330, 90, -1, 350, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x11, 330, 92, -1, 351, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x11, 330, 293, -1, 352, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 353, 303, -1, 304, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 353, 213, -1, 354, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 355, 15, -1, 356, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 355, 327, -1, 357, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 358, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 358, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 358, 60, -1, 208, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 359, 213, -1, 320, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 359, 321, -1, 322, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 360, 15, -1, 244, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 361, 99, -1, 201, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 361, 250, -1, 251, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 362, 161, -1, 177, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 362, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 362, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 363, 161, -1, 177, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 363, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 363, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 364, 60, -1, 208, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 365, 15, -1, 244, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 60, -1, 367, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 19, -1, 368, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 99, -1, 201, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 101, -1, 369, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 103, -1, 370, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 105, -1, 371, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 107, -1, 372, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 109, -1, 373, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 111, -1, 374, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 113, -1, 375, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 366, 115, -1, 376, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 377, 219, -1, 378, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 377, 267, -1, 379, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 377, 269, -1, 380, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 377, 221, -1, 381, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 382, 383, -1, 384, -1, -1 },
    { NULL, "LRxSubscription;", 0x11, 377, 383, -1, 384, -1, -1 },
    { NULL, "LRxSubscription;", 0x8, 377, 385, -1, 386, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 387, 293, -1, 294, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 388, 15, -1, 187, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 389, 15, -1, 187, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 390, 161, -1, 177, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 390, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 390, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 391, 15, -1, 244, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 392, 161, -1, 177, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 392, 344, -1, 393, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 392, 346, -1, 394, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 392, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 392, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 395, 161, -1, 162, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 395, 344, -1, 396, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 395, 346, -1, 397, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 395, 90, -1, 166, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 395, 92, -1, 171, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 398, 60, -1, 399, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 400, 15, -1, 244, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 398, 15, -1, 244, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 401, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 401, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 402, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 402, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 403, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 403, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 404, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 405, 293, -1, 406, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 407, 204, -1, 205, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 407, 408, -1, 409, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 407, 15, -1, 410, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 407, 411, -1, 412, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 407, 90, -1, 198, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 407, 413, -1, 414, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 407, 415, -1, 416, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 407, 92, -1, 199, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 417, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 418, 293, -1, 419, -1, -1 },
    { NULL, "LRxObservablesBlockingObservable;", 0x11, -1, -1, -1, 420, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 421, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 422, 15, -1, 423, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 422, 272, -1, 424, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 422, 253, -1, 425, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 426, 15, -1, 427, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 426, 272, -1, 428, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 426, 253, -1, 429, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 426, 430, -1, 431, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 421, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 432, 213, -1, 433, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 432, 161, -1, 162, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 432, 434, -1, 435, -1, -1 },
    { NULL, "LRxObservable;", 0x11, -1, -1, -1, 158, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 436, 213, -1, 437, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 438, 293, -1, 294, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 439, 440, -1, 441, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 439, 442, -1, 443, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 439, 444, -1, 445, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 439, 446, -1, 447, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 439, 448, -1, 449, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 439, 450, -1, 451, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 439, 452, -1, 453, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 439, 454, -1, 455, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 439, 150, -1, 456, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 439, 56, -1, 457, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 64, -1, 459, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 161, -1, 460, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 131, -1, 461, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 94, -1, 462, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 96, -1, 463, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 464, -1, 465, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 90, -1, 466, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 167, -1, 467, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 169, -1, 468, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 92, -1, 469, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 172, -1, 470, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 458, 60, -1, 471, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 472, 473, -1, 474, -1, -1 },
    { NULL, "LRxObservable;", 0x11, 472, 440, -1, 475, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservable_OnSubscribe:);
  methods[1].selector = @selector(createWithRxObservable_OnSubscribe:);
  methods[2].selector = @selector(createWithRxObservablesSyncOnSubscribe:);
  methods[3].selector = @selector(createWithRxObservablesAsyncOnSubscribe:);
  methods[4].selector = @selector(liftWithRxObservable_Operator:);
  methods[5].selector = @selector(composeWithRxObservable_Transformer:);
  methods[6].selector = @selector(toWithRxFunctionsFunc1:);
  methods[7].selector = @selector(toSingle);
  methods[8].selector = @selector(toCompletable);
  methods[9].selector = @selector(ambWithJavaLangIterable:);
  methods[10].selector = @selector(ambWithRxObservable:withRxObservable:);
  methods[11].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:);
  methods[12].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[13].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[14].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[15].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[16].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[17].selector = @selector(ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[18].selector = @selector(combineLatestWithRxObservable:withRxObservable:withRxFunctionsFunc2:);
  methods[19].selector = @selector(combineLatestWithRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc3:);
  methods[20].selector = @selector(combineLatestWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc4:);
  methods[21].selector = @selector(combineLatestWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc5:);
  methods[22].selector = @selector(combineLatestWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc6:);
  methods[23].selector = @selector(combineLatestWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc7:);
  methods[24].selector = @selector(combineLatestWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc8:);
  methods[25].selector = @selector(combineLatestWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc9:);
  methods[26].selector = @selector(combineLatestWithJavaUtilList:withRxFunctionsFuncN:);
  methods[27].selector = @selector(combineLatestWithJavaLangIterable:withRxFunctionsFuncN:);
  methods[28].selector = @selector(combineLatestDelayErrorWithJavaLangIterable:withRxFunctionsFuncN:);
  methods[29].selector = @selector(concatWithJavaLangIterable:);
  methods[30].selector = @selector(concatWithRxObservable:);
  methods[31].selector = @selector(concatWithRxObservable:withRxObservable:);
  methods[32].selector = @selector(concatWithRxObservable:withRxObservable:withRxObservable:);
  methods[33].selector = @selector(concatWithRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[34].selector = @selector(concatWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[35].selector = @selector(concatWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[36].selector = @selector(concatWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[37].selector = @selector(concatWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[38].selector = @selector(concatWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[39].selector = @selector(concatDelayErrorWithRxObservable:);
  methods[40].selector = @selector(concatDelayErrorWithJavaLangIterable:);
  methods[41].selector = @selector(concatDelayErrorWithRxObservable:withRxObservable:);
  methods[42].selector = @selector(concatDelayErrorWithRxObservable:withRxObservable:withRxObservable:);
  methods[43].selector = @selector(concatDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[44].selector = @selector(concatDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[45].selector = @selector(concatDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[46].selector = @selector(concatDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[47].selector = @selector(concatDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[48].selector = @selector(concatDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[49].selector = @selector(deferWithRxFunctionsFunc0:);
  methods[50].selector = @selector(empty);
  methods[51].selector = @selector(errorWithNSException:);
  methods[52].selector = @selector(fromWithJavaUtilConcurrentFuture:);
  methods[53].selector = @selector(fromWithJavaUtilConcurrentFuture:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[54].selector = @selector(fromWithJavaUtilConcurrentFuture:withRxScheduler:);
  methods[55].selector = @selector(fromWithJavaLangIterable:);
  methods[56].selector = @selector(fromWithNSObjectArray:);
  methods[57].selector = @selector(fromEmitterWithRxFunctionsAction1:withRxAsyncEmitter_BackpressureMode:);
  methods[58].selector = @selector(fromEmitterWithRxFunctionsAction1:withRxEmitter_BackpressureMode:);
  methods[59].selector = @selector(fromCallableWithJavaUtilConcurrentCallable:);
  methods[60].selector = @selector(intervalWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[61].selector = @selector(intervalWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[62].selector = @selector(intervalWithLong:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[63].selector = @selector(intervalWithLong:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[64].selector = @selector(justWithId:);
  methods[65].selector = @selector(justWithId:withId:);
  methods[66].selector = @selector(justWithId:withId:withId:);
  methods[67].selector = @selector(justWithId:withId:withId:withId:);
  methods[68].selector = @selector(justWithId:withId:withId:withId:withId:);
  methods[69].selector = @selector(justWithId:withId:withId:withId:withId:withId:);
  methods[70].selector = @selector(justWithId:withId:withId:withId:withId:withId:withId:);
  methods[71].selector = @selector(justWithId:withId:withId:withId:withId:withId:withId:withId:);
  methods[72].selector = @selector(justWithId:withId:withId:withId:withId:withId:withId:withId:withId:);
  methods[73].selector = @selector(justWithId:withId:withId:withId:withId:withId:withId:withId:withId:withId:);
  methods[74].selector = @selector(mergeWithJavaLangIterable:);
  methods[75].selector = @selector(mergeWithJavaLangIterable:withInt:);
  methods[76].selector = @selector(mergeWithRxObservable:);
  methods[77].selector = @selector(mergeWithRxObservable:withInt:);
  methods[78].selector = @selector(mergeWithRxObservable:withRxObservable:);
  methods[79].selector = @selector(mergeWithRxObservable:withRxObservable:withRxObservable:);
  methods[80].selector = @selector(mergeWithRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[81].selector = @selector(mergeWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[82].selector = @selector(mergeWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[83].selector = @selector(mergeWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[84].selector = @selector(mergeWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[85].selector = @selector(mergeWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[86].selector = @selector(mergeWithRxObservableArray:);
  methods[87].selector = @selector(mergeWithRxObservableArray:withInt:);
  methods[88].selector = @selector(mergeDelayErrorWithRxObservable:);
  methods[89].selector = @selector(mergeDelayErrorWithRxObservable:withInt:);
  methods[90].selector = @selector(mergeDelayErrorWithJavaLangIterable:);
  methods[91].selector = @selector(mergeDelayErrorWithJavaLangIterable:withInt:);
  methods[92].selector = @selector(mergeDelayErrorWithRxObservable:withRxObservable:);
  methods[93].selector = @selector(mergeDelayErrorWithRxObservable:withRxObservable:withRxObservable:);
  methods[94].selector = @selector(mergeDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[95].selector = @selector(mergeDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[96].selector = @selector(mergeDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[97].selector = @selector(mergeDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[98].selector = @selector(mergeDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[99].selector = @selector(mergeDelayErrorWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[100].selector = @selector(nest);
  methods[101].selector = @selector(never);
  methods[102].selector = @selector(rangeWithInt:withInt:);
  methods[103].selector = @selector(rangeWithInt:withInt:withRxScheduler:);
  methods[104].selector = @selector(sequenceEqualWithRxObservable:withRxObservable:);
  methods[105].selector = @selector(sequenceEqualWithRxObservable:withRxObservable:withRxFunctionsFunc2:);
  methods[106].selector = @selector(switchOnNextWithRxObservable:);
  methods[107].selector = @selector(switchOnNextDelayErrorWithRxObservable:);
  methods[108].selector = @selector(timerWithLong:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[109].selector = @selector(timerWithLong:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[110].selector = @selector(timerWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[111].selector = @selector(timerWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[112].selector = @selector(using__WithRxFunctionsFunc0:withRxFunctionsFunc1:withRxFunctionsAction1:);
  methods[113].selector = @selector(using__WithRxFunctionsFunc0:withRxFunctionsFunc1:withRxFunctionsAction1:withBoolean:);
  methods[114].selector = @selector(zipWithJavaLangIterable:withRxFunctionsFuncN:);
  methods[115].selector = @selector(zipWithRxObservableArray:withRxFunctionsFuncN:);
  methods[116].selector = @selector(zipWithRxObservable:withRxFunctionsFuncN:);
  methods[117].selector = @selector(zipWithRxObservable:withRxObservable:withRxFunctionsFunc2:);
  methods[118].selector = @selector(zipWithRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc3:);
  methods[119].selector = @selector(zipWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc4:);
  methods[120].selector = @selector(zipWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc5:);
  methods[121].selector = @selector(zipWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc6:);
  methods[122].selector = @selector(zipWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc7:);
  methods[123].selector = @selector(zipWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc8:);
  methods[124].selector = @selector(zipWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc9:);
  methods[125].selector = @selector(allWithRxFunctionsFunc1:);
  methods[126].selector = @selector(ambWithWithRxObservable:);
  methods[127].selector = @selector(asObservable);
  methods[128].selector = @selector(bufferWithRxFunctionsFunc0:);
  methods[129].selector = @selector(bufferWithInt:);
  methods[130].selector = @selector(bufferWithInt:withInt:);
  methods[131].selector = @selector(bufferWithLong:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[132].selector = @selector(bufferWithLong:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[133].selector = @selector(bufferWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[134].selector = @selector(bufferWithLong:withJavaUtilConcurrentTimeUnit:withInt:);
  methods[135].selector = @selector(bufferWithLong:withJavaUtilConcurrentTimeUnit:withInt:withRxScheduler:);
  methods[136].selector = @selector(bufferWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[137].selector = @selector(bufferWithRxObservable:withRxFunctionsFunc1:);
  methods[138].selector = @selector(bufferWithRxObservable:);
  methods[139].selector = @selector(bufferWithRxObservable:withInt:);
  methods[140].selector = @selector(cache);
  methods[141].selector = @selector(cacheWithInt:);
  methods[142].selector = @selector(cacheWithInitialCapacityWithInt:);
  methods[143].selector = @selector(castWithIOSClass:);
  methods[144].selector = @selector(collectWithRxFunctionsFunc0:withRxFunctionsAction2:);
  methods[145].selector = @selector(concatMapWithRxFunctionsFunc1:);
  methods[146].selector = @selector(concatMapDelayErrorWithRxFunctionsFunc1:);
  methods[147].selector = @selector(concatMapIterableWithRxFunctionsFunc1:);
  methods[148].selector = @selector(concatWithWithRxObservable:);
  methods[149].selector = @selector(containsWithId:);
  methods[150].selector = @selector(count);
  methods[151].selector = @selector(countLong);
  methods[152].selector = @selector(debounceWithRxFunctionsFunc1:);
  methods[153].selector = @selector(debounceWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[154].selector = @selector(debounceWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[155].selector = @selector(defaultIfEmptyWithId:);
  methods[156].selector = @selector(switchIfEmptyWithRxObservable:);
  methods[157].selector = @selector(delayWithRxFunctionsFunc0:withRxFunctionsFunc1:);
  methods[158].selector = @selector(delayWithRxFunctionsFunc1:);
  methods[159].selector = @selector(delayWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[160].selector = @selector(delayWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[161].selector = @selector(delaySubscriptionWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[162].selector = @selector(delaySubscriptionWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[163].selector = @selector(delaySubscriptionWithRxFunctionsFunc0:);
  methods[164].selector = @selector(delaySubscriptionWithRxObservable:);
  methods[165].selector = @selector(dematerialize);
  methods[166].selector = @selector(distinct);
  methods[167].selector = @selector(distinctWithRxFunctionsFunc1:);
  methods[168].selector = @selector(distinctUntilChanged);
  methods[169].selector = @selector(distinctUntilChangedWithRxFunctionsFunc1:);
  methods[170].selector = @selector(distinctUntilChangedWithRxFunctionsFunc2:);
  methods[171].selector = @selector(doOnCompletedWithRxFunctionsAction0:);
  methods[172].selector = @selector(doOnEachWithRxFunctionsAction1:);
  methods[173].selector = @selector(doOnEachWithRxObserver:);
  methods[174].selector = @selector(doOnErrorWithRxFunctionsAction1:);
  methods[175].selector = @selector(doOnNextWithRxFunctionsAction1:);
  methods[176].selector = @selector(doOnRequestWithRxFunctionsAction1:);
  methods[177].selector = @selector(doOnSubscribeWithRxFunctionsAction0:);
  methods[178].selector = @selector(doOnTerminateWithRxFunctionsAction0:);
  methods[179].selector = @selector(doOnUnsubscribeWithRxFunctionsAction0:);
  methods[180].selector = @selector(concatEagerWithRxObservable:withRxObservable:);
  methods[181].selector = @selector(concatEagerWithRxObservable:withRxObservable:withRxObservable:);
  methods[182].selector = @selector(concatEagerWithRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[183].selector = @selector(concatEagerWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[184].selector = @selector(concatEagerWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[185].selector = @selector(concatEagerWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[186].selector = @selector(concatEagerWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[187].selector = @selector(concatEagerWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:);
  methods[188].selector = @selector(concatEagerWithJavaLangIterable:);
  methods[189].selector = @selector(concatEagerWithJavaLangIterable:withInt:);
  methods[190].selector = @selector(concatEagerWithRxObservable:);
  methods[191].selector = @selector(concatEagerWithRxObservable:withInt:);
  methods[192].selector = @selector(concatMapEagerWithRxFunctionsFunc1:);
  methods[193].selector = @selector(concatMapEagerWithRxFunctionsFunc1:withInt:);
  methods[194].selector = @selector(concatMapEagerWithRxFunctionsFunc1:withInt:withInt:);
  methods[195].selector = @selector(elementAtWithInt:);
  methods[196].selector = @selector(elementAtOrDefaultWithInt:withId:);
  methods[197].selector = @selector(existsWithRxFunctionsFunc1:);
  methods[198].selector = @selector(filterWithRxFunctionsFunc1:);
  methods[199].selector = @selector(finallyDoWithRxFunctionsAction0:);
  methods[200].selector = @selector(doAfterTerminateWithRxFunctionsAction0:);
  methods[201].selector = @selector(first);
  methods[202].selector = @selector(firstWithRxFunctionsFunc1:);
  methods[203].selector = @selector(firstOrDefaultWithId:);
  methods[204].selector = @selector(firstOrDefaultWithId:withRxFunctionsFunc1:);
  methods[205].selector = @selector(flatMapWithRxFunctionsFunc1:);
  methods[206].selector = @selector(flatMapWithRxFunctionsFunc1:withInt:);
  methods[207].selector = @selector(flatMapWithRxFunctionsFunc1:withRxFunctionsFunc1:withRxFunctionsFunc0:);
  methods[208].selector = @selector(flatMapWithRxFunctionsFunc1:withRxFunctionsFunc1:withRxFunctionsFunc0:withInt:);
  methods[209].selector = @selector(flatMapWithRxFunctionsFunc1:withRxFunctionsFunc2:);
  methods[210].selector = @selector(flatMapWithRxFunctionsFunc1:withRxFunctionsFunc2:withInt:);
  methods[211].selector = @selector(flatMapIterableWithRxFunctionsFunc1:);
  methods[212].selector = @selector(flatMapIterableWithRxFunctionsFunc1:withInt:);
  methods[213].selector = @selector(flatMapIterableWithRxFunctionsFunc1:withRxFunctionsFunc2:);
  methods[214].selector = @selector(flatMapIterableWithRxFunctionsFunc1:withRxFunctionsFunc2:withInt:);
  methods[215].selector = @selector(forEachWithRxFunctionsAction1:);
  methods[216].selector = @selector(forEachWithRxFunctionsAction1:withRxFunctionsAction1:);
  methods[217].selector = @selector(forEachWithRxFunctionsAction1:withRxFunctionsAction1:withRxFunctionsAction0:);
  methods[218].selector = @selector(groupByWithRxFunctionsFunc1:withRxFunctionsFunc1:);
  methods[219].selector = @selector(groupByWithRxFunctionsFunc1:withRxFunctionsFunc1:withRxFunctionsFunc1:);
  methods[220].selector = @selector(groupByWithRxFunctionsFunc1:);
  methods[221].selector = @selector(groupJoinWithRxObservable:withRxFunctionsFunc1:withRxFunctionsFunc1:withRxFunctionsFunc2:);
  methods[222].selector = @selector(ignoreElements);
  methods[223].selector = @selector(isEmpty);
  methods[224].selector = @selector(joinWithRxObservable:withRxFunctionsFunc1:withRxFunctionsFunc1:withRxFunctionsFunc2:);
  methods[225].selector = @selector(last);
  methods[226].selector = @selector(lastWithRxFunctionsFunc1:);
  methods[227].selector = @selector(lastOrDefaultWithId:);
  methods[228].selector = @selector(lastOrDefaultWithId:withRxFunctionsFunc1:);
  methods[229].selector = @selector(limitWithInt:);
  methods[230].selector = @selector(mapWithRxFunctionsFunc1:);
  methods[231].selector = @selector(mapNotificationWithRxFunctionsFunc1:withRxFunctionsFunc1:withRxFunctionsFunc0:);
  methods[232].selector = @selector(materialize);
  methods[233].selector = @selector(mergeWithWithRxObservable:);
  methods[234].selector = @selector(observeOnWithRxScheduler:);
  methods[235].selector = @selector(observeOnWithRxScheduler:withInt:);
  methods[236].selector = @selector(observeOnWithRxScheduler:withBoolean:);
  methods[237].selector = @selector(observeOnWithRxScheduler:withBoolean:withInt:);
  methods[238].selector = @selector(ofTypeWithIOSClass:);
  methods[239].selector = @selector(onBackpressureBuffer);
  methods[240].selector = @selector(onBackpressureBufferWithLong:);
  methods[241].selector = @selector(onBackpressureBufferWithLong:withRxFunctionsAction0:);
  methods[242].selector = @selector(onBackpressureBufferWithLong:withRxFunctionsAction0:withRxBackpressureOverflow_Strategy:);
  methods[243].selector = @selector(onBackpressureDropWithRxFunctionsAction1:);
  methods[244].selector = @selector(onBackpressureDrop);
  methods[245].selector = @selector(onBackpressureLatest);
  methods[246].selector = @selector(onErrorResumeNextWithRxFunctionsFunc1:);
  methods[247].selector = @selector(onErrorResumeNextWithRxObservable:);
  methods[248].selector = @selector(onErrorReturnWithRxFunctionsFunc1:);
  methods[249].selector = @selector(onExceptionResumeNextWithRxObservable:);
  methods[250].selector = @selector(onTerminateDetach);
  methods[251].selector = @selector(publish);
  methods[252].selector = @selector(publishWithRxFunctionsFunc1:);
  methods[253].selector = @selector(rebatchRequestsWithInt:);
  methods[254].selector = @selector(reduceWithRxFunctionsFunc2:);
  methods[255].selector = @selector(reduceWithId:withRxFunctionsFunc2:);
  methods[256].selector = @selector(repeat);
  methods[257].selector = @selector(repeatWithRxScheduler:);
  methods[258].selector = @selector(repeatWithLong:);
  methods[259].selector = @selector(repeatWithLong:withRxScheduler:);
  methods[260].selector = @selector(repeatWhenWithRxFunctionsFunc1:withRxScheduler:);
  methods[261].selector = @selector(repeatWhenWithRxFunctionsFunc1:);
  methods[262].selector = @selector(replay);
  methods[263].selector = @selector(replayWithRxFunctionsFunc1:);
  methods[264].selector = @selector(replayWithRxFunctionsFunc1:withInt:);
  methods[265].selector = @selector(replayWithRxFunctionsFunc1:withInt:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[266].selector = @selector(replayWithRxFunctionsFunc1:withInt:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[267].selector = @selector(replayWithRxFunctionsFunc1:withInt:withRxScheduler:);
  methods[268].selector = @selector(replayWithRxFunctionsFunc1:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[269].selector = @selector(replayWithRxFunctionsFunc1:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[270].selector = @selector(replayWithRxFunctionsFunc1:withRxScheduler:);
  methods[271].selector = @selector(replayWithInt:);
  methods[272].selector = @selector(replayWithInt:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[273].selector = @selector(replayWithInt:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[274].selector = @selector(replayWithInt:withRxScheduler:);
  methods[275].selector = @selector(replayWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[276].selector = @selector(replayWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[277].selector = @selector(replayWithRxScheduler:);
  methods[278].selector = @selector(retry);
  methods[279].selector = @selector(retryWithLong:);
  methods[280].selector = @selector(retryWithRxFunctionsFunc2:);
  methods[281].selector = @selector(retryWhenWithRxFunctionsFunc1:);
  methods[282].selector = @selector(retryWhenWithRxFunctionsFunc1:withRxScheduler:);
  methods[283].selector = @selector(sampleWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[284].selector = @selector(sampleWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[285].selector = @selector(sampleWithRxObservable:);
  methods[286].selector = @selector(scanWithRxFunctionsFunc2:);
  methods[287].selector = @selector(scanWithId:withRxFunctionsFunc2:);
  methods[288].selector = @selector(serialize);
  methods[289].selector = @selector(share);
  methods[290].selector = @selector(single);
  methods[291].selector = @selector(singleWithRxFunctionsFunc1:);
  methods[292].selector = @selector(singleOrDefaultWithId:);
  methods[293].selector = @selector(singleOrDefaultWithId:withRxFunctionsFunc1:);
  methods[294].selector = @selector(skipWithInt:);
  methods[295].selector = @selector(skipWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[296].selector = @selector(skipWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[297].selector = @selector(skipLastWithInt:);
  methods[298].selector = @selector(skipLastWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[299].selector = @selector(skipLastWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[300].selector = @selector(skipUntilWithRxObservable:);
  methods[301].selector = @selector(skipWhileWithRxFunctionsFunc1:);
  methods[302].selector = @selector(startWithWithRxObservable:);
  methods[303].selector = @selector(startWithWithJavaLangIterable:);
  methods[304].selector = @selector(startWithWithId:);
  methods[305].selector = @selector(startWithWithId:withId:);
  methods[306].selector = @selector(startWithWithId:withId:withId:);
  methods[307].selector = @selector(startWithWithId:withId:withId:withId:);
  methods[308].selector = @selector(startWithWithId:withId:withId:withId:withId:);
  methods[309].selector = @selector(startWithWithId:withId:withId:withId:withId:withId:);
  methods[310].selector = @selector(startWithWithId:withId:withId:withId:withId:withId:withId:);
  methods[311].selector = @selector(startWithWithId:withId:withId:withId:withId:withId:withId:withId:);
  methods[312].selector = @selector(startWithWithId:withId:withId:withId:withId:withId:withId:withId:withId:);
  methods[313].selector = @selector(subscribe);
  methods[314].selector = @selector(subscribeWithRxFunctionsAction1:);
  methods[315].selector = @selector(subscribeWithRxFunctionsAction1:withRxFunctionsAction1:);
  methods[316].selector = @selector(subscribeWithRxFunctionsAction1:withRxFunctionsAction1:withRxFunctionsAction0:);
  methods[317].selector = @selector(subscribeWithRxObserver:);
  methods[318].selector = @selector(unsafeSubscribeWithRxSubscriber:);
  methods[319].selector = @selector(subscribeWithRxSubscriber:);
  methods[320].selector = @selector(subscribeWithRxSubscriber:withRxObservable:);
  methods[321].selector = @selector(subscribeOnWithRxScheduler:);
  methods[322].selector = @selector(switchMapWithRxFunctionsFunc1:);
  methods[323].selector = @selector(switchMapDelayErrorWithRxFunctionsFunc1:);
  methods[324].selector = @selector(takeWithInt:);
  methods[325].selector = @selector(takeWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[326].selector = @selector(takeWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[327].selector = @selector(takeFirstWithRxFunctionsFunc1:);
  methods[328].selector = @selector(takeLastWithInt:);
  methods[329].selector = @selector(takeLastWithInt:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[330].selector = @selector(takeLastWithInt:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[331].selector = @selector(takeLastWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[332].selector = @selector(takeLastWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[333].selector = @selector(takeLastBufferWithInt:);
  methods[334].selector = @selector(takeLastBufferWithInt:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[335].selector = @selector(takeLastBufferWithInt:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[336].selector = @selector(takeLastBufferWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[337].selector = @selector(takeLastBufferWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[338].selector = @selector(takeUntilWithRxObservable:);
  methods[339].selector = @selector(takeWhileWithRxFunctionsFunc1:);
  methods[340].selector = @selector(takeUntilWithRxFunctionsFunc1:);
  methods[341].selector = @selector(throttleFirstWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[342].selector = @selector(throttleFirstWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[343].selector = @selector(throttleLastWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[344].selector = @selector(throttleLastWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[345].selector = @selector(throttleWithTimeoutWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[346].selector = @selector(throttleWithTimeoutWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[347].selector = @selector(timeInterval);
  methods[348].selector = @selector(timeIntervalWithRxScheduler:);
  methods[349].selector = @selector(timeoutWithRxFunctionsFunc0:withRxFunctionsFunc1:);
  methods[350].selector = @selector(timeoutWithRxFunctionsFunc0:withRxFunctionsFunc1:withRxObservable:);
  methods[351].selector = @selector(timeoutWithRxFunctionsFunc1:);
  methods[352].selector = @selector(timeoutWithRxFunctionsFunc1:withRxObservable:);
  methods[353].selector = @selector(timeoutWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[354].selector = @selector(timeoutWithLong:withJavaUtilConcurrentTimeUnit:withRxObservable:);
  methods[355].selector = @selector(timeoutWithLong:withJavaUtilConcurrentTimeUnit:withRxObservable:withRxScheduler:);
  methods[356].selector = @selector(timeoutWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[357].selector = @selector(timestamp);
  methods[358].selector = @selector(timestampWithRxScheduler:);
  methods[359].selector = @selector(toBlocking);
  methods[360].selector = @selector(toList);
  methods[361].selector = @selector(toMapWithRxFunctionsFunc1:);
  methods[362].selector = @selector(toMapWithRxFunctionsFunc1:withRxFunctionsFunc1:);
  methods[363].selector = @selector(toMapWithRxFunctionsFunc1:withRxFunctionsFunc1:withRxFunctionsFunc0:);
  methods[364].selector = @selector(toMultimapWithRxFunctionsFunc1:);
  methods[365].selector = @selector(toMultimapWithRxFunctionsFunc1:withRxFunctionsFunc1:);
  methods[366].selector = @selector(toMultimapWithRxFunctionsFunc1:withRxFunctionsFunc1:withRxFunctionsFunc0:);
  methods[367].selector = @selector(toMultimapWithRxFunctionsFunc1:withRxFunctionsFunc1:withRxFunctionsFunc0:withRxFunctionsFunc1:);
  methods[368].selector = @selector(toSortedList);
  methods[369].selector = @selector(toSortedListWithRxFunctionsFunc2:);
  methods[370].selector = @selector(toSortedListWithInt:);
  methods[371].selector = @selector(toSortedListWithRxFunctionsFunc2:withInt:);
  methods[372].selector = @selector(sorted);
  methods[373].selector = @selector(sortedWithRxFunctionsFunc2:);
  methods[374].selector = @selector(unsubscribeOnWithRxScheduler:);
  methods[375].selector = @selector(withLatestFromWithRxObservable:withRxFunctionsFunc2:);
  methods[376].selector = @selector(withLatestFromWithRxObservable:withRxObservable:withRxFunctionsFunc3:);
  methods[377].selector = @selector(withLatestFromWithRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc4:);
  methods[378].selector = @selector(withLatestFromWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc5:);
  methods[379].selector = @selector(withLatestFromWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc6:);
  methods[380].selector = @selector(withLatestFromWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc7:);
  methods[381].selector = @selector(withLatestFromWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc8:);
  methods[382].selector = @selector(withLatestFromWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxFunctionsFunc9:);
  methods[383].selector = @selector(withLatestFromWithRxObservableArray:withRxFunctionsFuncN:);
  methods[384].selector = @selector(withLatestFromWithJavaLangIterable:withRxFunctionsFuncN:);
  methods[385].selector = @selector(windowWithRxFunctionsFunc0:);
  methods[386].selector = @selector(windowWithInt:);
  methods[387].selector = @selector(windowWithInt:withInt:);
  methods[388].selector = @selector(windowWithLong:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[389].selector = @selector(windowWithLong:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[390].selector = @selector(windowWithLong:withLong:withJavaUtilConcurrentTimeUnit:withInt:withRxScheduler:);
  methods[391].selector = @selector(windowWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[392].selector = @selector(windowWithLong:withJavaUtilConcurrentTimeUnit:withInt:);
  methods[393].selector = @selector(windowWithLong:withJavaUtilConcurrentTimeUnit:withInt:withRxScheduler:);
  methods[394].selector = @selector(windowWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[395].selector = @selector(windowWithRxObservable:withRxFunctionsFunc1:);
  methods[396].selector = @selector(windowWithRxObservable:);
  methods[397].selector = @selector(zipWithWithJavaLangIterable:withRxFunctionsFunc2:);
  methods[398].selector = @selector(zipWithWithRxObservable:withRxFunctionsFunc2:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "onSubscribe_", "LRxObservable_OnSubscribe;", .constantValue.asLong = 0, 0x10, -1, -1, 476, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable_OnSubscribe;", "(Lrx/Observable$OnSubscribe<TT;>;)V", "create", "<T:Ljava/lang/Object;>(Lrx/Observable$OnSubscribe<TT;>;)Lrx/Observable<TT;>;", "LRxObservablesSyncOnSubscribe;", "<S:Ljava/lang/Object;T:Ljava/lang/Object;>(Lrx/observables/SyncOnSubscribe<TS;TT;>;)Lrx/Observable<TT;>;", "LRxObservablesAsyncOnSubscribe;", "<S:Ljava/lang/Object;T:Ljava/lang/Object;>(Lrx/observables/AsyncOnSubscribe<TS;TT;>;)Lrx/Observable<TT;>;", "lift", "LRxObservable_Operator;", "<R:Ljava/lang/Object;>(Lrx/Observable$Operator<+TR;-TT;>;)Lrx/Observable<TR;>;", "compose", "LRxObservable_Transformer;", "<R:Ljava/lang/Object;>(Lrx/Observable$Transformer<-TT;+TR;>;)Lrx/Observable<TR;>;", "to", "LRxFunctionsFunc1;", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Observable<TT;>;TR;>;)TR;", "()Lrx/Single<TT;>;", "amb", "LJavaLangIterable;", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lrx/Observable<+TT;>;>;)Lrx/Observable<TT;>;", "LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "combineLatest", "LRxObservable;LRxObservable;LRxFunctionsFunc2;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<+TT1;>;Lrx/Observable<+TT2;>;Lrx/functions/Func2<-TT1;-TT2;+TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc3;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<+TT1;>;Lrx/Observable<+TT2;>;Lrx/Observable<+TT3;>;Lrx/functions/Func3<-TT1;-TT2;-TT3;+TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc4;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<+TT1;>;Lrx/Observable<+TT2;>;Lrx/Observable<+TT3;>;Lrx/Observable<+TT4;>;Lrx/functions/Func4<-TT1;-TT2;-TT3;-TT4;+TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc5;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<+TT1;>;Lrx/Observable<+TT2;>;Lrx/Observable<+TT3;>;Lrx/Observable<+TT4;>;Lrx/Observable<+TT5;>;Lrx/functions/Func5<-TT1;-TT2;-TT3;-TT4;-TT5;+TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc6;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<+TT1;>;Lrx/Observable<+TT2;>;Lrx/Observable<+TT3;>;Lrx/Observable<+TT4;>;Lrx/Observable<+TT5;>;Lrx/Observable<+TT6;>;Lrx/functions/Func6<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;+TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc7;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<+TT1;>;Lrx/Observable<+TT2;>;Lrx/Observable<+TT3;>;Lrx/Observable<+TT4;>;Lrx/Observable<+TT5;>;Lrx/Observable<+TT6;>;Lrx/Observable<+TT7;>;Lrx/functions/Func7<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;+TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc8;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;T8:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<+TT1;>;Lrx/Observable<+TT2;>;Lrx/Observable<+TT3;>;Lrx/Observable<+TT4;>;Lrx/Observable<+TT5;>;Lrx/Observable<+TT6;>;Lrx/Observable<+TT7;>;Lrx/Observable<+TT8;>;Lrx/functions/Func8<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;-TT8;+TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc9;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;T8:Ljava/lang/Object;T9:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<+TT1;>;Lrx/Observable<+TT2;>;Lrx/Observable<+TT3;>;Lrx/Observable<+TT4;>;Lrx/Observable<+TT5;>;Lrx/Observable<+TT6;>;Lrx/Observable<+TT7;>;Lrx/Observable<+TT8;>;Lrx/Observable<+TT9;>;Lrx/functions/Func9<-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;-TT8;-TT9;+TR;>;)Lrx/Observable<TR;>;", "LJavaUtilList;LRxFunctionsFuncN;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/List<+Lrx/Observable<+TT;>;>;Lrx/functions/FuncN<+TR;>;)Lrx/Observable<TR;>;", "LJavaLangIterable;LRxFunctionsFuncN;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lrx/Observable<+TT;>;>;Lrx/functions/FuncN<+TR;>;)Lrx/Observable<TR;>;", "combineLatestDelayError", "concat", "LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+Lrx/Observable<+TT;>;>;)Lrx/Observable<TT;>;", "concatDelayError", "defer", "LRxFunctionsFunc0;", "<T:Ljava/lang/Object;>(Lrx/functions/Func0<Lrx/Observable<TT;>;>;)Lrx/Observable<TT;>;", "<T:Ljava/lang/Object;>()Lrx/Observable<TT;>;", "error", "LNSException;", "<T:Ljava/lang/Object;>(Ljava/lang/Throwable;)Lrx/Observable<TT;>;", "from", "LJavaUtilConcurrentFuture;", "<T:Ljava/lang/Object;>(Ljava/util/concurrent/Future<+TT;>;)Lrx/Observable<TT;>;", "LJavaUtilConcurrentFuture;JLJavaUtilConcurrentTimeUnit;", "<T:Ljava/lang/Object;>(Ljava/util/concurrent/Future<+TT;>;JLjava/util/concurrent/TimeUnit;)Lrx/Observable<TT;>;", "LJavaUtilConcurrentFuture;LRxScheduler;", "<T:Ljava/lang/Object;>(Ljava/util/concurrent/Future<+TT;>;Lrx/Scheduler;)Lrx/Observable<TT;>;", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<+TT;>;)Lrx/Observable<TT;>;", "[LNSObject;", "<T:Ljava/lang/Object;>([TT;)Lrx/Observable<TT;>;", "fromEmitter", "LRxFunctionsAction1;LRxAsyncEmitter_BackpressureMode;", "<T:Ljava/lang/Object;>(Lrx/functions/Action1<Lrx/AsyncEmitter<TT;>;>;Lrx/AsyncEmitter$BackpressureMode;)Lrx/Observable<TT;>;", (void *)&RxObservable__Annotations$0, "LRxFunctionsAction1;LRxEmitter_BackpressureMode;", "<T:Ljava/lang/Object;>(Lrx/functions/Action1<Lrx/Emitter<TT;>;>;Lrx/Emitter$BackpressureMode;)Lrx/Observable<TT;>;", "fromCallable", "LJavaUtilConcurrentCallable;", "<T:Ljava/lang/Object;>(Ljava/util/concurrent/Callable<+TT;>;)Lrx/Observable<TT;>;", "interval", "JLJavaUtilConcurrentTimeUnit;", "(JLjava/util/concurrent/TimeUnit;)Lrx/Observable<Ljava/lang/Long;>;", "JLJavaUtilConcurrentTimeUnit;LRxScheduler;", "(JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<Ljava/lang/Long;>;", "JJLJavaUtilConcurrentTimeUnit;", "(JJLjava/util/concurrent/TimeUnit;)Lrx/Observable<Ljava/lang/Long;>;", "JJLJavaUtilConcurrentTimeUnit;LRxScheduler;", "(JJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<Ljava/lang/Long;>;", "just", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)Lrx/Observable<TT;>;", "LNSObject;LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;)Lrx/Observable<TT;>;", "LNSObject;LNSObject;LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;TT;)Lrx/Observable<TT;>;", "LNSObject;LNSObject;LNSObject;LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;TT;TT;)Lrx/Observable<TT;>;", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;TT;TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;TT;TT;TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;TT;TT;TT;TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "merge", "LJavaLangIterable;I", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lrx/Observable<+TT;>;>;I)Lrx/Observable<TT;>;", "LRxObservable;I", "<T:Ljava/lang/Object;>(Lrx/Observable<+Lrx/Observable<+TT;>;>;I)Lrx/Observable<TT;>;", "[LRxObservable;", "<T:Ljava/lang/Object;>([Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "[LRxObservable;I", "<T:Ljava/lang/Object;>([Lrx/Observable<+TT;>;I)Lrx/Observable<TT;>;", "mergeDelayError", "()Lrx/Observable<Lrx/Observable<TT;>;>;", "range", "II", "(II)Lrx/Observable<Ljava/lang/Integer;>;", "IILRxScheduler;", "(IILrx/Scheduler;)Lrx/Observable<Ljava/lang/Integer;>;", "sequenceEqual", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable<Ljava/lang/Boolean;>;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/functions/Func2<-TT;-TT;Ljava/lang/Boolean;>;)Lrx/Observable<Ljava/lang/Boolean;>;", "switchOnNext", "switchOnNextDelayError", "timer", (void *)&RxObservable__Annotations$1, (void *)&RxObservable__Annotations$2, "using", "LRxFunctionsFunc0;LRxFunctionsFunc1;LRxFunctionsAction1;", "<T:Ljava/lang/Object;Resource:Ljava/lang/Object;>(Lrx/functions/Func0<TResource;>;Lrx/functions/Func1<-TResource;+Lrx/Observable<+TT;>;>;Lrx/functions/Action1<-TResource;>;)Lrx/Observable<TT;>;", "LRxFunctionsFunc0;LRxFunctionsFunc1;LRxFunctionsAction1;Z", "<T:Ljava/lang/Object;Resource:Ljava/lang/Object;>(Lrx/functions/Func0<TResource;>;Lrx/functions/Func1<-TResource;+Lrx/Observable<+TT;>;>;Lrx/functions/Action1<-TResource;>;Z)Lrx/Observable<TT;>;", "zip", "<R:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lrx/Observable<*>;>;Lrx/functions/FuncN<+TR;>;)Lrx/Observable<TR;>;", "[LRxObservable;LRxFunctionsFuncN;", "<R:Ljava/lang/Object;>([Lrx/Observable<*>;Lrx/functions/FuncN<+TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxFunctionsFuncN;", "<R:Ljava/lang/Object;>(Lrx/Observable<+Lrx/Observable<*>;>;Lrx/functions/FuncN<+TR;>;)Lrx/Observable<TR;>;", "all", "(Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;)Lrx/Observable<Ljava/lang/Boolean;>;", "ambWith", "(Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "()Lrx/Observable<TT;>;", "buffer", "<TClosing:Ljava/lang/Object;>(Lrx/functions/Func0<+Lrx/Observable<+TTClosing;>;>;)Lrx/Observable<Ljava/util/List<TT;>;>;", "I", "(I)Lrx/Observable<Ljava/util/List<TT;>;>;", "(II)Lrx/Observable<Ljava/util/List<TT;>;>;", "(JJLjava/util/concurrent/TimeUnit;)Lrx/Observable<Ljava/util/List<TT;>;>;", "(JJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<Ljava/util/List<TT;>;>;", "(JLjava/util/concurrent/TimeUnit;)Lrx/Observable<Ljava/util/List<TT;>;>;", "JLJavaUtilConcurrentTimeUnit;I", "(JLjava/util/concurrent/TimeUnit;I)Lrx/Observable<Ljava/util/List<TT;>;>;", "JLJavaUtilConcurrentTimeUnit;ILRxScheduler;", "(JLjava/util/concurrent/TimeUnit;ILrx/Scheduler;)Lrx/Observable<Ljava/util/List<TT;>;>;", "(JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<Ljava/util/List<TT;>;>;", "LRxObservable;LRxFunctionsFunc1;", "<TOpening:Ljava/lang/Object;TClosing:Ljava/lang/Object;>(Lrx/Observable<+TTOpening;>;Lrx/functions/Func1<-TTOpening;+Lrx/Observable<+TTClosing;>;>;)Lrx/Observable<Ljava/util/List<TT;>;>;", "<B:Ljava/lang/Object;>(Lrx/Observable<TB;>;)Lrx/Observable<Ljava/util/List<TT;>;>;", "<B:Ljava/lang/Object;>(Lrx/Observable<TB;>;I)Lrx/Observable<Ljava/util/List<TT;>;>;", "cache", "(I)Lrx/Observable<TT;>;", (void *)&RxObservable__Annotations$3, "cacheWithInitialCapacity", "cast", "LIOSClass;", "<R:Ljava/lang/Object;>(Ljava/lang/Class<TR;>;)Lrx/Observable<TR;>;", "collect", "LRxFunctionsFunc0;LRxFunctionsAction2;", "<R:Ljava/lang/Object;>(Lrx/functions/Func0<TR;>;Lrx/functions/Action2<TR;-TT;>;)Lrx/Observable<TR;>;", "concatMap", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<+TR;>;>;)Lrx/Observable<TR;>;", "concatMapDelayError", "concatMapIterable", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Ljava/lang/Iterable<+TR;>;>;)Lrx/Observable<TR;>;", "concatWith", "contains", "(Ljava/lang/Object;)Lrx/Observable<Ljava/lang/Boolean;>;", "()Lrx/Observable<Ljava/lang/Integer;>;", "()Lrx/Observable<Ljava/lang/Long;>;", "debounce", "<U:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<TU;>;>;)Lrx/Observable<TT;>;", "(JLjava/util/concurrent/TimeUnit;)Lrx/Observable<TT;>;", "(JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<TT;>;", "defaultIfEmpty", "(TT;)Lrx/Observable<TT;>;", "switchIfEmpty", "delay", "LRxFunctionsFunc0;LRxFunctionsFunc1;", "<U:Ljava/lang/Object;V:Ljava/lang/Object;>(Lrx/functions/Func0<+Lrx/Observable<TU;>;>;Lrx/functions/Func1<-TT;+Lrx/Observable<TV;>;>;)Lrx/Observable<TT;>;", "delaySubscription", "<U:Ljava/lang/Object;>(Lrx/functions/Func0<+Lrx/Observable<TU;>;>;)Lrx/Observable<TT;>;", "<U:Ljava/lang/Object;>(Lrx/Observable<TU;>;)Lrx/Observable<TT;>;", "<T2:Ljava/lang/Object;>()Lrx/Observable<TT2;>;", "distinct", "<U:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TU;>;)Lrx/Observable<TT;>;", "distinctUntilChanged", "LRxFunctionsFunc2;", "(Lrx/functions/Func2<-TT;-TT;Ljava/lang/Boolean;>;)Lrx/Observable<TT;>;", "doOnCompleted", "LRxFunctionsAction0;", "(Lrx/functions/Action0;)Lrx/Observable<TT;>;", "doOnEach", "LRxFunctionsAction1;", "(Lrx/functions/Action1<Lrx/Notification<-TT;>;>;)Lrx/Observable<TT;>;", "LRxObserver;", "(Lrx/Observer<-TT;>;)Lrx/Observable<TT;>;", "doOnError", "(Lrx/functions/Action1<-Ljava/lang/Throwable;>;)Lrx/Observable<TT;>;", "doOnNext", "(Lrx/functions/Action1<-TT;>;)Lrx/Observable<TT;>;", "doOnRequest", "(Lrx/functions/Action1<-Ljava/lang/Long;>;)Lrx/Observable<TT;>;", "doOnSubscribe", "doOnTerminate", "doOnUnsubscribe", "concatEager", "concatMapEager", "LRxFunctionsFunc1;I", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<+TR;>;>;I)Lrx/Observable<TR;>;", "LRxFunctionsFunc1;II", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<+TR;>;>;II)Lrx/Observable<TR;>;", "elementAt", "elementAtOrDefault", "ILNSObject;", "(ITT;)Lrx/Observable<TT;>;", "exists", "filter", "(Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;)Lrx/Observable<TT;>;", "finallyDo", (void *)&RxObservable__Annotations$4, "doAfterTerminate", "first", "firstOrDefault", "LNSObject;LRxFunctionsFunc1;", "(TT;Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;)Lrx/Observable<TT;>;", "flatMap", "LRxFunctionsFunc1;LRxFunctionsFunc1;LRxFunctionsFunc0;", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<+TR;>;>;Lrx/functions/Func1<-Ljava/lang/Throwable;+Lrx/Observable<+TR;>;>;Lrx/functions/Func0<+Lrx/Observable<+TR;>;>;)Lrx/Observable<TR;>;", "LRxFunctionsFunc1;LRxFunctionsFunc1;LRxFunctionsFunc0;I", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<+TR;>;>;Lrx/functions/Func1<-Ljava/lang/Throwable;+Lrx/Observable<+TR;>;>;Lrx/functions/Func0<+Lrx/Observable<+TR;>;>;I)Lrx/Observable<TR;>;", "LRxFunctionsFunc1;LRxFunctionsFunc2;", "<U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<+TU;>;>;Lrx/functions/Func2<-TT;-TU;+TR;>;)Lrx/Observable<TR;>;", "LRxFunctionsFunc1;LRxFunctionsFunc2;I", "<U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<+TU;>;>;Lrx/functions/Func2<-TT;-TU;+TR;>;I)Lrx/Observable<TR;>;", "flatMapIterable", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Ljava/lang/Iterable<+TR;>;>;I)Lrx/Observable<TR;>;", "<U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Ljava/lang/Iterable<+TU;>;>;Lrx/functions/Func2<-TT;-TU;+TR;>;)Lrx/Observable<TR;>;", "<U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Ljava/lang/Iterable<+TU;>;>;Lrx/functions/Func2<-TT;-TU;+TR;>;I)Lrx/Observable<TR;>;", "forEach", "(Lrx/functions/Action1<-TT;>;)V", "LRxFunctionsAction1;LRxFunctionsAction1;", "(Lrx/functions/Action1<-TT;>;Lrx/functions/Action1<Ljava/lang/Throwable;>;)V", "LRxFunctionsAction1;LRxFunctionsAction1;LRxFunctionsAction0;", "(Lrx/functions/Action1<-TT;>;Lrx/functions/Action1<Ljava/lang/Throwable;>;Lrx/functions/Action0;)V", "groupBy", "LRxFunctionsFunc1;LRxFunctionsFunc1;", "<K:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TK;>;Lrx/functions/Func1<-TT;+TR;>;)Lrx/Observable<Lrx/observables/GroupedObservable<TK;TR;>;>;", "LRxFunctionsFunc1;LRxFunctionsFunc1;LRxFunctionsFunc1;", "<K:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TK;>;Lrx/functions/Func1<-TT;+TR;>;Lrx/functions/Func1<Lrx/functions/Action1<TK;>;Ljava/util/Map<TK;Ljava/lang/Object;>;>;)Lrx/Observable<Lrx/observables/GroupedObservable<TK;TR;>;>;", "<K:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TK;>;)Lrx/Observable<Lrx/observables/GroupedObservable<TK;TT;>;>;", "groupJoin", "LRxObservable;LRxFunctionsFunc1;LRxFunctionsFunc1;LRxFunctionsFunc2;", "<T2:Ljava/lang/Object;D1:Ljava/lang/Object;D2:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<TT2;>;Lrx/functions/Func1<-TT;+Lrx/Observable<TD1;>;>;Lrx/functions/Func1<-TT2;+Lrx/Observable<TD2;>;>;Lrx/functions/Func2<-TT;-Lrx/Observable<TT2;>;+TR;>;)Lrx/Observable<TR;>;", "()Lrx/Observable<Ljava/lang/Boolean;>;", "join", "<TRight:Ljava/lang/Object;TLeftDuration:Ljava/lang/Object;TRightDuration:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<TTRight;>;Lrx/functions/Func1<TT;Lrx/Observable<TTLeftDuration;>;>;Lrx/functions/Func1<TTRight;Lrx/Observable<TTRightDuration;>;>;Lrx/functions/Func2<TT;TTRight;TR;>;)Lrx/Observable<TR;>;", "last", "lastOrDefault", "limit", "map", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TR;>;)Lrx/Observable<TR;>;", "mapNotification", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TR;>;Lrx/functions/Func1<-Ljava/lang/Throwable;+TR;>;Lrx/functions/Func0<+TR;>;)Lrx/Observable<TR;>;", "()Lrx/Observable<Lrx/Notification<TT;>;>;", "mergeWith", "observeOn", "LRxScheduler;", "(Lrx/Scheduler;)Lrx/Observable<TT;>;", "LRxScheduler;I", "(Lrx/Scheduler;I)Lrx/Observable<TT;>;", "LRxScheduler;Z", "(Lrx/Scheduler;Z)Lrx/Observable<TT;>;", "LRxScheduler;ZI", "(Lrx/Scheduler;ZI)Lrx/Observable<TT;>;", "ofType", "onBackpressureBuffer", "J", "(J)Lrx/Observable<TT;>;", "JLRxFunctionsAction0;", "(JLrx/functions/Action0;)Lrx/Observable<TT;>;", "JLRxFunctionsAction0;LRxBackpressureOverflow_Strategy;", "(JLrx/functions/Action0;Lrx/BackpressureOverflow$Strategy;)Lrx/Observable<TT;>;", "onBackpressureDrop", "onErrorResumeNext", "(Lrx/functions/Func1<-Ljava/lang/Throwable;+Lrx/Observable<+TT;>;>;)Lrx/Observable<TT;>;", "onErrorReturn", "(Lrx/functions/Func1<-Ljava/lang/Throwable;+TT;>;)Lrx/Observable<TT;>;", "onExceptionResumeNext", "()Lrx/observables/ConnectableObservable<TT;>;", "publish", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;)Lrx/Observable<TR;>;", "rebatchRequests", "reduce", "(Lrx/functions/Func2<TT;TT;TT;>;)Lrx/Observable<TT;>;", "LNSObject;LRxFunctionsFunc2;", "<R:Ljava/lang/Object;>(TR;Lrx/functions/Func2<TR;-TT;TR;>;)Lrx/Observable<TR;>;", "repeat", "JLRxScheduler;", "(JLrx/Scheduler;)Lrx/Observable<TT;>;", "repeatWhen", "LRxFunctionsFunc1;LRxScheduler;", "(Lrx/functions/Func1<-Lrx/Observable<+Ljava/lang/Void;>;+Lrx/Observable<*>;>;Lrx/Scheduler;)Lrx/Observable<TT;>;", "(Lrx/functions/Func1<-Lrx/Observable<+Ljava/lang/Void;>;+Lrx/Observable<*>;>;)Lrx/Observable<TT;>;", "replay", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;I)Lrx/Observable<TR;>;", "LRxFunctionsFunc1;IJLJavaUtilConcurrentTimeUnit;", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;IJLjava/util/concurrent/TimeUnit;)Lrx/Observable<TR;>;", "LRxFunctionsFunc1;IJLJavaUtilConcurrentTimeUnit;LRxScheduler;", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;IJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<TR;>;", "LRxFunctionsFunc1;ILRxScheduler;", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;ILrx/Scheduler;)Lrx/Observable<TR;>;", "LRxFunctionsFunc1;JLJavaUtilConcurrentTimeUnit;", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;JLjava/util/concurrent/TimeUnit;)Lrx/Observable<TR;>;", "LRxFunctionsFunc1;JLJavaUtilConcurrentTimeUnit;LRxScheduler;", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<TR;>;", "<R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;Lrx/Scheduler;)Lrx/Observable<TR;>;", "(I)Lrx/observables/ConnectableObservable<TT;>;", "IJLJavaUtilConcurrentTimeUnit;", "(IJLjava/util/concurrent/TimeUnit;)Lrx/observables/ConnectableObservable<TT;>;", "IJLJavaUtilConcurrentTimeUnit;LRxScheduler;", "(IJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/observables/ConnectableObservable<TT;>;", "ILRxScheduler;", "(ILrx/Scheduler;)Lrx/observables/ConnectableObservable<TT;>;", "(JLjava/util/concurrent/TimeUnit;)Lrx/observables/ConnectableObservable<TT;>;", "(JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/observables/ConnectableObservable<TT;>;", "(Lrx/Scheduler;)Lrx/observables/ConnectableObservable<TT;>;", "retry", "(Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Throwable;Ljava/lang/Boolean;>;)Lrx/Observable<TT;>;", "retryWhen", "(Lrx/functions/Func1<-Lrx/Observable<+Ljava/lang/Throwable;>;+Lrx/Observable<*>;>;)Lrx/Observable<TT;>;", "(Lrx/functions/Func1<-Lrx/Observable<+Ljava/lang/Throwable;>;+Lrx/Observable<*>;>;Lrx/Scheduler;)Lrx/Observable<TT;>;", "sample", "scan", "single", "singleOrDefault", "skip", "skipLast", "skipUntil", "skipWhile", "startWith", "(Lrx/Observable<TT;>;)Lrx/Observable<TT;>;", "(Ljava/lang/Iterable<TT;>;)Lrx/Observable<TT;>;", "(TT;TT;)Lrx/Observable<TT;>;", "(TT;TT;TT;)Lrx/Observable<TT;>;", "(TT;TT;TT;TT;)Lrx/Observable<TT;>;", "(TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "(TT;TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "(TT;TT;TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "(TT;TT;TT;TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "(TT;TT;TT;TT;TT;TT;TT;TT;TT;)Lrx/Observable<TT;>;", "subscribe", "(Lrx/functions/Action1<-TT;>;)Lrx/Subscription;", "(Lrx/functions/Action1<-TT;>;Lrx/functions/Action1<Ljava/lang/Throwable;>;)Lrx/Subscription;", "(Lrx/functions/Action1<-TT;>;Lrx/functions/Action1<Ljava/lang/Throwable;>;Lrx/functions/Action0;)Lrx/Subscription;", "(Lrx/Observer<-TT;>;)Lrx/Subscription;", "unsafeSubscribe", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)Lrx/Subscription;", "LRxSubscriber;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Subscriber<-TT;>;Lrx/Observable<TT;>;)Lrx/Subscription;", "subscribeOn", "switchMap", "switchMapDelayError", "take", "takeFirst", "takeLast", "(IJLjava/util/concurrent/TimeUnit;)Lrx/Observable<TT;>;", "(IJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<TT;>;", "takeLastBuffer", "(IJLjava/util/concurrent/TimeUnit;)Lrx/Observable<Ljava/util/List<TT;>;>;", "(IJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<Ljava/util/List<TT;>;>;", "takeUntil", "<E:Ljava/lang/Object;>(Lrx/Observable<+TE;>;)Lrx/Observable<TT;>;", "takeWhile", "throttleFirst", "throttleLast", "throttleWithTimeout", "()Lrx/Observable<Lrx/schedulers/TimeInterval<TT;>;>;", "timeInterval", "(Lrx/Scheduler;)Lrx/Observable<Lrx/schedulers/TimeInterval<TT;>;>;", "timeout", "LRxFunctionsFunc0;LRxFunctionsFunc1;LRxObservable;", "<U:Ljava/lang/Object;V:Ljava/lang/Object;>(Lrx/functions/Func0<+Lrx/Observable<TU;>;>;Lrx/functions/Func1<-TT;+Lrx/Observable<TV;>;>;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "<V:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<TV;>;>;)Lrx/Observable<TT;>;", "LRxFunctionsFunc1;LRxObservable;", "<V:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+Lrx/Observable<TV;>;>;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "JLJavaUtilConcurrentTimeUnit;LRxObservable;", "(JLjava/util/concurrent/TimeUnit;Lrx/Observable<+TT;>;)Lrx/Observable<TT;>;", "JLJavaUtilConcurrentTimeUnit;LRxObservable;LRxScheduler;", "(JLjava/util/concurrent/TimeUnit;Lrx/Observable<+TT;>;Lrx/Scheduler;)Lrx/Observable<TT;>;", "()Lrx/Observable<Lrx/schedulers/Timestamped<TT;>;>;", "timestamp", "(Lrx/Scheduler;)Lrx/Observable<Lrx/schedulers/Timestamped<TT;>;>;", "()Lrx/observables/BlockingObservable<TT;>;", "()Lrx/Observable<Ljava/util/List<TT;>;>;", "toMap", "<K:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TK;>;)Lrx/Observable<Ljava/util/Map<TK;TT;>;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TK;>;Lrx/functions/Func1<-TT;+TV;>;)Lrx/Observable<Ljava/util/Map<TK;TV;>;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TK;>;Lrx/functions/Func1<-TT;+TV;>;Lrx/functions/Func0<+Ljava/util/Map<TK;TV;>;>;)Lrx/Observable<Ljava/util/Map<TK;TV;>;>;", "toMultimap", "<K:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TK;>;)Lrx/Observable<Ljava/util/Map<TK;Ljava/util/Collection<TT;>;>;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TK;>;Lrx/functions/Func1<-TT;+TV;>;)Lrx/Observable<Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TK;>;Lrx/functions/Func1<-TT;+TV;>;Lrx/functions/Func0<+Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;>;)Lrx/Observable<Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;>;", "LRxFunctionsFunc1;LRxFunctionsFunc1;LRxFunctionsFunc0;LRxFunctionsFunc1;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lrx/functions/Func1<-TT;+TK;>;Lrx/functions/Func1<-TT;+TV;>;Lrx/functions/Func0<+Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;>;Lrx/functions/Func1<-TK;+Ljava/util/Collection<TV;>;>;)Lrx/Observable<Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;>;", "toSortedList", "(Lrx/functions/Func2<-TT;-TT;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/util/List<TT;>;>;", "LRxFunctionsFunc2;I", "(Lrx/functions/Func2<-TT;-TT;Ljava/lang/Integer;>;I)Lrx/Observable<Ljava/util/List<TT;>;>;", "sorted", "(Lrx/functions/Func2<-TT;-TT;Ljava/lang/Integer;>;)Lrx/Observable<TT;>;", "unsubscribeOn", "withLatestFrom", "LRxObservable;LRxFunctionsFunc2;", "<U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<+TU;>;Lrx/functions/Func2<-TT;-TU;+TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxFunctionsFunc3;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<TT1;>;Lrx/Observable<TT2;>;Lrx/functions/Func3<-TT;-TT1;-TT2;TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc4;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<TT1;>;Lrx/Observable<TT2;>;Lrx/Observable<TT3;>;Lrx/functions/Func4<-TT;-TT1;-TT2;-TT3;TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc5;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<TT1;>;Lrx/Observable<TT2;>;Lrx/Observable<TT3;>;Lrx/Observable<TT4;>;Lrx/functions/Func5<-TT;-TT1;-TT2;-TT3;-TT4;TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc6;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<TT1;>;Lrx/Observable<TT2;>;Lrx/Observable<TT3;>;Lrx/Observable<TT4;>;Lrx/Observable<TT5;>;Lrx/functions/Func6<-TT;-TT1;-TT2;-TT3;-TT4;-TT5;TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc7;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<TT1;>;Lrx/Observable<TT2;>;Lrx/Observable<TT3;>;Lrx/Observable<TT4;>;Lrx/Observable<TT5;>;Lrx/Observable<TT6;>;Lrx/functions/Func7<-TT;-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc8;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<TT1;>;Lrx/Observable<TT2;>;Lrx/Observable<TT3;>;Lrx/Observable<TT4;>;Lrx/Observable<TT5;>;Lrx/Observable<TT6;>;Lrx/Observable<TT7;>;Lrx/functions/Func8<-TT;-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;TR;>;)Lrx/Observable<TR;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxFunctionsFunc9;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;T8:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<TT1;>;Lrx/Observable<TT2;>;Lrx/Observable<TT3;>;Lrx/Observable<TT4;>;Lrx/Observable<TT5;>;Lrx/Observable<TT6;>;Lrx/Observable<TT7;>;Lrx/Observable<TT8;>;Lrx/functions/Func9<-TT;-TT1;-TT2;-TT3;-TT4;-TT5;-TT6;-TT7;-TT8;TR;>;)Lrx/Observable<TR;>;", "<R:Ljava/lang/Object;>([Lrx/Observable<*>;Lrx/functions/FuncN<TR;>;)Lrx/Observable<TR;>;", "<R:Ljava/lang/Object;>(Ljava/lang/Iterable<Lrx/Observable<*>;>;Lrx/functions/FuncN<TR;>;)Lrx/Observable<TR;>;", "window", "<TClosing:Ljava/lang/Object;>(Lrx/functions/Func0<+Lrx/Observable<+TTClosing;>;>;)Lrx/Observable<Lrx/Observable<TT;>;>;", "(I)Lrx/Observable<Lrx/Observable<TT;>;>;", "(II)Lrx/Observable<Lrx/Observable<TT;>;>;", "(JJLjava/util/concurrent/TimeUnit;)Lrx/Observable<Lrx/Observable<TT;>;>;", "(JJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<Lrx/Observable<TT;>;>;", "JJLJavaUtilConcurrentTimeUnit;ILRxScheduler;", "(JJLjava/util/concurrent/TimeUnit;ILrx/Scheduler;)Lrx/Observable<Lrx/Observable<TT;>;>;", "(JLjava/util/concurrent/TimeUnit;)Lrx/Observable<Lrx/Observable<TT;>;>;", "(JLjava/util/concurrent/TimeUnit;I)Lrx/Observable<Lrx/Observable<TT;>;>;", "(JLjava/util/concurrent/TimeUnit;ILrx/Scheduler;)Lrx/Observable<Lrx/Observable<TT;>;>;", "(JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/Observable<Lrx/Observable<TT;>;>;", "<TOpening:Ljava/lang/Object;TClosing:Ljava/lang/Object;>(Lrx/Observable<+TTOpening;>;Lrx/functions/Func1<-TTOpening;+Lrx/Observable<+TTClosing;>;>;)Lrx/Observable<Lrx/Observable<TT;>;>;", "<U:Ljava/lang/Object;>(Lrx/Observable<TU;>;)Lrx/Observable<Lrx/Observable<TT;>;>;", "zipWith", "LJavaLangIterable;LRxFunctionsFunc2;", "<T2:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/lang/Iterable<+TT2;>;Lrx/functions/Func2<-TT;-TT2;+TR;>;)Lrx/Observable<TR;>;", "<T2:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable<+TT2;>;Lrx/functions/Func2<-TT;-TT2;+TR;>;)Lrx/Observable<TR;>;", "Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable_OnSubscribe;LRxObservable_Operator;LRxObservable_OnSubscribeExtend;LRxObservable_Transformer;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxObservable = { "Observable", "rx", ptrTable, methods, fields, 7, 0x1, 399, 1, -1, 477, -1, 478, -1 };
  return &_RxObservable;
}

@end

void RxObservable_initWithRxObservable_OnSubscribe_(RxObservable *self, id<RxObservable_OnSubscribe> f) {
  NSObject_init(self);
  JreStrongAssign(&self->onSubscribe_, f);
}

RxObservable *new_RxObservable_initWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> f) {
  J2OBJC_NEW_IMPL(RxObservable, initWithRxObservable_OnSubscribe_, f)
}

RxObservable *create_RxObservable_initWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> f) {
  J2OBJC_CREATE_IMPL(RxObservable, initWithRxObservable_OnSubscribe_, f)
}

RxObservable *RxObservable_createWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> f) {
  RxObservable_initialize();
  return create_RxObservable_initWithRxObservable_OnSubscribe_(RxPluginsRxJavaHooks_onCreateWithRxObservable_OnSubscribe_(f));
}

RxObservable *RxObservable_createWithRxObservablesSyncOnSubscribe_(RxObservablesSyncOnSubscribe *syncOnSubscribe) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(syncOnSubscribe);
}

RxObservable *RxObservable_createWithRxObservablesAsyncOnSubscribe_(RxObservablesAsyncOnSubscribe *asyncOnSubscribe) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(asyncOnSubscribe);
}

RxObservable *RxObservable_liftWithRxObservable_Operator_(RxObservable *self, id<RxObservable_Operator> operator_) {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeLift_initWithRxObservable_OnSubscribe_withRxObservable_Operator_(self->onSubscribe_, operator_));
}

RxObservable *RxObservable_ambWithJavaLangIterable_(id<JavaLangIterable> sources) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources));
}

RxObservable *RxObservable_ambWithRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_(o1, o2));
}

RxObservable *RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_(o1, o2, o3));
}

RxObservable *RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4));
}

RxObservable *RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5));
}

RxObservable *RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6));
}

RxObservable *RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7));
}

RxObservable *RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7, o8));
}

RxObservable *RxObservable_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8, RxObservable *o9) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7, o8, o9));
}

RxObservable *RxObservable_combineLatestWithRxObservable_withRxObservable_withRxFunctionsFunc2_(RxObservable *o1, RxObservable *o2, id<RxFunctionsFunc2> combineFunction) {
  RxObservable_initialize();
  return RxObservable_combineLatestWithJavaUtilList_withRxFunctionsFuncN_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2 } count:2 type:RxObservable_class_()]), RxFunctionsFunctions_fromFuncWithRxFunctionsFunc2_(combineFunction));
}

RxObservable *RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc3_(RxObservable *o1, RxObservable *o2, RxObservable *o3, id<RxFunctionsFunc3> combineFunction) {
  RxObservable_initialize();
  return RxObservable_combineLatestWithJavaUtilList_withRxFunctionsFuncN_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3 } count:3 type:RxObservable_class_()]), RxFunctionsFunctions_fromFuncWithRxFunctionsFunc3_(combineFunction));
}

RxObservable *RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc4_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, id<RxFunctionsFunc4> combineFunction) {
  RxObservable_initialize();
  return RxObservable_combineLatestWithJavaUtilList_withRxFunctionsFuncN_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4 } count:4 type:RxObservable_class_()]), RxFunctionsFunctions_fromFuncWithRxFunctionsFunc4_(combineFunction));
}

RxObservable *RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc5_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, id<RxFunctionsFunc5> combineFunction) {
  RxObservable_initialize();
  return RxObservable_combineLatestWithJavaUtilList_withRxFunctionsFuncN_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5 } count:5 type:RxObservable_class_()]), RxFunctionsFunctions_fromFuncWithRxFunctionsFunc5_(combineFunction));
}

RxObservable *RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc6_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, id<RxFunctionsFunc6> combineFunction) {
  RxObservable_initialize();
  return RxObservable_combineLatestWithJavaUtilList_withRxFunctionsFuncN_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6 } count:6 type:RxObservable_class_()]), RxFunctionsFunctions_fromFuncWithRxFunctionsFunc6_(combineFunction));
}

RxObservable *RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc7_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, id<RxFunctionsFunc7> combineFunction) {
  RxObservable_initialize();
  return RxObservable_combineLatestWithJavaUtilList_withRxFunctionsFuncN_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7 } count:7 type:RxObservable_class_()]), RxFunctionsFunctions_fromFuncWithRxFunctionsFunc7_(combineFunction));
}

RxObservable *RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc8_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8, id<RxFunctionsFunc8> combineFunction) {
  RxObservable_initialize();
  return RxObservable_combineLatestWithJavaUtilList_withRxFunctionsFuncN_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7, o8 } count:8 type:RxObservable_class_()]), RxFunctionsFunctions_fromFuncWithRxFunctionsFunc8_(combineFunction));
}

RxObservable *RxObservable_combineLatestWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc9_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8, RxObservable *o9, id<RxFunctionsFunc9> combineFunction) {
  RxObservable_initialize();
  return RxObservable_combineLatestWithJavaUtilList_withRxFunctionsFuncN_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7, o8, o9 } count:9 type:RxObservable_class_()]), RxFunctionsFunctions_fromFuncWithRxFunctionsFunc9_(combineFunction));
}

RxObservable *RxObservable_combineLatestWithJavaUtilList_withRxFunctionsFuncN_(id<JavaUtilList> sources, id<RxFunctionsFuncN> combineFunction) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeCombineLatest_initWithJavaLangIterable_withRxFunctionsFuncN_(sources, combineFunction));
}

RxObservable *RxObservable_combineLatestWithJavaLangIterable_withRxFunctionsFuncN_(id<JavaLangIterable> sources, id<RxFunctionsFuncN> combineFunction) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeCombineLatest_initWithJavaLangIterable_withRxFunctionsFuncN_(sources, combineFunction));
}

RxObservable *RxObservable_combineLatestDelayErrorWithJavaLangIterable_withRxFunctionsFuncN_(id<JavaLangIterable> sources, id<RxFunctionsFuncN> combineFunction) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeCombineLatest_initWithRxObservableArray_withJavaLangIterable_withRxFunctionsFuncN_withInt_withBoolean_(nil, sources, combineFunction, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE), true));
}

RxObservable *RxObservable_concatWithJavaLangIterable_(id<JavaLangIterable> sequences) {
  RxObservable_initialize();
  return RxObservable_concatWithRxObservable_(RxObservable_fromWithJavaLangIterable_(sequences));
}

RxObservable *RxObservable_concatWithRxObservable_(RxObservable *observables) {
  RxObservable_initialize();
  return RxObservable_concatMapWithRxFunctionsFunc1_(nil_chk(observables), RxInternalUtilUtilityFunctions_identity());
}

RxObservable *RxObservable_concatWithRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2) {
  RxObservable_initialize();
  return RxObservable_concatWithRxObservable_(RxObservable_justWithId_withId_(t1, t2));
}

RxObservable *RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3) {
  RxObservable_initialize();
  return RxObservable_concatWithRxObservable_(RxObservable_justWithId_withId_withId_(t1, t2, t3));
}

RxObservable *RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4) {
  RxObservable_initialize();
  return RxObservable_concatWithRxObservable_(RxObservable_justWithId_withId_withId_withId_(t1, t2, t3, t4));
}

RxObservable *RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5) {
  RxObservable_initialize();
  return RxObservable_concatWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_(t1, t2, t3, t4, t5));
}

RxObservable *RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6) {
  RxObservable_initialize();
  return RxObservable_concatWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6));
}

RxObservable *RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7) {
  RxObservable_initialize();
  return RxObservable_concatWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7));
}

RxObservable *RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7, RxObservable *t8) {
  RxObservable_initialize();
  return RxObservable_concatWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8));
}

RxObservable *RxObservable_concatWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7, RxObservable *t8, RxObservable *t9) {
  RxObservable_initialize();
  return RxObservable_concatWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8, t9));
}

RxObservable *RxObservable_concatDelayErrorWithRxObservable_(RxObservable *sources) {
  RxObservable_initialize();
  return RxObservable_concatMapDelayErrorWithRxFunctionsFunc1_(nil_chk(sources), RxInternalUtilUtilityFunctions_identity());
}

RxObservable *RxObservable_concatDelayErrorWithJavaLangIterable_(id<JavaLangIterable> sources) {
  RxObservable_initialize();
  return RxObservable_concatDelayErrorWithRxObservable_(RxObservable_fromWithJavaLangIterable_(sources));
}

RxObservable *RxObservable_concatDelayErrorWithRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2) {
  RxObservable_initialize();
  return RxObservable_concatDelayErrorWithRxObservable_(RxObservable_justWithId_withId_(t1, t2));
}

RxObservable *RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3) {
  RxObservable_initialize();
  return RxObservable_concatDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_(t1, t2, t3));
}

RxObservable *RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4) {
  RxObservable_initialize();
  return RxObservable_concatDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_(t1, t2, t3, t4));
}

RxObservable *RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5) {
  RxObservable_initialize();
  return RxObservable_concatDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_(t1, t2, t3, t4, t5));
}

RxObservable *RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6) {
  RxObservable_initialize();
  return RxObservable_concatDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6));
}

RxObservable *RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7) {
  RxObservable_initialize();
  return RxObservable_concatDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7));
}

RxObservable *RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7, RxObservable *t8) {
  RxObservable_initialize();
  return RxObservable_concatDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8));
}

RxObservable *RxObservable_concatDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7, RxObservable *t8, RxObservable *t9) {
  RxObservable_initialize();
  return RxObservable_concatDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8, t9));
}

RxObservable *RxObservable_deferWithRxFunctionsFunc0_(id<RxFunctionsFunc0> observableFactory) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDefer_initWithRxFunctionsFunc0_(observableFactory));
}

RxObservable *RxObservable_empty() {
  RxObservable_initialize();
  return RxInternalOperatorsEmptyObservableHolder_instance();
}

RxObservable *RxObservable_errorWithNSException_(NSException *exception) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeThrow_initWithNSException_(exception));
}

RxObservable *RxObservable_fromWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeToObservableFuture_toObservableFutureWithJavaUtilConcurrentFuture_(future));
}

RxObservable *RxObservable_fromWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(id<JavaUtilConcurrentFuture> future, jlong timeout, JavaUtilConcurrentTimeUnit *unit) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeToObservableFuture_toObservableFutureWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(future, timeout, unit));
}

RxObservable *RxObservable_fromWithJavaUtilConcurrentFuture_withRxScheduler_(id<JavaUtilConcurrentFuture> future, RxScheduler *scheduler) {
  RxObservable_initialize();
  RxObservable *o = RxObservable_createWithRxObservable_OnSubscribe_(RxInternalOperatorsOnSubscribeToObservableFuture_toObservableFutureWithJavaUtilConcurrentFuture_(future));
  return RxObservable_subscribeOnWithRxScheduler_(nil_chk(o), scheduler);
}

RxObservable *RxObservable_fromWithJavaLangIterable_(id<JavaLangIterable> iterable) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeFromIterable_initWithJavaLangIterable_(iterable));
}

RxObservable *RxObservable_fromWithNSObjectArray_(IOSObjectArray *array) {
  RxObservable_initialize();
  jint n = ((IOSObjectArray *) nil_chk(array))->size_;
  if (n == 0) {
    return RxObservable_empty();
  }
  else if (n == 1) {
    return RxObservable_justWithId_(IOSObjectArray_Get(array, 0));
  }
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeFromArray_initWithNSObjectArray_(array));
}

RxObservable *RxObservable_fromEmitterWithRxFunctionsAction1_withRxAsyncEmitter_BackpressureMode_(id<RxFunctionsAction1> emitter, RxAsyncEmitter_BackpressureMode *backpressure) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeFromAsyncEmitter_initWithRxFunctionsAction1_withRxAsyncEmitter_BackpressureMode_(emitter, backpressure));
}

RxObservable *RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(id<RxFunctionsAction1> emitter, RxEmitter_BackpressureMode *backpressure) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeFromEmitter_initWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(emitter, backpressure));
}

RxObservable *RxObservable_fromCallableWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> func) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeFromCallable_initWithJavaUtilConcurrentCallable_(func));
}

RxObservable *RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_(jlong interval, JavaUtilConcurrentTimeUnit *unit) {
  RxObservable_initialize();
  return RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(interval, interval, unit, RxSchedulersSchedulers_computation());
}

RxObservable *RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong interval, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  RxObservable_initialize();
  return RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(interval, interval, unit, scheduler);
}

RxObservable *RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_(jlong initialDelay, jlong period, JavaUtilConcurrentTimeUnit *unit) {
  RxObservable_initialize();
  return RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(initialDelay, period, unit, RxSchedulersSchedulers_computation());
}

RxObservable *RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong initialDelay, jlong period, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeTimerPeriodically_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(initialDelay, period, unit, scheduler));
}

RxObservable *RxObservable_justWithId_(id value) {
  RxObservable_initialize();
  return RxInternalUtilScalarSynchronousObservable_createWithId_(value);
}

RxObservable *RxObservable_justWithId_withId_(id t1, id t2) {
  RxObservable_initialize();
  return RxObservable_fromWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2 } count:2 type:NSObject_class_()]);
}

RxObservable *RxObservable_justWithId_withId_withId_(id t1, id t2, id t3) {
  RxObservable_initialize();
  return RxObservable_fromWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3 } count:3 type:NSObject_class_()]);
}

RxObservable *RxObservable_justWithId_withId_withId_withId_(id t1, id t2, id t3, id t4) {
  RxObservable_initialize();
  return RxObservable_fromWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4 } count:4 type:NSObject_class_()]);
}

RxObservable *RxObservable_justWithId_withId_withId_withId_withId_(id t1, id t2, id t3, id t4, id t5) {
  RxObservable_initialize();
  return RxObservable_fromWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5 } count:5 type:NSObject_class_()]);
}

RxObservable *RxObservable_justWithId_withId_withId_withId_withId_withId_(id t1, id t2, id t3, id t4, id t5, id t6) {
  RxObservable_initialize();
  return RxObservable_fromWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5, t6 } count:6 type:NSObject_class_()]);
}

RxObservable *RxObservable_justWithId_withId_withId_withId_withId_withId_withId_(id t1, id t2, id t3, id t4, id t5, id t6, id t7) {
  RxObservable_initialize();
  return RxObservable_fromWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5, t6, t7 } count:7 type:NSObject_class_()]);
}

RxObservable *RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_(id t1, id t2, id t3, id t4, id t5, id t6, id t7, id t8) {
  RxObservable_initialize();
  return RxObservable_fromWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5, t6, t7, t8 } count:8 type:NSObject_class_()]);
}

RxObservable *RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_withId_(id t1, id t2, id t3, id t4, id t5, id t6, id t7, id t8, id t9) {
  RxObservable_initialize();
  return RxObservable_fromWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5, t6, t7, t8, t9 } count:9 type:NSObject_class_()]);
}

RxObservable *RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_withId_withId_(id t1, id t2, id t3, id t4, id t5, id t6, id t7, id t8, id t9, id t10) {
  RxObservable_initialize();
  return RxObservable_fromWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5, t6, t7, t8, t9, t10 } count:10 type:NSObject_class_()]);
}

RxObservable *RxObservable_mergeWithJavaLangIterable_(id<JavaLangIterable> sequences) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservable_(RxObservable_fromWithJavaLangIterable_(sequences));
}

RxObservable *RxObservable_mergeWithJavaLangIterable_withInt_(id<JavaLangIterable> sequences, jint maxConcurrent) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservable_withInt_(RxObservable_fromWithJavaLangIterable_(sequences), maxConcurrent);
}

RxObservable *RxObservable_mergeWithRxObservable_(RxObservable *source) {
  RxObservable_initialize();
  if ([((RxObservable *) nil_chk(source)) java_getClass] == RxInternalUtilScalarSynchronousObservable_class_()) {
    return [((RxInternalUtilScalarSynchronousObservable *) cast_chk(source, [RxInternalUtilScalarSynchronousObservable class])) scalarFlatMapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()];
  }
  return RxObservable_liftWithRxObservable_Operator_(source, RxInternalOperatorsOperatorMerge_instanceWithBoolean_(false));
}

RxObservable *RxObservable_mergeWithRxObservable_withInt_(RxObservable *source, jint maxConcurrent) {
  RxObservable_initialize();
  if ([((RxObservable *) nil_chk(source)) java_getClass] == RxInternalUtilScalarSynchronousObservable_class_()) {
    return [((RxInternalUtilScalarSynchronousObservable *) cast_chk(source, [RxInternalUtilScalarSynchronousObservable class])) scalarFlatMapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()];
  }
  return RxObservable_liftWithRxObservable_Operator_(source, RxInternalOperatorsOperatorMerge_instanceWithBoolean_withInt_(false, maxConcurrent));
}

RxObservable *RxObservable_mergeWithRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservableArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2 } count:2 type:RxObservable_class_()]);
}

RxObservable *RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservableArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3 } count:3 type:RxObservable_class_()]);
}

RxObservable *RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservableArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4 } count:4 type:RxObservable_class_()]);
}

RxObservable *RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservableArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5 } count:5 type:RxObservable_class_()]);
}

RxObservable *RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservableArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5, t6 } count:6 type:RxObservable_class_()]);
}

RxObservable *RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservableArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5, t6, t7 } count:7 type:RxObservable_class_()]);
}

RxObservable *RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7, RxObservable *t8) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservableArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5, t6, t7, t8 } count:8 type:RxObservable_class_()]);
}

RxObservable *RxObservable_mergeWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7, RxObservable *t8, RxObservable *t9) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservableArray_([IOSObjectArray arrayWithObjects:(id[]){ t1, t2, t3, t4, t5, t6, t7, t8, t9 } count:9 type:RxObservable_class_()]);
}

RxObservable *RxObservable_mergeWithRxObservableArray_(IOSObjectArray *sequences) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservable_(RxObservable_fromWithNSObjectArray_(sequences));
}

RxObservable *RxObservable_mergeWithRxObservableArray_withInt_(IOSObjectArray *sequences, jint maxConcurrent) {
  RxObservable_initialize();
  return RxObservable_mergeWithRxObservable_withInt_(RxObservable_fromWithNSObjectArray_(sequences), maxConcurrent);
}

RxObservable *RxObservable_mergeDelayErrorWithRxObservable_(RxObservable *source) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(source), RxInternalOperatorsOperatorMerge_instanceWithBoolean_(true));
}

RxObservable *RxObservable_mergeDelayErrorWithRxObservable_withInt_(RxObservable *source, jint maxConcurrent) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(source), RxInternalOperatorsOperatorMerge_instanceWithBoolean_withInt_(true, maxConcurrent));
}

RxObservable *RxObservable_mergeDelayErrorWithJavaLangIterable_(id<JavaLangIterable> sequences) {
  RxObservable_initialize();
  return RxObservable_mergeDelayErrorWithRxObservable_(RxObservable_fromWithJavaLangIterable_(sequences));
}

RxObservable *RxObservable_mergeDelayErrorWithJavaLangIterable_withInt_(id<JavaLangIterable> sequences, jint maxConcurrent) {
  RxObservable_initialize();
  return RxObservable_mergeDelayErrorWithRxObservable_withInt_(RxObservable_fromWithJavaLangIterable_(sequences), maxConcurrent);
}

RxObservable *RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2) {
  RxObservable_initialize();
  return RxObservable_mergeDelayErrorWithRxObservable_(RxObservable_justWithId_withId_(t1, t2));
}

RxObservable *RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3) {
  RxObservable_initialize();
  return RxObservable_mergeDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_(t1, t2, t3));
}

RxObservable *RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4) {
  RxObservable_initialize();
  return RxObservable_mergeDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_(t1, t2, t3, t4));
}

RxObservable *RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5) {
  RxObservable_initialize();
  return RxObservable_mergeDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_(t1, t2, t3, t4, t5));
}

RxObservable *RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6) {
  RxObservable_initialize();
  return RxObservable_mergeDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6));
}

RxObservable *RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7) {
  RxObservable_initialize();
  return RxObservable_mergeDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7));
}

RxObservable *RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7, RxObservable *t8) {
  RxObservable_initialize();
  return RxObservable_mergeDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8));
}

RxObservable *RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *t1, RxObservable *t2, RxObservable *t3, RxObservable *t4, RxObservable *t5, RxObservable *t6, RxObservable *t7, RxObservable *t8, RxObservable *t9) {
  RxObservable_initialize();
  return RxObservable_mergeDelayErrorWithRxObservable_(RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_withId_(t1, t2, t3, t4, t5, t6, t7, t8, t9));
}

RxObservable *RxObservable_nest(RxObservable *self) {
  return RxObservable_justWithId_(self);
}

RxObservable *RxObservable_never() {
  RxObservable_initialize();
  return RxInternalOperatorsNeverObservableHolder_instance();
}

RxObservable *RxObservable_rangeWithInt_withInt_(jint start, jint count) {
  RxObservable_initialize();
  if (count < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Count can not be negative");
  }
  if (count == 0) {
    return RxObservable_empty();
  }
  if (start > JavaLangInteger_MAX_VALUE - count + 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"start + count can not exceed Integer.MAX_VALUE");
  }
  if (count == 1) {
    return RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(start));
  }
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeRange_initWithInt_withInt_(start, start + (count - 1)));
}

RxObservable *RxObservable_rangeWithInt_withInt_withRxScheduler_(jint start, jint count, RxScheduler *scheduler) {
  RxObservable_initialize();
  return RxObservable_subscribeOnWithRxScheduler_(nil_chk(RxObservable_rangeWithInt_withInt_(start, count)), scheduler);
}

RxObservable *RxObservable_sequenceEqualWithRxObservable_withRxObservable_(RxObservable *first, RxObservable *second) {
  RxObservable_initialize();
  return RxObservable_sequenceEqualWithRxObservable_withRxObservable_withRxFunctionsFunc2_(first, second, JreLoadStatic(RxInternalUtilInternalObservableUtils, OBJECT_EQUALS));
}

RxObservable *RxObservable_sequenceEqualWithRxObservable_withRxObservable_withRxFunctionsFunc2_(RxObservable *first, RxObservable *second, id<RxFunctionsFunc2> equality) {
  RxObservable_initialize();
  return RxInternalOperatorsOperatorSequenceEqual_sequenceEqualWithRxObservable_withRxObservable_withRxFunctionsFunc2_(first, second, equality);
}

RxObservable *RxObservable_switchOnNextWithRxObservable_(RxObservable *sequenceOfSequences) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(sequenceOfSequences), RxInternalOperatorsOperatorSwitch_instanceWithBoolean_(false));
}

RxObservable *RxObservable_switchOnNextDelayErrorWithRxObservable_(RxObservable *sequenceOfSequences) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(sequenceOfSequences), RxInternalOperatorsOperatorSwitch_instanceWithBoolean_(true));
}

RxObservable *RxObservable_timerWithLong_withLong_withJavaUtilConcurrentTimeUnit_(jlong initialDelay, jlong period, JavaUtilConcurrentTimeUnit *unit) {
  RxObservable_initialize();
  return RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(initialDelay, period, unit, RxSchedulersSchedulers_computation());
}

RxObservable *RxObservable_timerWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong initialDelay, jlong period, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  RxObservable_initialize();
  return RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(initialDelay, period, unit, scheduler);
}

RxObservable *RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_(jlong delay, JavaUtilConcurrentTimeUnit *unit) {
  RxObservable_initialize();
  return RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(delay, unit, RxSchedulersSchedulers_computation());
}

RxObservable *RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeTimerOnce_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(delay, unit, scheduler));
}

RxObservable *RxObservable_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> disposeAction) {
  RxObservable_initialize();
  return RxObservable_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, disposeAction, false);
}

RxObservable *RxObservable_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> disposeAction, jboolean disposeEagerly) {
  RxObservable_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, disposeAction, disposeEagerly));
}

RxObservable *RxObservable_zipWithJavaLangIterable_withRxFunctionsFuncN_(id<JavaLangIterable> ws, id<RxFunctionsFuncN> zipFunction) {
  RxObservable_initialize();
  id<JavaUtilList> os = create_JavaUtilArrayList_init();
  for (RxObservable * __strong o in nil_chk(ws)) {
    [os addWithId:o];
  }
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_justWithId_([os toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[os size] type:RxObservable_class_()]])), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFuncN_(zipFunction));
}

RxObservable *RxObservable_zipWithRxObservableArray_withRxFunctionsFuncN_(IOSObjectArray *ws, id<RxFunctionsFuncN> zipFunction) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_justWithId_(ws)), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFuncN_(zipFunction));
}

RxObservable *RxObservable_zipWithRxObservable_withRxFunctionsFuncN_(RxObservable *ws, id<RxFunctionsFuncN> zipFunction) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_mapWithRxFunctionsFunc1_(nil_chk(RxObservable_toList(nil_chk(ws))), JreLoadStatic(RxInternalUtilInternalObservableUtils, TO_ARRAY))), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFuncN_(zipFunction));
}

RxObservable *RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(RxObservable *o1, RxObservable *o2, id<RxFunctionsFunc2> zipFunction) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_justWithId_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2 } count:2 type:RxObservable_class_()])), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFunc2_(zipFunction));
}

RxObservable *RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc3_(RxObservable *o1, RxObservable *o2, RxObservable *o3, id<RxFunctionsFunc3> zipFunction) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_justWithId_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3 } count:3 type:RxObservable_class_()])), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFunc3_(zipFunction));
}

RxObservable *RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc4_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, id<RxFunctionsFunc4> zipFunction) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_justWithId_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4 } count:4 type:RxObservable_class_()])), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFunc4_(zipFunction));
}

RxObservable *RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc5_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, id<RxFunctionsFunc5> zipFunction) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_justWithId_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5 } count:5 type:RxObservable_class_()])), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFunc5_(zipFunction));
}

RxObservable *RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc6_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, id<RxFunctionsFunc6> zipFunction) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_justWithId_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6 } count:6 type:RxObservable_class_()])), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFunc6_(zipFunction));
}

RxObservable *RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc7_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, id<RxFunctionsFunc7> zipFunction) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_justWithId_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7 } count:7 type:RxObservable_class_()])), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFunc7_(zipFunction));
}

RxObservable *RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc8_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8, id<RxFunctionsFunc8> zipFunction) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_justWithId_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7, o8 } count:8 type:RxObservable_class_()])), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFunc8_(zipFunction));
}

RxObservable *RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc9_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8, RxObservable *o9, id<RxFunctionsFunc9> zipFunction) {
  RxObservable_initialize();
  return RxObservable_liftWithRxObservable_Operator_(nil_chk(RxObservable_justWithId_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7, o8, o9 } count:9 type:RxObservable_class_()])), create_RxInternalOperatorsOperatorZip_initWithRxFunctionsFunc9_(zipFunction));
}

RxObservable *RxObservable_bufferWithInt_withInt_(RxObservable *self, jint count, jint skip) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorBufferWithSize_initWithInt_withInt_(count, skip));
}

RxObservable *RxObservable_bufferWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorBufferWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(timespan, timeshift, unit, JavaLangInteger_MAX_VALUE, scheduler));
}

RxObservable *RxObservable_bufferWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(RxObservable *self, jlong timespan, JavaUtilConcurrentTimeUnit *unit, jint count, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorBufferWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(timespan, timespan, unit, count, scheduler));
}

RxObservable *RxObservable_bufferWithRxObservable_withInt_(RxObservable *self, RxObservable *boundary, jint initialCapacity) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxObservable_withInt_(boundary, initialCapacity));
}

RxObservable *RxObservable_cacheWithInitialCapacityWithInt_(RxObservable *self, jint initialCapacity) {
  return RxInternalOperatorsCachedObservable_fromWithRxObservable_withInt_(self, initialCapacity);
}

RxObservable *RxObservable_castWithIOSClass_(RxObservable *self, IOSClass *klass) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorCast_initWithIOSClass_(klass));
}

RxObservable *RxObservable_concatMapWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> func) {
  if ([self isKindOfClass:[RxInternalUtilScalarSynchronousObservable class]]) {
    RxInternalUtilScalarSynchronousObservable *scalar = (RxInternalUtilScalarSynchronousObservable *) cast_chk(self, [RxInternalUtilScalarSynchronousObservable class]);
    return [scalar scalarFlatMapWithRxFunctionsFunc1:func];
  }
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeConcatMap_initWithRxObservable_withRxFunctionsFunc1_withInt_withInt_(self, func, 2, RxInternalOperatorsOnSubscribeConcatMap_IMMEDIATE));
}

RxObservable *RxObservable_concatMapDelayErrorWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> func) {
  if ([self isKindOfClass:[RxInternalUtilScalarSynchronousObservable class]]) {
    RxInternalUtilScalarSynchronousObservable *scalar = (RxInternalUtilScalarSynchronousObservable *) cast_chk(self, [RxInternalUtilScalarSynchronousObservable class]);
    return [scalar scalarFlatMapWithRxFunctionsFunc1:func];
  }
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeConcatMap_initWithRxObservable_withRxFunctionsFunc1_withInt_withInt_(self, func, 2, RxInternalOperatorsOnSubscribeConcatMap_END));
}

RxObservable *RxObservable_debounceWithLong_withJavaUtilConcurrentTimeUnit_(RxObservable *self, jlong timeout, JavaUtilConcurrentTimeUnit *unit) {
  return RxObservable_debounceWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, timeout, unit, RxSchedulersSchedulers_computation());
}

RxObservable *RxObservable_debounceWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong timeout, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDebounceWithTime_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(timeout, unit, scheduler));
}

RxObservable *RxObservable_switchIfEmptyWithRxObservable_(RxObservable *self, RxObservable *alternate) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorSwitchIfEmpty_initWithRxObservable_(alternate));
}

RxObservable *RxObservable_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorDelay_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(delay, unit, scheduler));
}

RxObservable *RxObservable_delaySubscriptionWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDelaySubscription_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, delay, unit, scheduler));
}

RxObservable *RxObservable_delaySubscriptionWithRxFunctionsFunc0_(RxObservable *self, id<RxFunctionsFunc0> subscriptionDelay) {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeDelaySubscriptionWithSelector_initWithRxObservable_withRxFunctionsFunc0_(self, subscriptionDelay));
}

RxObservable *RxObservable_concatEagerWithRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2) {
  RxObservable_initialize();
  return RxObservable_concatEagerWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2 } count:2 type:RxObservable_class_()]));
}

RxObservable *RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3) {
  RxObservable_initialize();
  return RxObservable_concatEagerWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3 } count:3 type:RxObservable_class_()]));
}

RxObservable *RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4) {
  RxObservable_initialize();
  return RxObservable_concatEagerWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4 } count:4 type:RxObservable_class_()]));
}

RxObservable *RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5) {
  RxObservable_initialize();
  return RxObservable_concatEagerWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5 } count:5 type:RxObservable_class_()]));
}

RxObservable *RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6) {
  RxObservable_initialize();
  return RxObservable_concatEagerWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6 } count:6 type:RxObservable_class_()]));
}

RxObservable *RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7) {
  RxObservable_initialize();
  return RxObservable_concatEagerWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7 } count:7 type:RxObservable_class_()]));
}

RxObservable *RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8) {
  RxObservable_initialize();
  return RxObservable_concatEagerWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7, o8 } count:8 type:RxObservable_class_()]));
}

RxObservable *RxObservable_concatEagerWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8, RxObservable *o9) {
  RxObservable_initialize();
  return RxObservable_concatEagerWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o1, o2, o3, o4, o5, o6, o7, o8, o9 } count:9 type:RxObservable_class_()]));
}

RxObservable *RxObservable_concatEagerWithJavaLangIterable_(id<JavaLangIterable> sources) {
  RxObservable_initialize();
  return RxObservable_concatMapEagerWithRxFunctionsFunc1_(nil_chk(RxObservable_fromWithJavaLangIterable_(sources)), RxInternalUtilUtilityFunctions_identity());
}

RxObservable *RxObservable_concatEagerWithJavaLangIterable_withInt_(id<JavaLangIterable> sources, jint capacityHint) {
  RxObservable_initialize();
  return RxObservable_concatMapEagerWithRxFunctionsFunc1_withInt_(nil_chk(RxObservable_fromWithJavaLangIterable_(sources)), RxInternalUtilUtilityFunctions_identity(), capacityHint);
}

RxObservable *RxObservable_concatEagerWithRxObservable_(RxObservable *sources) {
  RxObservable_initialize();
  return RxObservable_concatMapEagerWithRxFunctionsFunc1_(nil_chk(sources), RxInternalUtilUtilityFunctions_identity());
}

RxObservable *RxObservable_concatEagerWithRxObservable_withInt_(RxObservable *sources, jint capacityHint) {
  RxObservable_initialize();
  return RxObservable_concatMapEagerWithRxFunctionsFunc1_withInt_(nil_chk(sources), RxInternalUtilUtilityFunctions_identity(), capacityHint);
}

RxObservable *RxObservable_concatMapEagerWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> mapper) {
  return RxObservable_concatMapEagerWithRxFunctionsFunc1_withInt_(self, mapper, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE));
}

RxObservable *RxObservable_concatMapEagerWithRxFunctionsFunc1_withInt_(RxObservable *self, id<RxFunctionsFunc1> mapper, jint capacityHint) {
  if (capacityHint < 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"capacityHint > 0 required but it was ", capacityHint));
  }
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorEagerConcatMap_initWithRxFunctionsFunc1_withInt_withInt_(mapper, capacityHint, JavaLangInteger_MAX_VALUE));
}

RxObservable *RxObservable_existsWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> predicate) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorAny_initWithRxFunctionsFunc1_withBoolean_(predicate, false));
}

RxObservable *RxObservable_filterWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> predicate) {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeFilter_initWithRxObservable_withRxFunctionsFunc1_(self, predicate));
}

RxObservable *RxObservable_flatMapWithRxFunctionsFunc1_withRxFunctionsFunc2_(RxObservable *self, id<RxFunctionsFunc1> collectionSelector, id<RxFunctionsFunc2> resultSelector) {
  return RxObservable_mergeWithRxObservable_(RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorMapPair_initWithRxFunctionsFunc1_withRxFunctionsFunc2_(collectionSelector, resultSelector)));
}

RxObservable *RxObservable_flatMapWithRxFunctionsFunc1_withRxFunctionsFunc2_withInt_(RxObservable *self, id<RxFunctionsFunc1> collectionSelector, id<RxFunctionsFunc2> resultSelector, jint maxConcurrent) {
  return RxObservable_mergeWithRxObservable_withInt_(RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorMapPair_initWithRxFunctionsFunc1_withRxFunctionsFunc2_(collectionSelector, resultSelector)), maxConcurrent);
}

RxObservable *RxObservable_flatMapIterableWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> collectionSelector) {
  return RxObservable_flatMapIterableWithRxFunctionsFunc1_withInt_(self, collectionSelector, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE));
}

RxObservable *RxObservable_flatMapIterableWithRxFunctionsFunc1_withInt_(RxObservable *self, id<RxFunctionsFunc1> collectionSelector, jint maxConcurrent) {
  return RxInternalOperatorsOnSubscribeFlattenIterable_createFromWithRxObservable_withRxFunctionsFunc1_withInt_(self, collectionSelector, maxConcurrent);
}

RxObservable *RxObservable_ignoreElements(RxObservable *self) {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorIgnoreElements_instance());
}

RxObservable *RxObservable_mapWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> func) {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeMap_initWithRxObservable_withRxFunctionsFunc1_(self, func));
}

RxObservable *RxObservable_mapNotificationWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(RxObservable *self, id<RxFunctionsFunc1> onNext, id<RxFunctionsFunc1> onError, id<RxFunctionsFunc0> onCompleted) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorMapNotification_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(onNext, onError, onCompleted));
}

RxObservable *RxObservable_observeOnWithRxScheduler_withInt_(RxObservable *self, RxScheduler *scheduler, jint bufferSize) {
  return RxObservable_observeOnWithRxScheduler_withBoolean_withInt_(self, scheduler, false, bufferSize);
}

RxObservable *RxObservable_observeOnWithRxScheduler_withBoolean_withInt_(RxObservable *self, RxScheduler *scheduler, jboolean delayError, jint bufferSize) {
  if ([self isKindOfClass:[RxInternalUtilScalarSynchronousObservable class]]) {
    return [((RxInternalUtilScalarSynchronousObservable *) cast_chk(self, [RxInternalUtilScalarSynchronousObservable class])) scalarScheduleOnWithRxScheduler:scheduler];
  }
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorObserveOn_initWithRxScheduler_withBoolean_withInt_(scheduler, delayError, bufferSize));
}

RxObservablesConnectableObservable *RxObservable_publish(RxObservable *self) {
  return RxInternalOperatorsOperatorPublish_createWithRxObservable_(self);
}

RxObservable *RxObservable_reduceWithId_withRxFunctionsFunc2_(RxObservable *self, id initialValue, id<RxFunctionsFunc2> accumulator) {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeReduceSeed_initWithRxObservable_withId_withRxFunctionsFunc2_(self, initialValue, accumulator));
}

RxObservablesConnectableObservable *RxObservable_replay(RxObservable *self) {
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_(self);
}

RxObservable *RxObservable_replayWithRxFunctionsFunc1_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, id<RxFunctionsFunc1> selector, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  if (bufferSize < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"bufferSize < 0");
  }
  return RxInternalOperatorsOperatorReplay_multicastSelectorWithRxFunctionsFunc0_withRxFunctionsFunc1_(RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, bufferSize, time, unit, scheduler), selector);
}

RxObservable *RxObservable_replayWithRxFunctionsFunc1_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, id<RxFunctionsFunc1> selector, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxInternalOperatorsOperatorReplay_multicastSelectorWithRxFunctionsFunc0_withRxFunctionsFunc1_(RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, scheduler), selector);
}

RxObservablesConnectableObservable *RxObservable_replayWithInt_(RxObservable *self, jint bufferSize) {
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withInt_(self, bufferSize);
}

RxObservablesConnectableObservable *RxObservable_replayWithInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  if (bufferSize < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"bufferSize < 0");
  }
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withInt_(self, time, unit, scheduler, bufferSize);
}

RxObservablesConnectableObservable *RxObservable_replayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, scheduler);
}

RxObservable *RxObservable_sampleWithLong_withJavaUtilConcurrentTimeUnit_(RxObservable *self, jlong period, JavaUtilConcurrentTimeUnit *unit) {
  return RxObservable_sampleWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, period, unit, RxSchedulersSchedulers_computation());
}

RxObservable *RxObservable_sampleWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong period, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorSampleWithTime_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(period, unit, scheduler));
}

RxObservable *RxObservable_single(RxObservable *self) {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorSingle_instance());
}

RxObservable *RxObservable_singleOrDefaultWithId_(RxObservable *self, id defaultValue) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorSingle_initWithId_(defaultValue));
}

RxObservable *RxObservable_skipWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeSkipTimed_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, scheduler));
}

RxObservable *RxObservable_skipLastWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorSkipLastTimed_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(time, unit, scheduler));
}

id<RxSubscription> RxObservable_subscribeWithRxFunctionsAction1_(RxObservable *self, id<RxFunctionsAction1> onNext) {
  if (onNext == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onNext can not be null");
  }
  id<RxFunctionsAction1> onError = JreLoadStatic(RxInternalUtilInternalObservableUtils, ERROR_NOT_IMPLEMENTED);
  id<RxFunctionsAction0> onCompleted = RxFunctionsActions_empty();
  return RxObservable_subscribeWithRxSubscriber_(self, create_RxInternalUtilActionSubscriber_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(onNext, onError, onCompleted));
}

id<RxSubscription> RxObservable_subscribeWithRxFunctionsAction1_withRxFunctionsAction1_(RxObservable *self, id<RxFunctionsAction1> onNext, id<RxFunctionsAction1> onError) {
  if (onNext == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onNext can not be null");
  }
  if (onError == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onError can not be null");
  }
  id<RxFunctionsAction0> onCompleted = RxFunctionsActions_empty();
  return RxObservable_subscribeWithRxSubscriber_(self, create_RxInternalUtilActionSubscriber_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(onNext, onError, onCompleted));
}

id<RxSubscription> RxObservable_subscribeWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(RxObservable *self, id<RxFunctionsAction1> onNext, id<RxFunctionsAction1> onError, id<RxFunctionsAction0> onCompleted) {
  if (onNext == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onNext can not be null");
  }
  if (onError == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onError can not be null");
  }
  if (onCompleted == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"onComplete can not be null");
  }
  return RxObservable_subscribeWithRxSubscriber_(self, create_RxInternalUtilActionSubscriber_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(onNext, onError, onCompleted));
}

id<RxSubscription> RxObservable_subscribeWithRxSubscriber_(RxObservable *self, RxSubscriber *subscriber) {
  return RxObservable_subscribeWithRxSubscriber_withRxObservable_(subscriber, self);
}

id<RxSubscription> RxObservable_subscribeWithRxSubscriber_withRxObservable_(RxSubscriber *subscriber, RxObservable *observable) {
  RxObservable_initialize();
  if (subscriber == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"subscriber can not be null");
  }
  if (((RxObservable *) nil_chk(observable))->onSubscribe_ == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"onSubscribe function can not be null.");
  }
  [subscriber onStart];
  if (!([subscriber isKindOfClass:[RxObserversSafeSubscriber class]])) {
    subscriber = create_RxObserversSafeSubscriber_initWithRxSubscriber_(subscriber);
  }
  @try {
    [((id<RxObservable_OnSubscribe>) nil_chk(RxPluginsRxJavaHooks_onObservableStartWithRxObservable_withRxObservable_OnSubscribe_(observable, observable->onSubscribe_))) callWithId:subscriber];
    return RxPluginsRxJavaHooks_onObservableReturnWithRxSubscription_(subscriber);
  }
  @catch (NSException *e) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(e);
    if ([subscriber isUnsubscribed]) {
      RxPluginsRxJavaHooks_onErrorWithNSException_(RxPluginsRxJavaHooks_onObservableErrorWithNSException_(e));
    }
    else {
      @try {
        [subscriber onErrorWithNSException:RxPluginsRxJavaHooks_onObservableErrorWithNSException_(e)];
      }
      @catch (NSException *e2) {
        RxExceptionsExceptions_throwIfFatalWithNSException_(e2);
        JavaLangRuntimeException *r = create_RxExceptionsOnErrorFailedException_initWithNSString_withNSException_(JreStrcat("$$$", @"Error occurred attempting to subscribe [", [((NSException *) nil_chk(e)) getMessage], @"] and then again while trying to pass to onError."), e2);
        RxPluginsRxJavaHooks_onObservableErrorWithNSException_(r);
        @throw r;
      }
    }
    return RxSubscriptionsSubscriptions_unsubscribed();
  }
}

RxObservable *RxObservable_subscribeOnWithRxScheduler_(RxObservable *self, RxScheduler *scheduler) {
  if ([self isKindOfClass:[RxInternalUtilScalarSynchronousObservable class]]) {
    return [((RxInternalUtilScalarSynchronousObservable *) cast_chk(self, [RxInternalUtilScalarSynchronousObservable class])) scalarScheduleOnWithRxScheduler:scheduler];
  }
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSubscribeOn_initWithRxObservable_withRxScheduler_(self, scheduler));
}

RxObservable *RxObservable_takeWithInt_(RxObservable *self, jint count) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTake_initWithInt_(count));
}

RxObservable *RxObservable_takeWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTakeTimed_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(time, unit, scheduler));
}

RxObservable *RxObservable_takeFirstWithRxFunctionsFunc1_(RxObservable *self, id<RxFunctionsFunc1> predicate) {
  return RxObservable_takeWithInt_(nil_chk(RxObservable_filterWithRxFunctionsFunc1_(self, predicate)), 1);
}

RxObservable *RxObservable_takeLastWithInt_(RxObservable *self, jint count) {
  if (count == 0) {
    return RxObservable_ignoreElements(self);
  }
  else if (count == 1) {
    return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeTakeLastOne_initWithRxObservable_(self));
  }
  else {
    return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTakeLast_initWithInt_(count));
  }
}

RxObservable *RxObservable_takeLastWithInt_withLong_withJavaUtilConcurrentTimeUnit_(RxObservable *self, jint count, jlong time, JavaUtilConcurrentTimeUnit *unit) {
  return RxObservable_takeLastWithInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, count, time, unit, RxSchedulersSchedulers_computation());
}

RxObservable *RxObservable_takeLastWithInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jint count, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTakeLastTimed_initWithInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(count, time, unit, scheduler));
}

RxObservable *RxObservable_takeLastWithLong_withJavaUtilConcurrentTimeUnit_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit) {
  return RxObservable_takeLastWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, time, unit, RxSchedulersSchedulers_computation());
}

RxObservable *RxObservable_takeLastWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTakeLastTimed_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(time, unit, scheduler));
}

RxObservable *RxObservable_throttleFirstWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong skipDuration, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorThrottleFirst_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(skipDuration, unit, scheduler));
}

RxObservable *RxObservable_timeIntervalWithRxScheduler_(RxObservable *self, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTimeInterval_initWithRxScheduler_(scheduler));
}

RxObservable *RxObservable_timeoutWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(RxObservable *self, id<RxFunctionsFunc0> firstTimeoutSelector, id<RxFunctionsFunc1> timeoutSelector, RxObservable *other) {
  if (timeoutSelector == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"timeoutSelector is null");
  }
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTimeoutWithSelector_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(firstTimeoutSelector, timeoutSelector, other));
}

RxObservable *RxObservable_timeoutWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(RxObservable *self, jlong timeout, JavaUtilConcurrentTimeUnit *timeUnit, RxObservable *other, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTimeout_initWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(timeout, timeUnit, other, scheduler));
}

RxObservable *RxObservable_timestampWithRxScheduler_(RxObservable *self, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorTimestamp_initWithRxScheduler_(scheduler));
}

RxObservable *RxObservable_toList(RxObservable *self) {
  return RxObservable_liftWithRxObservable_Operator_(self, RxInternalOperatorsOperatorToObservableList_instance());
}

RxObservable *RxObservable_toSortedList(RxObservable *self) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorToObservableSortedList_initWithInt_(10));
}

RxObservable *RxObservable_toSortedListWithRxFunctionsFunc2_(RxObservable *self, id<RxFunctionsFunc2> sortFunction) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorToObservableSortedList_initWithRxFunctionsFunc2_withInt_(sortFunction, 10));
}

RxObservable *RxObservable_windowWithInt_withInt_(RxObservable *self, jint count, jint skip) {
  if (count <= 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"count > 0 required but it was ", count));
  }
  if (skip <= 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"skip > 0 required but it was ", skip));
  }
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorWindowWithSize_initWithInt_withInt_(count, skip));
}

RxObservable *RxObservable_windowWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *self, jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  return RxObservable_windowWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, timeshift, unit, JavaLangInteger_MAX_VALUE, scheduler);
}

RxObservable *RxObservable_windowWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(RxObservable *self, jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, jint count, RxScheduler *scheduler) {
  return RxObservable_liftWithRxObservable_Operator_(self, create_RxInternalOperatorsOperatorWindowWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(timespan, timeshift, unit, count, scheduler));
}

RxObservable *RxObservable_windowWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(RxObservable *self, jlong timespan, JavaUtilConcurrentTimeUnit *unit, jint count, RxScheduler *scheduler) {
  return RxObservable_windowWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, timespan, unit, count, scheduler);
}

IOSObjectArray *RxObservable__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObservable__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObservable__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObservable__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObservable__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservable)

@implementation RxObservable_OnSubscribe

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LRxObservable;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Action1<Lrx/Subscriber<-TT;>;>;" };
  static const J2ObjcClassInfo _RxObservable_OnSubscribe = { "OnSubscribe", "rx", ptrTable, NULL, NULL, 7, 0x609, 0, 0, 0, -1, -1, 1, -1 };
  return &_RxObservable_OnSubscribe;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxObservable_OnSubscribe)

@implementation RxObservable_Operator

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LRxObservable;", "<R:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func1<Lrx/Subscriber<-TR;>;Lrx/Subscriber<-TT;>;>;" };
  static const J2ObjcClassInfo _RxObservable_Operator = { "Operator", "rx", ptrTable, NULL, NULL, 7, 0x609, 0, 0, 0, -1, -1, 1, -1 };
  return &_RxObservable_Operator;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxObservable_Operator)

@implementation RxObservable_OnSubscribeExtend

- (instancetype)initWithRxObservable:(RxObservable *)parent {
  RxObservable_OnSubscribeExtend_initWithRxObservable_(self, parent);
  return self;
}

- (void)callWithId:(RxSubscriber *)subscriber {
  [((RxSubscriber *) nil_chk(subscriber)) addWithRxSubscription:RxObservable_subscribeWithRxSubscriber_withRxObservable_(subscriber, parent_)];
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservable:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LRxObservable;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;", "(Lrx/Observable<TT;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "Lrx/Observable<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxObservable_OnSubscribeExtend = { "OnSubscribeExtend", "rx", ptrTable, methods, fields, 7, 0x18, 2, 1, 0, -1, -1, 6, -1 };
  return &_RxObservable_OnSubscribeExtend;
}

@end

void RxObservable_OnSubscribeExtend_initWithRxObservable_(RxObservable_OnSubscribeExtend *self, RxObservable *parent) {
  NSObject_init(self);
  JreStrongAssign(&self->parent_, parent);
}

RxObservable_OnSubscribeExtend *new_RxObservable_OnSubscribeExtend_initWithRxObservable_(RxObservable *parent) {
  J2OBJC_NEW_IMPL(RxObservable_OnSubscribeExtend, initWithRxObservable_, parent)
}

RxObservable_OnSubscribeExtend *create_RxObservable_OnSubscribeExtend_initWithRxObservable_(RxObservable *parent) {
  J2OBJC_CREATE_IMPL(RxObservable_OnSubscribeExtend, initWithRxObservable_, parent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservable_OnSubscribeExtend)

@implementation RxObservable_Transformer

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LRxObservable;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable<TT;>;Lrx/Observable<TR;>;>;" };
  static const J2ObjcClassInfo _RxObservable_Transformer = { "Transformer", "rx", ptrTable, NULL, NULL, 7, 0x609, 0, 0, 0, -1, -1, 1, -1 };
  return &_RxObservable_Transformer;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxObservable_Transformer)
