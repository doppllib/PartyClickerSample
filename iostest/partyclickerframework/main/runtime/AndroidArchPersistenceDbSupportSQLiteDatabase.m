//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchPersistenceDbSupportSQLiteDatabase.h"
#include "J2ObjC_source.h"

@interface AndroidArchPersistenceDbSupportSQLiteDatabase : NSObject

@end

@implementation AndroidArchPersistenceDbSupportSQLiteDatabase

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LAndroidArchPersistenceDbSupportSQLiteStatement;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 9, 6, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 10, 6, -1, -1, -1, -1 },
    { NULL, "LAndroidDatabaseCursor;", 0x401, 11, 12, -1, -1, -1, -1 },
    { NULL, "LAndroidDatabaseCursor;", 0x401, 13, 14, -1, -1, -1, -1 },
    { NULL, "LAndroidDatabaseCursor;", 0x401, 11, 15, -1, -1, -1, -1 },
    { NULL, "LAndroidDatabaseCursor;", 0x401, 11, 16, -1, -1, -1, -1 },
    { NULL, "LAndroidDatabaseCursor;", 0x401, 17, 18, -1, -1, -1, -1 },
    { NULL, "LAndroidDatabaseCursor;", 0x401, 19, 20, -1, -1, -1, -1 },
    { NULL, "LAndroidDatabaseCursor;", 0x401, 17, 21, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 22, 23, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 24, 23, 25, -1, -1, -1 },
    { NULL, "J", 0x401, 26, 23, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 27, 23, 25, -1, -1, -1 },
    { NULL, "J", 0x401, 28, 29, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 30, 31, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 32, 33, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 34, 35, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 36, 1, 25, -1, -1, -1 },
    { NULL, "V", 0x401, 36, 37, 25, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 38, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 39, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 41, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 42, 43, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 44, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compileStatementWithNSString:);
  methods[1].selector = @selector(beginTransaction);
  methods[2].selector = @selector(beginTransactionNonExclusive);
  methods[3].selector = @selector(beginTransactionWithListenerWithAndroidDatabaseSqliteSQLiteTransactionListener:);
  methods[4].selector = @selector(beginTransactionWithListenerNonExclusiveWithAndroidDatabaseSqliteSQLiteTransactionListener:);
  methods[5].selector = @selector(endTransaction);
  methods[6].selector = @selector(setTransactionSuccessful);
  methods[7].selector = @selector(inTransaction);
  methods[8].selector = @selector(isDbLockedByCurrentThread);
  methods[9].selector = @selector(yieldIfContendedSafely);
  methods[10].selector = @selector(yieldIfContendedSafelyWithLong:);
  methods[11].selector = @selector(getVersion);
  methods[12].selector = @selector(setVersionWithInt:);
  methods[13].selector = @selector(getMaximumSize);
  methods[14].selector = @selector(setMaximumSizeWithLong:);
  methods[15].selector = @selector(getPageSize);
  methods[16].selector = @selector(setPageSizeWithLong:);
  methods[17].selector = @selector(queryWithBoolean:withNSString:withNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:withNSString:);
  methods[18].selector = @selector(queryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withBoolean:withNSString:withNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:withNSString:);
  methods[19].selector = @selector(queryWithNSString:withNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:);
  methods[20].selector = @selector(queryWithNSString:withNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:withNSString:);
  methods[21].selector = @selector(rawQueryWithNSString:withNSStringArray:);
  methods[22].selector = @selector(rawQueryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withNSString:withNSStringArray:withNSString:);
  methods[23].selector = @selector(rawQueryWithAndroidArchPersistenceDbSupportSQLiteQuery:);
  methods[24].selector = @selector(insertWithNSString:withNSString:withAndroidContentContentValues:);
  methods[25].selector = @selector(insertOrThrowWithNSString:withNSString:withAndroidContentContentValues:);
  methods[26].selector = @selector(replaceWithNSString:withNSString:withAndroidContentContentValues:);
  methods[27].selector = @selector(replaceOrThrowWithNSString:withNSString:withAndroidContentContentValues:);
  methods[28].selector = @selector(insertWithOnConflictWithNSString:withNSString:withAndroidContentContentValues:withInt:);
  methods[29].selector = @selector(delete__WithNSString:withNSString:withNSStringArray:);
  methods[30].selector = @selector(updateWithNSString:withAndroidContentContentValues:withNSString:withNSStringArray:);
  methods[31].selector = @selector(updateWithOnConflictWithNSString:withAndroidContentContentValues:withNSString:withNSStringArray:withInt:);
  methods[32].selector = @selector(execSQLWithNSString:);
  methods[33].selector = @selector(execSQLWithNSString:withNSObjectArray:);
  methods[34].selector = @selector(isReadOnly);
  methods[35].selector = @selector(isOpen);
  methods[36].selector = @selector(needUpgradeWithInt:);
  methods[37].selector = @selector(getPath);
  methods[38].selector = @selector(setLocaleWithJavaUtilLocale:);
  methods[39].selector = @selector(setMaxSqlCacheSizeWithInt:);
  methods[40].selector = @selector(setForeignKeyConstraintsEnabledWithBoolean:);
  methods[41].selector = @selector(enableWriteAheadLogging);
  methods[42].selector = @selector(disableWriteAheadLogging);
  methods[43].selector = @selector(isWriteAheadLoggingEnabled);
  methods[44].selector = @selector(getAttachedDbs);
  methods[45].selector = @selector(isDatabaseIntegrityOk);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compileStatement", "LNSString;", "beginTransactionWithListener", "LAndroidDatabaseSqliteSQLiteTransactionListener;", "beginTransactionWithListenerNonExclusive", "yieldIfContendedSafely", "J", "setVersion", "I", "setMaximumSize", "setPageSize", "query", "ZLNSString;[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;LNSString;", "queryWithFactory", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;ZLNSString;[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;LNSString;", "LNSString;[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;", "LNSString;[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;LNSString;", "rawQuery", "LNSString;[LNSString;", "rawQueryWithFactory", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;LNSString;[LNSString;LNSString;", "LAndroidArchPersistenceDbSupportSQLiteQuery;", "insert", "LNSString;LNSString;LAndroidContentContentValues;", "insertOrThrow", "LAndroidDatabaseSQLException;", "replace", "replaceOrThrow", "insertWithOnConflict", "LNSString;LNSString;LAndroidContentContentValues;I", "delete", "LNSString;LNSString;[LNSString;", "update", "LNSString;LAndroidContentContentValues;LNSString;[LNSString;", "updateWithOnConflict", "LNSString;LAndroidContentContentValues;LNSString;[LNSString;I", "execSQL", "LNSString;[LNSObject;", "needUpgrade", "setLocale", "LJavaUtilLocale;", "setMaxSqlCacheSize", "setForeignKeyConstraintsEnabled", "Z", "()Ljava/util/List<Landroid/util/Pair<Ljava/lang/String;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _AndroidArchPersistenceDbSupportSQLiteDatabase = { "SupportSQLiteDatabase", "android.arch.persistence.db", ptrTable, methods, NULL, 7, 0x609, 46, 0, -1, -1, -1, -1, -1 };
  return &_AndroidArchPersistenceDbSupportSQLiteDatabase;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidArchPersistenceDbSupportSQLiteDatabase)
