//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxExceptionsExceptions.h"
#include "RxExceptionsOnErrorThrowable.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsSingleOnSubscribeMap.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxSingle.h"
#include "RxSingleSubscriber.h"
#include "RxSubscription.h"

@implementation RxInternalOperatorsSingleOnSubscribeMap

- (instancetype)initWithRxSingle:(RxSingle *)source
            withRxFunctionsFunc1:(id<RxFunctionsFunc1>)transformer {
  RxInternalOperatorsSingleOnSubscribeMap_initWithRxSingle_withRxFunctionsFunc1_(self, source, transformer);
  return self;
}

- (void)callWithId:(RxSingleSubscriber *)o {
  RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber *parent = create_RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber_initWithRxSingleSubscriber_withRxFunctionsFunc1_(o, transformer_);
  [((RxSingleSubscriber *) nil_chk(o)) addWithRxSubscription:parent];
  [((RxSingle *) nil_chk(source_)) subscribeWithRxSingleSubscriber:parent];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(transformer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingle:withRxFunctionsFunc1:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxSingle;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "transformer_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LRxSingle;LRxFunctionsFunc1;", "(Lrx/Single<TT;>;Lrx/functions/Func1<-TT;+TR;>;)V", "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TR;>;)V", "Lrx/Single<TT;>;", "Lrx/functions/Func1<-TT;+TR;>;", "LRxInternalOperatorsSingleOnSubscribeMap_MapSubscriber;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Single$OnSubscribe<TR;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeMap = { "SingleOnSubscribeMap", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 7, -1, 8, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeMap;
}

@end

void RxInternalOperatorsSingleOnSubscribeMap_initWithRxSingle_withRxFunctionsFunc1_(RxInternalOperatorsSingleOnSubscribeMap *self, RxSingle *source, id<RxFunctionsFunc1> transformer) {
  NSObject_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->transformer_, transformer);
}

RxInternalOperatorsSingleOnSubscribeMap *new_RxInternalOperatorsSingleOnSubscribeMap_initWithRxSingle_withRxFunctionsFunc1_(RxSingle *source, id<RxFunctionsFunc1> transformer) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeMap, initWithRxSingle_withRxFunctionsFunc1_, source, transformer)
}

RxInternalOperatorsSingleOnSubscribeMap *create_RxInternalOperatorsSingleOnSubscribeMap_initWithRxSingle_withRxFunctionsFunc1_(RxSingle *source, id<RxFunctionsFunc1> transformer) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeMap, initWithRxSingle_withRxFunctionsFunc1_, source, transformer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleOnSubscribeMap)

@implementation RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber

- (instancetype)initWithRxSingleSubscriber:(RxSingleSubscriber *)actual
                      withRxFunctionsFunc1:(id<RxFunctionsFunc1>)mapper {
  RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber_initWithRxSingleSubscriber_withRxFunctionsFunc1_(self, actual, mapper);
  return self;
}

- (void)onSuccessWithId:(id)t {
  id result;
  @try {
    result = [((id<RxFunctionsFunc1>) nil_chk(mapper_)) callWithId:t];
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    [self unsubscribe];
    [self onErrorWithNSException:RxExceptionsOnErrorThrowable_addValueAsLastCauseWithNSException_withId_(ex, t)];
    return;
  }
  [((RxSingleSubscriber *) nil_chk(actual_)) onSuccessWithId:result];
}

- (void)onErrorWithNSException:(NSException *)e {
  if (done_) {
    RxPluginsRxJavaHooks_onErrorWithNSException_(e);
    return;
  }
  done_ = true;
  [((RxSingleSubscriber *) nil_chk(actual_)) onErrorWithNSException:e];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(mapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingleSubscriber:withRxFunctionsFunc1:);
  methods[1].selector = @selector(onSuccessWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LRxSingleSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "mapper_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSingleSubscriber;LRxFunctionsFunc1;", "(Lrx/SingleSubscriber<-TR;>;Lrx/functions/Func1<-TT;+TR;>;)V", "onSuccess", "LNSObject;", "(TT;)V", "onError", "LNSException;", "Lrx/SingleSubscriber<-TR;>;", "Lrx/functions/Func1<-TT;+TR;>;", "LRxInternalOperatorsSingleOnSubscribeMap;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lrx/SingleSubscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber = { "MapSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 3, 3, 9, -1, -1, 10, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber;
}

@end

void RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber_initWithRxSingleSubscriber_withRxFunctionsFunc1_(RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber *self, RxSingleSubscriber *actual, id<RxFunctionsFunc1> mapper) {
  RxSingleSubscriber_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->mapper_, mapper);
}

RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber *new_RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber_initWithRxSingleSubscriber_withRxFunctionsFunc1_(RxSingleSubscriber *actual, id<RxFunctionsFunc1> mapper) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber, initWithRxSingleSubscriber_withRxFunctionsFunc1_, actual, mapper)
}

RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber *create_RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber_initWithRxSingleSubscriber_withRxFunctionsFunc1_(RxSingleSubscriber *actual, id<RxFunctionsFunc1> mapper) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber, initWithRxSingleSubscriber_withRxFunctionsFunc1_, actual, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleOnSubscribeMap_MapSubscriber)
