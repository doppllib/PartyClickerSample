//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalUtilAtomicMpscLinkedAtomicQueue")
#ifdef RESTRICT_RxInternalUtilAtomicMpscLinkedAtomicQueue
#define INCLUDE_ALL_RxInternalUtilAtomicMpscLinkedAtomicQueue 0
#else
#define INCLUDE_ALL_RxInternalUtilAtomicMpscLinkedAtomicQueue 1
#endif
#undef RESTRICT_RxInternalUtilAtomicMpscLinkedAtomicQueue

#if !defined (RxInternalUtilAtomicMpscLinkedAtomicQueue_) && (INCLUDE_ALL_RxInternalUtilAtomicMpscLinkedAtomicQueue || defined(INCLUDE_RxInternalUtilAtomicMpscLinkedAtomicQueue))
#define RxInternalUtilAtomicMpscLinkedAtomicQueue_

#define RESTRICT_RxInternalUtilAtomicBaseLinkedAtomicQueue 1
#define INCLUDE_RxInternalUtilAtomicBaseLinkedAtomicQueue 1
#include "RxInternalUtilAtomicBaseLinkedAtomicQueue.h"

@interface RxInternalUtilAtomicMpscLinkedAtomicQueue : RxInternalUtilAtomicBaseLinkedAtomicQueue

#pragma mark Public

- (instancetype)init;

- (jboolean)offerWithId:(id)nextValue;

- (id)peek;

- (id)poll;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilAtomicMpscLinkedAtomicQueue)

FOUNDATION_EXPORT void RxInternalUtilAtomicMpscLinkedAtomicQueue_init(RxInternalUtilAtomicMpscLinkedAtomicQueue *self);

FOUNDATION_EXPORT RxInternalUtilAtomicMpscLinkedAtomicQueue *new_RxInternalUtilAtomicMpscLinkedAtomicQueue_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilAtomicMpscLinkedAtomicQueue *create_RxInternalUtilAtomicMpscLinkedAtomicQueue_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilAtomicMpscLinkedAtomicQueue)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalUtilAtomicMpscLinkedAtomicQueue")
