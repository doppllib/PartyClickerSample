//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxExceptionsExceptions.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOperatorTimeoutBase.h"
#include "RxInternalOperatorsOperatorTimeoutWithSelector.h"
#include "RxObservable.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSubscriptions.h"
#include "java/lang/Long.h"

@interface RxInternalOperatorsOperatorTimeoutWithSelector_1 : NSObject < RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub > {
 @public
  id<RxFunctionsFunc0> val$firstTimeoutSelector_;
}

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0;

- (id<RxSubscription>)callWithId:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)timeoutSubscriber
                          withId:(JavaLangLong *)seqId
                          withId:(RxScheduler_Worker *)inner;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTimeoutWithSelector_1)

__attribute__((unused)) static void RxInternalOperatorsOperatorTimeoutWithSelector_1_initWithRxFunctionsFunc0_(RxInternalOperatorsOperatorTimeoutWithSelector_1 *self, id<RxFunctionsFunc0> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorTimeoutWithSelector_1 *new_RxInternalOperatorsOperatorTimeoutWithSelector_1_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTimeoutWithSelector_1 *create_RxInternalOperatorsOperatorTimeoutWithSelector_1_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0);

@interface RxInternalOperatorsOperatorTimeoutWithSelector_1_1 : RxSubscriber {
 @public
  RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *val$timeoutSubscriber_;
  JavaLangLong *val$seqId_;
}

- (instancetype)initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)capture$0
                                                                withJavaLangLong:(JavaLangLong *)capture$1;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTimeoutWithSelector_1_1)

__attribute__((unused)) static void RxInternalOperatorsOperatorTimeoutWithSelector_1_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutWithSelector_1_1 *self, RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorTimeoutWithSelector_1_1 *new_RxInternalOperatorsOperatorTimeoutWithSelector_1_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTimeoutWithSelector_1_1 *create_RxInternalOperatorsOperatorTimeoutWithSelector_1_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1);

@interface RxInternalOperatorsOperatorTimeoutWithSelector_2 : NSObject < RxInternalOperatorsOperatorTimeoutBase_TimeoutStub > {
 @public
  id<RxFunctionsFunc1> val$timeoutSelector_;
}

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$0;

- (id<RxSubscription>)callWithId:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)timeoutSubscriber
                          withId:(JavaLangLong *)seqId
                          withId:(id)value
                          withId:(RxScheduler_Worker *)inner;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTimeoutWithSelector_2)

__attribute__((unused)) static void RxInternalOperatorsOperatorTimeoutWithSelector_2_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorTimeoutWithSelector_2 *self, id<RxFunctionsFunc1> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorTimeoutWithSelector_2 *new_RxInternalOperatorsOperatorTimeoutWithSelector_2_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTimeoutWithSelector_2 *create_RxInternalOperatorsOperatorTimeoutWithSelector_2_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0);

@interface RxInternalOperatorsOperatorTimeoutWithSelector_2_1 : RxSubscriber {
 @public
  RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *val$timeoutSubscriber_;
  JavaLangLong *val$seqId_;
}

- (instancetype)initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)capture$0
                                                                withJavaLangLong:(JavaLangLong *)capture$1;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTimeoutWithSelector_2_1)

__attribute__((unused)) static void RxInternalOperatorsOperatorTimeoutWithSelector_2_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutWithSelector_2_1 *self, RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorTimeoutWithSelector_2_1 *new_RxInternalOperatorsOperatorTimeoutWithSelector_2_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTimeoutWithSelector_2_1 *create_RxInternalOperatorsOperatorTimeoutWithSelector_2_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1);

@implementation RxInternalOperatorsOperatorTimeoutWithSelector

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)firstTimeoutSelector
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)timeoutSelector
                        withRxObservable:(RxObservable *)other {
  RxInternalOperatorsOperatorTimeoutWithSelector_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(self, firstTimeoutSelector, timeoutSelector, other);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc0:withRxFunctionsFunc1:withRxObservable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxFunctionsFunc0;LRxFunctionsFunc1;LRxObservable;", "(Lrx/functions/Func0<+Lrx/Observable<TU;>;>;Lrx/functions/Func1<-TT;+Lrx/Observable<TV;>;>;Lrx/Observable<+TT;>;)V", "<T:Ljava/lang/Object;U:Ljava/lang/Object;V:Ljava/lang/Object;>Lrx/internal/operators/OperatorTimeoutBase<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeoutWithSelector = { "OperatorTimeoutWithSelector", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, 2, -1 };
  return &_RxInternalOperatorsOperatorTimeoutWithSelector;
}

@end

void RxInternalOperatorsOperatorTimeoutWithSelector_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(RxInternalOperatorsOperatorTimeoutWithSelector *self, id<RxFunctionsFunc0> firstTimeoutSelector, id<RxFunctionsFunc1> timeoutSelector, RxObservable *other) {
  RxInternalOperatorsOperatorTimeoutBase_initWithRxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxObservable_withRxScheduler_(self, create_RxInternalOperatorsOperatorTimeoutWithSelector_1_initWithRxFunctionsFunc0_(firstTimeoutSelector), create_RxInternalOperatorsOperatorTimeoutWithSelector_2_initWithRxFunctionsFunc1_(timeoutSelector), other, RxSchedulersSchedulers_immediate());
}

RxInternalOperatorsOperatorTimeoutWithSelector *new_RxInternalOperatorsOperatorTimeoutWithSelector_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(id<RxFunctionsFunc0> firstTimeoutSelector, id<RxFunctionsFunc1> timeoutSelector, RxObservable *other) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTimeoutWithSelector, initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_, firstTimeoutSelector, timeoutSelector, other)
}

RxInternalOperatorsOperatorTimeoutWithSelector *create_RxInternalOperatorsOperatorTimeoutWithSelector_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(id<RxFunctionsFunc0> firstTimeoutSelector, id<RxFunctionsFunc1> timeoutSelector, RxObservable *other) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTimeoutWithSelector, initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_, firstTimeoutSelector, timeoutSelector, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTimeoutWithSelector)

@implementation RxInternalOperatorsOperatorTimeoutWithSelector_1

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0 {
  RxInternalOperatorsOperatorTimeoutWithSelector_1_initWithRxFunctionsFunc0_(self, capture$0);
  return self;
}

- (id<RxSubscription>)callWithId:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)timeoutSubscriber
                          withId:(JavaLangLong *)seqId
                          withId:(RxScheduler_Worker *)inner {
  if (val$firstTimeoutSelector_ != nil) {
    RxObservable *o;
    @try {
      o = [val$firstTimeoutSelector_ call];
    }
    @catch (NSException *t) {
      RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_(t, timeoutSubscriber);
      return RxSubscriptionsSubscriptions_unsubscribed();
    }
    return [((RxObservable *) nil_chk(o)) unsafeSubscribeWithRxSubscriber:create_RxInternalOperatorsOperatorTimeoutWithSelector_1_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(timeoutSubscriber, seqId)];
  }
  else {
    return RxSubscriptionsSubscriptions_unsubscribed();
  }
}

- (void)dealloc {
  RELEASE_(val$firstTimeoutSelector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSubscription;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc0:);
  methods[1].selector = @selector(callWithId:withId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$firstTimeoutSelector_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber;LJavaLangLong;LRxScheduler_Worker;", "(Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;Ljava/lang/Long;Lrx/Scheduler$Worker;)Lrx/Subscription;", "Lrx/functions/Func0<+Lrx/Observable<TU;>;>;", "LRxInternalOperatorsOperatorTimeoutWithSelector;", "initWithRxFunctionsFunc0:withRxFunctionsFunc1:withRxObservable:", "Ljava/lang/Object;Lrx/internal/operators/OperatorTimeoutBase$FirstTimeoutStub<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeoutWithSelector_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorTimeoutWithSelector_1;
}

@end

void RxInternalOperatorsOperatorTimeoutWithSelector_1_initWithRxFunctionsFunc0_(RxInternalOperatorsOperatorTimeoutWithSelector_1 *self, id<RxFunctionsFunc0> capture$0) {
  JreStrongAssign(&self->val$firstTimeoutSelector_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorTimeoutWithSelector_1 *new_RxInternalOperatorsOperatorTimeoutWithSelector_1_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTimeoutWithSelector_1, initWithRxFunctionsFunc0_, capture$0)
}

RxInternalOperatorsOperatorTimeoutWithSelector_1 *create_RxInternalOperatorsOperatorTimeoutWithSelector_1_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTimeoutWithSelector_1, initWithRxFunctionsFunc0_, capture$0)
}

@implementation RxInternalOperatorsOperatorTimeoutWithSelector_1_1

- (instancetype)initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)capture$0
                                                                withJavaLangLong:(JavaLangLong *)capture$1 {
  RxInternalOperatorsOperatorTimeoutWithSelector_1_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(self, capture$0, capture$1);
  return self;
}

- (void)onCompleted {
  [((RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *) nil_chk(val$timeoutSubscriber_)) onTimeoutWithLong:[((JavaLangLong *) nil_chk(val$seqId_)) longLongValue]];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *) nil_chk(val$timeoutSubscriber_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)t {
  [((RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *) nil_chk(val$timeoutSubscriber_)) onTimeoutWithLong:[((JavaLangLong *) nil_chk(val$seqId_)) longLongValue]];
}

- (void)dealloc {
  RELEASE_(val$timeoutSubscriber_);
  RELEASE_(val$seqId_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:withJavaLangLong:);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$timeoutSubscriber_", "LRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$seqId_", "LJavaLangLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "(TU;)V", "Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;", "LRxInternalOperatorsOperatorTimeoutWithSelector_1;", "callWithId:withId:withId:", "Lrx/Subscriber<TU;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeoutWithSelector_1_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 4, 2, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorTimeoutWithSelector_1_1;
}

@end

void RxInternalOperatorsOperatorTimeoutWithSelector_1_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutWithSelector_1_1 *self, RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  JreStrongAssign(&self->val$timeoutSubscriber_, capture$0);
  JreStrongAssign(&self->val$seqId_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorTimeoutWithSelector_1_1 *new_RxInternalOperatorsOperatorTimeoutWithSelector_1_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTimeoutWithSelector_1_1, initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_, capture$0, capture$1)
}

RxInternalOperatorsOperatorTimeoutWithSelector_1_1 *create_RxInternalOperatorsOperatorTimeoutWithSelector_1_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTimeoutWithSelector_1_1, initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorTimeoutWithSelector_2

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$0 {
  RxInternalOperatorsOperatorTimeoutWithSelector_2_initWithRxFunctionsFunc1_(self, capture$0);
  return self;
}

- (id<RxSubscription>)callWithId:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)timeoutSubscriber
                          withId:(JavaLangLong *)seqId
                          withId:(id)value
                          withId:(RxScheduler_Worker *)inner {
  RxObservable *o;
  @try {
    o = [((id<RxFunctionsFunc1>) nil_chk(val$timeoutSelector_)) callWithId:value];
  }
  @catch (NSException *t) {
    RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_(t, timeoutSubscriber);
    return RxSubscriptionsSubscriptions_unsubscribed();
  }
  return [((RxObservable *) nil_chk(o)) unsafeSubscribeWithRxSubscriber:create_RxInternalOperatorsOperatorTimeoutWithSelector_2_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(timeoutSubscriber, seqId)];
}

- (void)dealloc {
  RELEASE_(val$timeoutSelector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSubscription;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc1:);
  methods[1].selector = @selector(callWithId:withId:withId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$timeoutSelector_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber;LJavaLangLong;LNSObject;LRxScheduler_Worker;", "(Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;Ljava/lang/Long;TT;Lrx/Scheduler$Worker;)Lrx/Subscription;", "Lrx/functions/Func1<-TT;+Lrx/Observable<TV;>;>;", "LRxInternalOperatorsOperatorTimeoutWithSelector;", "initWithRxFunctionsFunc0:withRxFunctionsFunc1:withRxObservable:", "Ljava/lang/Object;Lrx/internal/operators/OperatorTimeoutBase$TimeoutStub<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeoutWithSelector_2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorTimeoutWithSelector_2;
}

@end

void RxInternalOperatorsOperatorTimeoutWithSelector_2_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorTimeoutWithSelector_2 *self, id<RxFunctionsFunc1> capture$0) {
  JreStrongAssign(&self->val$timeoutSelector_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorTimeoutWithSelector_2 *new_RxInternalOperatorsOperatorTimeoutWithSelector_2_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTimeoutWithSelector_2, initWithRxFunctionsFunc1_, capture$0)
}

RxInternalOperatorsOperatorTimeoutWithSelector_2 *create_RxInternalOperatorsOperatorTimeoutWithSelector_2_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTimeoutWithSelector_2, initWithRxFunctionsFunc1_, capture$0)
}

@implementation RxInternalOperatorsOperatorTimeoutWithSelector_2_1

- (instancetype)initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)capture$0
                                                                withJavaLangLong:(JavaLangLong *)capture$1 {
  RxInternalOperatorsOperatorTimeoutWithSelector_2_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(self, capture$0, capture$1);
  return self;
}

- (void)onCompleted {
  [((RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *) nil_chk(val$timeoutSubscriber_)) onTimeoutWithLong:[((JavaLangLong *) nil_chk(val$seqId_)) longLongValue]];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *) nil_chk(val$timeoutSubscriber_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)t {
  [((RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *) nil_chk(val$timeoutSubscriber_)) onTimeoutWithLong:[((JavaLangLong *) nil_chk(val$seqId_)) longLongValue]];
}

- (void)dealloc {
  RELEASE_(val$timeoutSubscriber_);
  RELEASE_(val$seqId_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:withJavaLangLong:);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$timeoutSubscriber_", "LRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$seqId_", "LJavaLangLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "(TV;)V", "Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;", "LRxInternalOperatorsOperatorTimeoutWithSelector_2;", "callWithId:withId:withId:withId:", "Lrx/Subscriber<TV;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeoutWithSelector_2_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 4, 2, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorTimeoutWithSelector_2_1;
}

@end

void RxInternalOperatorsOperatorTimeoutWithSelector_2_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutWithSelector_2_1 *self, RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  JreStrongAssign(&self->val$timeoutSubscriber_, capture$0);
  JreStrongAssign(&self->val$seqId_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorTimeoutWithSelector_2_1 *new_RxInternalOperatorsOperatorTimeoutWithSelector_2_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTimeoutWithSelector_2_1, initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_, capture$0, capture$1)
}

RxInternalOperatorsOperatorTimeoutWithSelector_2_1 *create_RxInternalOperatorsOperatorTimeoutWithSelector_2_1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTimeoutWithSelector_2_1, initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_, capture$0, capture$1)
}
