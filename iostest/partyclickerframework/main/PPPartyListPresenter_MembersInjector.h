//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PPPartyListPresenter_MembersInjector")
#ifdef RESTRICT_PPPartyListPresenter_MembersInjector
#define INCLUDE_ALL_PPPartyListPresenter_MembersInjector 0
#else
#define INCLUDE_ALL_PPPartyListPresenter_MembersInjector 1
#endif
#undef RESTRICT_PPPartyListPresenter_MembersInjector

#if !defined (PPPartyListPresenter_MembersInjector_) && (INCLUDE_ALL_PPPartyListPresenter_MembersInjector || defined(INCLUDE_PPPartyListPresenter_MembersInjector))
#define PPPartyListPresenter_MembersInjector_

#define RESTRICT_DaggerMembersInjector 1
#define INCLUDE_DaggerMembersInjector 1
#include "DaggerMembersInjector.h"

@class PPPartyListPresenter;
@protocol JavaxInjectProvider;

@interface PPPartyListPresenter_MembersInjector : NSObject < DaggerMembersInjector >

#pragma mark Public

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)databaseHelperProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)crashReporterProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)schedulerTransformerProvider;

+ (id<DaggerMembersInjector>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)databaseHelperProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)crashReporterProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)schedulerTransformerProvider;

+ (void)injectCrashReporterWithPPPartyListPresenter:(PPPartyListPresenter *)instance
                            withJavaxInjectProvider:(id<JavaxInjectProvider>)crashReporterProvider;

+ (void)injectDatabaseHelperWithPPPartyListPresenter:(PPPartyListPresenter *)instance
                             withJavaxInjectProvider:(id<JavaxInjectProvider>)databaseHelperProvider;

- (void)injectMembersWithId:(PPPartyListPresenter *)instance;

+ (void)injectSchedulerTransformerWithPPPartyListPresenter:(PPPartyListPresenter *)instance
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)schedulerTransformerProvider;

@end

J2OBJC_EMPTY_STATIC_INIT(PPPartyListPresenter_MembersInjector)

FOUNDATION_EXPORT void PPPartyListPresenter_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(PPPartyListPresenter_MembersInjector *self, id<JavaxInjectProvider> databaseHelperProvider, id<JavaxInjectProvider> crashReporterProvider, id<JavaxInjectProvider> schedulerTransformerProvider);

FOUNDATION_EXPORT PPPartyListPresenter_MembersInjector *new_PPPartyListPresenter_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> databaseHelperProvider, id<JavaxInjectProvider> crashReporterProvider, id<JavaxInjectProvider> schedulerTransformerProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PPPartyListPresenter_MembersInjector *create_PPPartyListPresenter_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> databaseHelperProvider, id<JavaxInjectProvider> crashReporterProvider, id<JavaxInjectProvider> schedulerTransformerProvider);

FOUNDATION_EXPORT id<DaggerMembersInjector> PPPartyListPresenter_MembersInjector_createWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> databaseHelperProvider, id<JavaxInjectProvider> crashReporterProvider, id<JavaxInjectProvider> schedulerTransformerProvider);

FOUNDATION_EXPORT void PPPartyListPresenter_MembersInjector_injectDatabaseHelperWithPPPartyListPresenter_withJavaxInjectProvider_(PPPartyListPresenter *instance, id<JavaxInjectProvider> databaseHelperProvider);

FOUNDATION_EXPORT void PPPartyListPresenter_MembersInjector_injectCrashReporterWithPPPartyListPresenter_withJavaxInjectProvider_(PPPartyListPresenter *instance, id<JavaxInjectProvider> crashReporterProvider);

FOUNDATION_EXPORT void PPPartyListPresenter_MembersInjector_injectSchedulerTransformerWithPPPartyListPresenter_withJavaxInjectProvider_(PPPartyListPresenter *instance, id<JavaxInjectProvider> schedulerTransformerProvider);

J2OBJC_TYPE_LITERAL_HEADER(PPPartyListPresenter_MembersInjector)

@compatibility_alias ComKgalliganPartyclickerPresenterPartyListPresenter_MembersInjector PPPartyListPresenter_MembersInjector;

#endif

#pragma pop_macro("INCLUDE_ALL_PPPartyListPresenter_MembersInjector")
