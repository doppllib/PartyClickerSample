//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsExceptions.h"
#include "RxExceptionsOnErrorThrowable.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsNotificationLite.h"
#include "RxInternalOperatorsOperatorReplay.h"
#include "RxInternalUtilOpenHashSet.h"
#include "RxObservable.h"
#include "RxObservablesConnectableObservable.h"
#include "RxProducer.h"
#include "RxScheduler.h"
#include "RxSchedulersTimestamped.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSubscriptions.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface RxInternalOperatorsOperatorReplay ()

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe
                                withRxObservable:(RxObservable *)source
     withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)current
                            withRxFunctionsFunc0:(id<RxFunctionsFunc0>)bufferFactory;

@end

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_initWithRxObservable_OnSubscribe_withRxObservable_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(RxInternalOperatorsOperatorReplay *self, id<RxObservable_OnSubscribe> onSubscribe, RxObservable *source, JavaUtilConcurrentAtomicAtomicReference *current, id<RxFunctionsFunc0> bufferFactory);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay *new_RxInternalOperatorsOperatorReplay_initWithRxObservable_OnSubscribe_withRxObservable_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(id<RxObservable_OnSubscribe> onSubscribe, RxObservable *source, JavaUtilConcurrentAtomicAtomicReference *current, id<RxFunctionsFunc0> bufferFactory) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay *create_RxInternalOperatorsOperatorReplay_initWithRxObservable_OnSubscribe_withRxObservable_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(id<RxObservable_OnSubscribe> onSubscribe, RxObservable *source, JavaUtilConcurrentAtomicAtomicReference *current, id<RxFunctionsFunc0> bufferFactory);

@interface RxInternalOperatorsOperatorReplay_1 : NSObject < RxFunctionsFunc0 >

- (instancetype)init;

- (id)call;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_1)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_1_init(RxInternalOperatorsOperatorReplay_1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_1 *new_RxInternalOperatorsOperatorReplay_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_1 *create_RxInternalOperatorsOperatorReplay_1_init();

@interface RxInternalOperatorsOperatorReplay_2 : NSObject < RxObservable_OnSubscribe > {
 @public
  id<RxFunctionsFunc0> val$connectableFactory_;
  id<RxFunctionsFunc1> val$selector_;
}

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$1;

- (void)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_2)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_2_initWithRxFunctionsFunc0_withRxFunctionsFunc1_(RxInternalOperatorsOperatorReplay_2 *self, id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_2 *new_RxInternalOperatorsOperatorReplay_2_initWithRxFunctionsFunc0_withRxFunctionsFunc1_(id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_2 *create_RxInternalOperatorsOperatorReplay_2_initWithRxFunctionsFunc0_withRxFunctionsFunc1_(id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1);

@interface RxInternalOperatorsOperatorReplay_2_1 : NSObject < RxFunctionsAction1 > {
 @public
  RxSubscriber *val$child_;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

- (void)callWithId:(id<RxSubscription>)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_2_1)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_2_1_initWithRxSubscriber_(RxInternalOperatorsOperatorReplay_2_1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_2_1 *new_RxInternalOperatorsOperatorReplay_2_1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_2_1 *create_RxInternalOperatorsOperatorReplay_2_1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorReplay_3 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxObservable *val$observable_;
}

- (instancetype)initWithRxObservable:(RxObservable *)capture$0;

- (void)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_3)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_3_initWithRxObservable_(RxInternalOperatorsOperatorReplay_3 *self, RxObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_3 *new_RxInternalOperatorsOperatorReplay_3_initWithRxObservable_(RxObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_3 *create_RxInternalOperatorsOperatorReplay_3_initWithRxObservable_(RxObservable *capture$0);

@interface RxInternalOperatorsOperatorReplay_3_1 : RxSubscriber {
 @public
  RxSubscriber *val$child_;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0
                    withRxSubscriber:(RxSubscriber *)subscriber;

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_3_1)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_3_1_initWithRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorReplay_3_1 *self, RxSubscriber *capture$0, RxSubscriber *subscriber);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_3_1 *new_RxInternalOperatorsOperatorReplay_3_1_initWithRxSubscriber_withRxSubscriber_(RxSubscriber *capture$0, RxSubscriber *subscriber) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_3_1 *create_RxInternalOperatorsOperatorReplay_3_1_initWithRxSubscriber_withRxSubscriber_(RxSubscriber *capture$0, RxSubscriber *subscriber);

@interface RxInternalOperatorsOperatorReplay_4 : RxObservablesConnectableObservable {
 @public
  RxObservablesConnectableObservable *val$co_;
}

- (instancetype)initWithRxObservablesConnectableObservable:(RxObservablesConnectableObservable *)capture$0
                              withRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe;

- (void)connectWithRxFunctionsAction1:(id<RxFunctionsAction1>)connection;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_4)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_4_initWithRxObservablesConnectableObservable_withRxObservable_OnSubscribe_(RxInternalOperatorsOperatorReplay_4 *self, RxObservablesConnectableObservable *capture$0, id<RxObservable_OnSubscribe> onSubscribe);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_4 *new_RxInternalOperatorsOperatorReplay_4_initWithRxObservablesConnectableObservable_withRxObservable_OnSubscribe_(RxObservablesConnectableObservable *capture$0, id<RxObservable_OnSubscribe> onSubscribe) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_4 *create_RxInternalOperatorsOperatorReplay_4_initWithRxObservablesConnectableObservable_withRxObservable_OnSubscribe_(RxObservablesConnectableObservable *capture$0, id<RxObservable_OnSubscribe> onSubscribe);

@interface RxInternalOperatorsOperatorReplay_5 : NSObject < RxFunctionsFunc0 > {
 @public
  jint val$bufferSize_;
}

- (instancetype)initWithInt:(jint)capture$0;

- (id<RxInternalOperatorsOperatorReplay_ReplayBuffer>)call;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_5)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_5_initWithInt_(RxInternalOperatorsOperatorReplay_5 *self, jint capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_5 *new_RxInternalOperatorsOperatorReplay_5_initWithInt_(jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_5 *create_RxInternalOperatorsOperatorReplay_5_initWithInt_(jint capture$0);

@interface RxInternalOperatorsOperatorReplay_6 : NSObject < RxFunctionsFunc0 > {
 @public
  jint val$bufferSize_;
  jlong val$maxAgeInMillis_;
  RxScheduler *val$scheduler_;
}

- (instancetype)initWithInt:(jint)capture$0
                   withLong:(jlong)capture$1
            withRxScheduler:(RxScheduler *)capture$2;

- (id<RxInternalOperatorsOperatorReplay_ReplayBuffer>)call;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_6)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_6_initWithInt_withLong_withRxScheduler_(RxInternalOperatorsOperatorReplay_6 *self, jint capture$0, jlong capture$1, RxScheduler *capture$2);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_6 *new_RxInternalOperatorsOperatorReplay_6_initWithInt_withLong_withRxScheduler_(jint capture$0, jlong capture$1, RxScheduler *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_6 *create_RxInternalOperatorsOperatorReplay_6_initWithInt_withLong_withRxScheduler_(jint capture$0, jlong capture$1, RxScheduler *capture$2);

@interface RxInternalOperatorsOperatorReplay_7 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$curr_;
  id<RxFunctionsFunc0> val$bufferFactory_;
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                                           withRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$1;

- (void)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_7)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_7_initWithJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(RxInternalOperatorsOperatorReplay_7 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, id<RxFunctionsFunc0> capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_7 *new_RxInternalOperatorsOperatorReplay_7_initWithJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(JavaUtilConcurrentAtomicAtomicReference *capture$0, id<RxFunctionsFunc0> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_7 *create_RxInternalOperatorsOperatorReplay_7_initWithJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(JavaUtilConcurrentAtomicAtomicReference *capture$0, id<RxFunctionsFunc0> capture$1);

@interface RxInternalOperatorsOperatorReplay_ReplaySubscriber_1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorReplay_ReplaySubscriber *this$0_;
}

- (instancetype)initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber:(RxInternalOperatorsOperatorReplay_ReplaySubscriber *)outer$;

- (void)call;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_ReplaySubscriber_1)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_ReplaySubscriber_1_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_(RxInternalOperatorsOperatorReplay_ReplaySubscriber_1 *self, RxInternalOperatorsOperatorReplay_ReplaySubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_ReplaySubscriber_1 *new_RxInternalOperatorsOperatorReplay_ReplaySubscriber_1_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_(RxInternalOperatorsOperatorReplay_ReplaySubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_ReplaySubscriber_1 *create_RxInternalOperatorsOperatorReplay_ReplaySubscriber_1_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_(RxInternalOperatorsOperatorReplay_ReplaySubscriber *outer$);

inline jlong RxInternalOperatorsOperatorReplay_InnerProducer_get_serialVersionUID();
#define RxInternalOperatorsOperatorReplay_InnerProducer_serialVersionUID -4453897557930727610LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOperatorReplay_InnerProducer, serialVersionUID, jlong)

@interface RxInternalOperatorsOperatorReplay_ReplayBuffer : NSObject

@end

inline jlong RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer_get_serialVersionUID();
#define RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer_serialVersionUID 7063189396499112664LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer, serialVersionUID, jlong)

inline jlong RxInternalOperatorsOperatorReplay_Node_get_serialVersionUID();
#define RxInternalOperatorsOperatorReplay_Node_serialVersionUID 245354315435971818LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOperatorReplay_Node, serialVersionUID, jlong)

inline jlong RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_get_serialVersionUID();
#define RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_serialVersionUID 2346567790059478686LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer, serialVersionUID, jlong)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_addLastWithRxInternalOperatorsOperatorReplay_Node_(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer *self, RxInternalOperatorsOperatorReplay_Node *n);

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_removeFirst(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer *self);

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_setFirstWithRxInternalOperatorsOperatorReplay_Node_(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer *self, RxInternalOperatorsOperatorReplay_Node *n);

inline jlong RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer_get_serialVersionUID();
#define RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer_serialVersionUID -5898283885385201806LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer, serialVersionUID, jlong)

inline jlong RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer_get_serialVersionUID();
#define RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer_serialVersionUID 3457957419649567404LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer, serialVersionUID, jlong)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorReplay)

id<RxFunctionsFunc0> RxInternalOperatorsOperatorReplay_DEFAULT_UNBOUNDED_FACTORY;

@implementation RxInternalOperatorsOperatorReplay

+ (RxObservable *)multicastSelectorWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)connectableFactory
                                   withRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector {
  return RxInternalOperatorsOperatorReplay_multicastSelectorWithRxFunctionsFunc0_withRxFunctionsFunc1_(connectableFactory, selector);
}

+ (RxObservablesConnectableObservable *)observeOnWithRxObservablesConnectableObservable:(RxObservablesConnectableObservable *)co
                                                                        withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOperatorReplay_observeOnWithRxObservablesConnectableObservable_withRxScheduler_(co, scheduler);
}

+ (RxObservablesConnectableObservable *)createWithRxObservable:(RxObservable *)source {
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_(source);
}

+ (RxObservablesConnectableObservable *)createWithRxObservable:(RxObservable *)source
                                                       withInt:(jint)bufferSize {
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withInt_(source, bufferSize);
}

+ (RxObservablesConnectableObservable *)createWithRxObservable:(RxObservable *)source
                                                      withLong:(jlong)maxAge
                                withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                               withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(source, maxAge, unit, scheduler);
}

+ (RxObservablesConnectableObservable *)createWithRxObservable:(RxObservable *)source
                                                      withLong:(jlong)maxAge
                                withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                               withRxScheduler:(RxScheduler *)scheduler
                                                       withInt:(jint)bufferSize {
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withInt_(source, maxAge, unit, scheduler, bufferSize);
}

+ (RxObservablesConnectableObservable *)createWithRxObservable:(RxObservable *)source
                                          withRxFunctionsFunc0:(id<RxFunctionsFunc0>)bufferFactory {
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withRxFunctionsFunc0_(source, bufferFactory);
}

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe
                                withRxObservable:(RxObservable *)source
     withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)current
                            withRxFunctionsFunc0:(id<RxFunctionsFunc0>)bufferFactory {
  RxInternalOperatorsOperatorReplay_initWithRxObservable_OnSubscribe_withRxObservable_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(self, onSubscribe, source, current, bufferFactory);
  return self;
}

- (void)connectWithRxFunctionsAction1:(id<RxFunctionsAction1>)connection {
  jboolean doConnect;
  RxInternalOperatorsOperatorReplay_ReplaySubscriber *ps;
  for (; ; ) {
    ps = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(current_)) get];
    if (ps == nil || [ps isUnsubscribed]) {
      RxInternalOperatorsOperatorReplay_ReplaySubscriber *u = create_RxInternalOperatorsOperatorReplay_ReplaySubscriber_initWithRxInternalOperatorsOperatorReplay_ReplayBuffer_([((id<RxFunctionsFunc0>) nil_chk(bufferFactory_)) call]);
      [u init__];
      if (![current_ compareAndSetWithId:ps withId:u]) {
        continue;
      }
      ps = u;
    }
    doConnect = (![((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(ps->shouldConnect_)) get] && [ps->shouldConnect_ compareAndSetWithBoolean:false withBoolean:true]);
    break;
  }
  [((id<RxFunctionsAction1>) nil_chk(connection)) callWithId:ps];
  if (doConnect) {
    [((RxObservable *) nil_chk(source_)) unsafeSubscribeWithRxSubscriber:ps];
  }
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(current_);
  RELEASE_(bufferFactory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x9, 3, 4, -1, 5, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x9, 6, 7, -1, 8, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x9, 6, 9, -1, 10, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x9, 6, 11, -1, 12, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x9, 6, 13, -1, 14, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x8, 6, 15, -1, 16, -1, -1 },
    { NULL, NULL, 0x2, -1, 17, -1, 18, -1, -1 },
    { NULL, "V", 0x1, 19, 20, -1, 21, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(multicastSelectorWithRxFunctionsFunc0:withRxFunctionsFunc1:);
  methods[1].selector = @selector(observeOnWithRxObservablesConnectableObservable:withRxScheduler:);
  methods[2].selector = @selector(createWithRxObservable:);
  methods[3].selector = @selector(createWithRxObservable:withInt:);
  methods[4].selector = @selector(createWithRxObservable:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[5].selector = @selector(createWithRxObservable:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:withInt:);
  methods[6].selector = @selector(createWithRxObservable:withRxFunctionsFunc0:);
  methods[7].selector = @selector(initWithRxObservable_OnSubscribe:withRxObservable:withJavaUtilConcurrentAtomicAtomicReference:withRxFunctionsFunc0:);
  methods[8].selector = @selector(connectWithRxFunctionsAction1:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxObservable;", .constantValue.asLong = 0, 0x10, -1, -1, 22, -1 },
    { "current_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x10, -1, -1, 23, -1 },
    { "bufferFactory_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x10, -1, -1, 24, -1 },
    { "DEFAULT_UNBOUNDED_FACTORY", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x18, -1, 25, -1, -1 },
  };
  static const void *ptrTable[] = { "multicastSelector", "LRxFunctionsFunc0;LRxFunctionsFunc1;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/functions/Func0<+Lrx/observables/ConnectableObservable<TU;>;>;Lrx/functions/Func1<-Lrx/Observable<TU;>;+Lrx/Observable<TR;>;>;)Lrx/Observable<TR;>;", "observeOn", "LRxObservablesConnectableObservable;LRxScheduler;", "<T:Ljava/lang/Object;>(Lrx/observables/ConnectableObservable<TT;>;Lrx/Scheduler;)Lrx/observables/ConnectableObservable<TT;>;", "create", "LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;)Lrx/observables/ConnectableObservable<TT;>;", "LRxObservable;I", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;I)Lrx/observables/ConnectableObservable<TT;>;", "LRxObservable;JLJavaUtilConcurrentTimeUnit;LRxScheduler;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/observables/ConnectableObservable<TT;>;", "LRxObservable;JLJavaUtilConcurrentTimeUnit;LRxScheduler;I", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;I)Lrx/observables/ConnectableObservable<TT;>;", "LRxObservable;LRxFunctionsFunc0;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/functions/Func0<+Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;>;)Lrx/observables/ConnectableObservable<TT;>;", "LRxObservable_OnSubscribe;LRxObservable;LJavaUtilConcurrentAtomicAtomicReference;LRxFunctionsFunc0;", "(Lrx/Observable$OnSubscribe<TT;>;Lrx/Observable<+TT;>;Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OperatorReplay$ReplaySubscriber<TT;>;>;Lrx/functions/Func0<+Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;>;)V", "connect", "LRxFunctionsAction1;", "(Lrx/functions/Action1<-Lrx/Subscription;>;)V", "Lrx/Observable<+TT;>;", "Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OperatorReplay$ReplaySubscriber<TT;>;>;", "Lrx/functions/Func0<+Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;>;", &RxInternalOperatorsOperatorReplay_DEFAULT_UNBOUNDED_FACTORY, "LRxInternalOperatorsOperatorReplay_ReplaySubscriber;LRxInternalOperatorsOperatorReplay_InnerProducer;LRxInternalOperatorsOperatorReplay_ReplayBuffer;LRxInternalOperatorsOperatorReplay_UnboundedReplayBuffer;LRxInternalOperatorsOperatorReplay_Node;LRxInternalOperatorsOperatorReplay_BoundedReplayBuffer;LRxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer;LRxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer;", "<T:Ljava/lang/Object;>Lrx/observables/ConnectableObservable<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay = { "OperatorReplay", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 9, 4, -1, 26, -1, 27, -1 };
  return &_RxInternalOperatorsOperatorReplay;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorReplay class]) {
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorReplay_DEFAULT_UNBOUNDED_FACTORY, new_RxInternalOperatorsOperatorReplay_1_init());
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorReplay)
  }
}

@end

RxObservable *RxInternalOperatorsOperatorReplay_multicastSelectorWithRxFunctionsFunc0_withRxFunctionsFunc1_(id<RxFunctionsFunc0> connectableFactory, id<RxFunctionsFunc1> selector) {
  RxInternalOperatorsOperatorReplay_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorReplay_2_initWithRxFunctionsFunc0_withRxFunctionsFunc1_(connectableFactory, selector));
}

RxObservablesConnectableObservable *RxInternalOperatorsOperatorReplay_observeOnWithRxObservablesConnectableObservable_withRxScheduler_(RxObservablesConnectableObservable *co, RxScheduler *scheduler) {
  RxInternalOperatorsOperatorReplay_initialize();
  RxObservable *observable = [((RxObservablesConnectableObservable *) nil_chk(co)) observeOnWithRxScheduler:scheduler];
  id<RxObservable_OnSubscribe> onSubscribe = create_RxInternalOperatorsOperatorReplay_3_initWithRxObservable_(observable);
  return create_RxInternalOperatorsOperatorReplay_4_initWithRxObservablesConnectableObservable_withRxObservable_OnSubscribe_(co, onSubscribe);
}

RxObservablesConnectableObservable *RxInternalOperatorsOperatorReplay_createWithRxObservable_(RxObservable *source) {
  RxInternalOperatorsOperatorReplay_initialize();
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withRxFunctionsFunc0_(source, RxInternalOperatorsOperatorReplay_DEFAULT_UNBOUNDED_FACTORY);
}

RxObservablesConnectableObservable *RxInternalOperatorsOperatorReplay_createWithRxObservable_withInt_(RxObservable *source, jint bufferSize) {
  RxInternalOperatorsOperatorReplay_initialize();
  if (bufferSize == JavaLangInteger_MAX_VALUE) {
    return RxInternalOperatorsOperatorReplay_createWithRxObservable_(source);
  }
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withRxFunctionsFunc0_(source, create_RxInternalOperatorsOperatorReplay_5_initWithInt_(bufferSize));
}

RxObservablesConnectableObservable *RxInternalOperatorsOperatorReplay_createWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jlong maxAge, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  RxInternalOperatorsOperatorReplay_initialize();
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withInt_(source, maxAge, unit, scheduler, JavaLangInteger_MAX_VALUE);
}

RxObservablesConnectableObservable *RxInternalOperatorsOperatorReplay_createWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withInt_(RxObservable *source, jlong maxAge, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler, jint bufferSize) {
  RxInternalOperatorsOperatorReplay_initialize();
  jlong maxAgeInMillis = [((JavaUtilConcurrentTimeUnit *) nil_chk(unit)) toMillisWithLong:maxAge];
  return RxInternalOperatorsOperatorReplay_createWithRxObservable_withRxFunctionsFunc0_(source, create_RxInternalOperatorsOperatorReplay_6_initWithInt_withLong_withRxScheduler_(bufferSize, maxAgeInMillis, scheduler));
}

RxObservablesConnectableObservable *RxInternalOperatorsOperatorReplay_createWithRxObservable_withRxFunctionsFunc0_(RxObservable *source, id<RxFunctionsFunc0> bufferFactory) {
  RxInternalOperatorsOperatorReplay_initialize();
  JavaUtilConcurrentAtomicAtomicReference *curr = create_JavaUtilConcurrentAtomicAtomicReference_init();
  id<RxObservable_OnSubscribe> onSubscribe = create_RxInternalOperatorsOperatorReplay_7_initWithJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(curr, bufferFactory);
  return create_RxInternalOperatorsOperatorReplay_initWithRxObservable_OnSubscribe_withRxObservable_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(onSubscribe, source, curr, bufferFactory);
}

void RxInternalOperatorsOperatorReplay_initWithRxObservable_OnSubscribe_withRxObservable_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(RxInternalOperatorsOperatorReplay *self, id<RxObservable_OnSubscribe> onSubscribe, RxObservable *source, JavaUtilConcurrentAtomicAtomicReference *current, id<RxFunctionsFunc0> bufferFactory) {
  RxObservablesConnectableObservable_initWithRxObservable_OnSubscribe_(self, onSubscribe);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->current_, current);
  JreStrongAssign(&self->bufferFactory_, bufferFactory);
}

RxInternalOperatorsOperatorReplay *new_RxInternalOperatorsOperatorReplay_initWithRxObservable_OnSubscribe_withRxObservable_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(id<RxObservable_OnSubscribe> onSubscribe, RxObservable *source, JavaUtilConcurrentAtomicAtomicReference *current, id<RxFunctionsFunc0> bufferFactory) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay, initWithRxObservable_OnSubscribe_withRxObservable_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_, onSubscribe, source, current, bufferFactory)
}

RxInternalOperatorsOperatorReplay *create_RxInternalOperatorsOperatorReplay_initWithRxObservable_OnSubscribe_withRxObservable_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(id<RxObservable_OnSubscribe> onSubscribe, RxObservable *source, JavaUtilConcurrentAtomicAtomicReference *current, id<RxFunctionsFunc0> bufferFactory) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay, initWithRxObservable_OnSubscribe_withRxObservable_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_, onSubscribe, source, current, bufferFactory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay)

@implementation RxInternalOperatorsOperatorReplay_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorReplay_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)call {
  return create_RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer_initWithInt_(16);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorReplay;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 0, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorReplay_1;
}

@end

void RxInternalOperatorsOperatorReplay_1_init(RxInternalOperatorsOperatorReplay_1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorReplay_1 *new_RxInternalOperatorsOperatorReplay_1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_1, init)
}

RxInternalOperatorsOperatorReplay_1 *create_RxInternalOperatorsOperatorReplay_1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_1, init)
}

@implementation RxInternalOperatorsOperatorReplay_2

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$1 {
  RxInternalOperatorsOperatorReplay_2_initWithRxFunctionsFunc0_withRxFunctionsFunc1_(self, capture$0, capture$1);
  return self;
}

- (void)callWithId:(RxSubscriber *)child {
  RxObservablesConnectableObservable *co;
  RxObservable *observable;
  @try {
    co = [((id<RxFunctionsFunc0>) nil_chk(val$connectableFactory_)) call];
    observable = [((id<RxFunctionsFunc1>) nil_chk(val$selector_)) callWithId:co];
  }
  @catch (NSException *e) {
    RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_(e, child);
    return;
  }
  [((RxObservable *) nil_chk(observable)) subscribeWithRxSubscriber:child];
  [((RxObservablesConnectableObservable *) nil_chk(co)) connectWithRxFunctionsAction1:create_RxInternalOperatorsOperatorReplay_2_1_initWithRxSubscriber_(child)];
}

- (void)dealloc {
  RELEASE_(val$connectableFactory_);
  RELEASE_(val$selector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc0:withRxFunctionsFunc1:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$connectableFactory_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$selector_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-TR;>;)V", "Lrx/functions/Func0<+Lrx/observables/ConnectableObservable<TU;>;>;", "Lrx/functions/Func1<-Lrx/Observable<TU;>;+Lrx/Observable<TR;>;>;", "LRxInternalOperatorsOperatorReplay;", "multicastSelectorWithRxFunctionsFunc0:withRxFunctionsFunc1:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<TR;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 2, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorReplay_2;
}

@end

void RxInternalOperatorsOperatorReplay_2_initWithRxFunctionsFunc0_withRxFunctionsFunc1_(RxInternalOperatorsOperatorReplay_2 *self, id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1) {
  JreStrongAssign(&self->val$connectableFactory_, capture$0);
  JreStrongAssign(&self->val$selector_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorReplay_2 *new_RxInternalOperatorsOperatorReplay_2_initWithRxFunctionsFunc0_withRxFunctionsFunc1_(id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_2, initWithRxFunctionsFunc0_withRxFunctionsFunc1_, capture$0, capture$1)
}

RxInternalOperatorsOperatorReplay_2 *create_RxInternalOperatorsOperatorReplay_2_initWithRxFunctionsFunc0_withRxFunctionsFunc1_(id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_2, initWithRxFunctionsFunc0_withRxFunctionsFunc1_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorReplay_2_1

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorReplay_2_1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)callWithId:(id<RxSubscription>)t {
  [((RxSubscriber *) nil_chk(val$child_)) addWithRxSubscription:t];
}

- (void)dealloc {
  RELEASE_(val$child_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscription;", "Lrx/Subscriber<-TR;>;", "LRxInternalOperatorsOperatorReplay_2;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Subscription;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_2_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorReplay_2_1;
}

@end

void RxInternalOperatorsOperatorReplay_2_1_initWithRxSubscriber_(RxInternalOperatorsOperatorReplay_2_1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$child_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorReplay_2_1 *new_RxInternalOperatorsOperatorReplay_2_1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_2_1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorReplay_2_1 *create_RxInternalOperatorsOperatorReplay_2_1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_2_1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorReplay_3

- (instancetype)initWithRxObservable:(RxObservable *)capture$0 {
  RxInternalOperatorsOperatorReplay_3_initWithRxObservable_(self, capture$0);
  return self;
}

- (void)callWithId:(RxSubscriber *)child {
  [((RxObservable *) nil_chk(val$observable_)) unsafeSubscribeWithRxSubscriber:create_RxInternalOperatorsOperatorReplay_3_1_initWithRxSubscriber_withRxSubscriber_(child, child)];
}

- (void)dealloc {
  RELEASE_(val$observable_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservable:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observable_", "LRxObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "Lrx/Observable<TT;>;", "LRxInternalOperatorsOperatorReplay;", "observeOnWithRxObservablesConnectableObservable:withRxScheduler:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorReplay_3;
}

@end

void RxInternalOperatorsOperatorReplay_3_initWithRxObservable_(RxInternalOperatorsOperatorReplay_3 *self, RxObservable *capture$0) {
  JreStrongAssign(&self->val$observable_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorReplay_3 *new_RxInternalOperatorsOperatorReplay_3_initWithRxObservable_(RxObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_3, initWithRxObservable_, capture$0)
}

RxInternalOperatorsOperatorReplay_3 *create_RxInternalOperatorsOperatorReplay_3_initWithRxObservable_(RxObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_3, initWithRxObservable_, capture$0)
}

@implementation RxInternalOperatorsOperatorReplay_3_1

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0
                    withRxSubscriber:(RxSubscriber *)subscriber {
  RxInternalOperatorsOperatorReplay_3_1_initWithRxSubscriber_withRxSubscriber_(self, capture$0, subscriber);
  return self;
}

- (void)onNextWithId:(id)t {
  [((RxSubscriber *) nil_chk(val$child_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(val$child_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(val$child_)) onCompleted];
}

- (void)dealloc {
  RELEASE_(val$child_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:withRxSubscriber:);
  methods[1].selector = @selector(onNextWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onCompleted);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<*>;)V", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "Lrx/Subscriber<-TT;>;", "LRxInternalOperatorsOperatorReplay_3;", "callWithId:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_3_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 4, 1, 8, -1, 9, 10, -1 };
  return &_RxInternalOperatorsOperatorReplay_3_1;
}

@end

void RxInternalOperatorsOperatorReplay_3_1_initWithRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorReplay_3_1 *self, RxSubscriber *capture$0, RxSubscriber *subscriber) {
  JreStrongAssign(&self->val$child_, capture$0);
  RxSubscriber_initWithRxSubscriber_(self, subscriber);
}

RxInternalOperatorsOperatorReplay_3_1 *new_RxInternalOperatorsOperatorReplay_3_1_initWithRxSubscriber_withRxSubscriber_(RxSubscriber *capture$0, RxSubscriber *subscriber) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_3_1, initWithRxSubscriber_withRxSubscriber_, capture$0, subscriber)
}

RxInternalOperatorsOperatorReplay_3_1 *create_RxInternalOperatorsOperatorReplay_3_1_initWithRxSubscriber_withRxSubscriber_(RxSubscriber *capture$0, RxSubscriber *subscriber) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_3_1, initWithRxSubscriber_withRxSubscriber_, capture$0, subscriber)
}

@implementation RxInternalOperatorsOperatorReplay_4

- (instancetype)initWithRxObservablesConnectableObservable:(RxObservablesConnectableObservable *)capture$0
                              withRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe {
  RxInternalOperatorsOperatorReplay_4_initWithRxObservablesConnectableObservable_withRxObservable_OnSubscribe_(self, capture$0, onSubscribe);
  return self;
}

- (void)connectWithRxFunctionsAction1:(id<RxFunctionsAction1>)connection {
  [((RxObservablesConnectableObservable *) nil_chk(val$co_)) connectWithRxFunctionsAction1:connection];
}

- (void)dealloc {
  RELEASE_(val$co_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservablesConnectableObservable:withRxObservable_OnSubscribe:);
  methods[1].selector = @selector(connectWithRxFunctionsAction1:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$co_", "LRxObservablesConnectableObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable_OnSubscribe;", "(Lrx/Observable$OnSubscribe<TT;>;)V", "connect", "LRxFunctionsAction1;", "(Lrx/functions/Action1<-Lrx/Subscription;>;)V", "Lrx/observables/ConnectableObservable<TT;>;", "LRxInternalOperatorsOperatorReplay;", "observeOnWithRxObservablesConnectableObservable:withRxScheduler:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 6, -1, 7, 5, -1 };
  return &_RxInternalOperatorsOperatorReplay_4;
}

@end

void RxInternalOperatorsOperatorReplay_4_initWithRxObservablesConnectableObservable_withRxObservable_OnSubscribe_(RxInternalOperatorsOperatorReplay_4 *self, RxObservablesConnectableObservable *capture$0, id<RxObservable_OnSubscribe> onSubscribe) {
  JreStrongAssign(&self->val$co_, capture$0);
  RxObservablesConnectableObservable_initWithRxObservable_OnSubscribe_(self, onSubscribe);
}

RxInternalOperatorsOperatorReplay_4 *new_RxInternalOperatorsOperatorReplay_4_initWithRxObservablesConnectableObservable_withRxObservable_OnSubscribe_(RxObservablesConnectableObservable *capture$0, id<RxObservable_OnSubscribe> onSubscribe) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_4, initWithRxObservablesConnectableObservable_withRxObservable_OnSubscribe_, capture$0, onSubscribe)
}

RxInternalOperatorsOperatorReplay_4 *create_RxInternalOperatorsOperatorReplay_4_initWithRxObservablesConnectableObservable_withRxObservable_OnSubscribe_(RxObservablesConnectableObservable *capture$0, id<RxObservable_OnSubscribe> onSubscribe) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_4, initWithRxObservablesConnectableObservable_withRxObservable_OnSubscribe_, capture$0, onSubscribe)
}

@implementation RxInternalOperatorsOperatorReplay_5

- (instancetype)initWithInt:(jint)capture$0 {
  RxInternalOperatorsOperatorReplay_5_initWithInt_(self, capture$0);
  return self;
}

- (id<RxInternalOperatorsOperatorReplay_ReplayBuffer>)call {
  return create_RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer_initWithInt_(val$bufferSize_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxInternalOperatorsOperatorReplay_ReplayBuffer;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$bufferSize_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;", "LRxInternalOperatorsOperatorReplay;", "createWithRxObservable:withInt:", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOperatorReplay_5;
}

@end

void RxInternalOperatorsOperatorReplay_5_initWithInt_(RxInternalOperatorsOperatorReplay_5 *self, jint capture$0) {
  self->val$bufferSize_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorReplay_5 *new_RxInternalOperatorsOperatorReplay_5_initWithInt_(jint capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_5, initWithInt_, capture$0)
}

RxInternalOperatorsOperatorReplay_5 *create_RxInternalOperatorsOperatorReplay_5_initWithInt_(jint capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_5, initWithInt_, capture$0)
}

@implementation RxInternalOperatorsOperatorReplay_6

- (instancetype)initWithInt:(jint)capture$0
                   withLong:(jlong)capture$1
            withRxScheduler:(RxScheduler *)capture$2 {
  RxInternalOperatorsOperatorReplay_6_initWithInt_withLong_withRxScheduler_(self, capture$0, capture$1, capture$2);
  return self;
}

- (id<RxInternalOperatorsOperatorReplay_ReplayBuffer>)call {
  return create_RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer_initWithInt_withLong_withRxScheduler_(val$bufferSize_, val$maxAgeInMillis_, val$scheduler_);
}

- (void)dealloc {
  RELEASE_(val$scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxInternalOperatorsOperatorReplay_ReplayBuffer;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withLong:withRxScheduler:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$bufferSize_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$maxAgeInMillis_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;", "LRxInternalOperatorsOperatorReplay;", "createWithRxObservable:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:withInt:", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_6 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 3, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOperatorReplay_6;
}

@end

void RxInternalOperatorsOperatorReplay_6_initWithInt_withLong_withRxScheduler_(RxInternalOperatorsOperatorReplay_6 *self, jint capture$0, jlong capture$1, RxScheduler *capture$2) {
  self->val$bufferSize_ = capture$0;
  self->val$maxAgeInMillis_ = capture$1;
  JreStrongAssign(&self->val$scheduler_, capture$2);
  NSObject_init(self);
}

RxInternalOperatorsOperatorReplay_6 *new_RxInternalOperatorsOperatorReplay_6_initWithInt_withLong_withRxScheduler_(jint capture$0, jlong capture$1, RxScheduler *capture$2) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_6, initWithInt_withLong_withRxScheduler_, capture$0, capture$1, capture$2)
}

RxInternalOperatorsOperatorReplay_6 *create_RxInternalOperatorsOperatorReplay_6_initWithInt_withLong_withRxScheduler_(jint capture$0, jlong capture$1, RxScheduler *capture$2) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_6, initWithInt_withLong_withRxScheduler_, capture$0, capture$1, capture$2)
}

@implementation RxInternalOperatorsOperatorReplay_7

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                                           withRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$1 {
  RxInternalOperatorsOperatorReplay_7_initWithJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(self, capture$0, capture$1);
  return self;
}

- (void)callWithId:(RxSubscriber *)child {
  for (; ; ) {
    RxInternalOperatorsOperatorReplay_ReplaySubscriber *r = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$curr_)) get];
    if (r == nil) {
      RxInternalOperatorsOperatorReplay_ReplaySubscriber *u = create_RxInternalOperatorsOperatorReplay_ReplaySubscriber_initWithRxInternalOperatorsOperatorReplay_ReplayBuffer_([((id<RxFunctionsFunc0>) nil_chk(val$bufferFactory_)) call]);
      [u init__];
      if (![val$curr_ compareAndSetWithId:r withId:u]) {
        continue;
      }
      r = u;
    }
    RxInternalOperatorsOperatorReplay_InnerProducer *inner = create_RxInternalOperatorsOperatorReplay_InnerProducer_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_withRxSubscriber_(r, child);
    [r addWithRxInternalOperatorsOperatorReplay_InnerProducer:inner];
    [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:inner];
    [((id<RxInternalOperatorsOperatorReplay_ReplayBuffer>) nil_chk(r->buffer_)) replayWithRxInternalOperatorsOperatorReplay_InnerProducer:inner];
    [child setProducerWithRxProducer:inner];
    break;
  }
}

- (void)dealloc {
  RELEASE_(val$curr_);
  RELEASE_(val$bufferFactory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:withRxFunctionsFunc0:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$curr_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$bufferFactory_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OperatorReplay$ReplaySubscriber<TT;>;>;", "Lrx/functions/Func0<+Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;>;", "LRxInternalOperatorsOperatorReplay;", "createWithRxObservable:withRxFunctionsFunc0:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_7 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 2, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorReplay_7;
}

@end

void RxInternalOperatorsOperatorReplay_7_initWithJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(RxInternalOperatorsOperatorReplay_7 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, id<RxFunctionsFunc0> capture$1) {
  JreStrongAssign(&self->val$curr_, capture$0);
  JreStrongAssign(&self->val$bufferFactory_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorReplay_7 *new_RxInternalOperatorsOperatorReplay_7_initWithJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(JavaUtilConcurrentAtomicAtomicReference *capture$0, id<RxFunctionsFunc0> capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_7, initWithJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_, capture$0, capture$1)
}

RxInternalOperatorsOperatorReplay_7 *create_RxInternalOperatorsOperatorReplay_7_initWithJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_(JavaUtilConcurrentAtomicAtomicReference *capture$0, id<RxFunctionsFunc0> capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_7, initWithJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsFunc0_, capture$0, capture$1)
}

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorReplay_ReplaySubscriber)

IOSObjectArray *RxInternalOperatorsOperatorReplay_ReplaySubscriber_EMPTY;
IOSObjectArray *RxInternalOperatorsOperatorReplay_ReplaySubscriber_TERMINATED;

@implementation RxInternalOperatorsOperatorReplay_ReplaySubscriber

- (instancetype)initWithRxInternalOperatorsOperatorReplay_ReplayBuffer:(id<RxInternalOperatorsOperatorReplay_ReplayBuffer>)buffer {
  RxInternalOperatorsOperatorReplay_ReplaySubscriber_initWithRxInternalOperatorsOperatorReplay_ReplayBuffer_(self, buffer);
  return self;
}

- (void)init__ {
  [self addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(create_RxInternalOperatorsOperatorReplay_ReplaySubscriber_1_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_(self))];
}

- (jboolean)addWithRxInternalOperatorsOperatorReplay_InnerProducer:(RxInternalOperatorsOperatorReplay_InnerProducer *)producer {
  if (producer == nil) {
    @throw create_JavaLangNullPointerException_init();
  }
  if (JreLoadVolatileBoolean(&terminated_)) {
    return false;
  }
  @synchronized(producers_) {
    if (JreLoadVolatileBoolean(&terminated_)) {
      return false;
    }
    [((RxInternalUtilOpenHashSet *) nil_chk(producers_)) addWithId:producer];
    producersVersion_++;
  }
  return true;
}

- (void)removeWithRxInternalOperatorsOperatorReplay_InnerProducer:(RxInternalOperatorsOperatorReplay_InnerProducer *)producer {
  if (JreLoadVolatileBoolean(&terminated_)) {
    return;
  }
  @synchronized(producers_) {
    if (JreLoadVolatileBoolean(&terminated_)) {
      return;
    }
    [((RxInternalUtilOpenHashSet *) nil_chk(producers_)) removeWithId:producer];
    if ([producers_ isEmpty]) {
      JreStrongAssign(&producersCache_, RxInternalOperatorsOperatorReplay_ReplaySubscriber_EMPTY);
    }
    producersVersion_++;
  }
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  id<RxProducer> p0 = JreLoadVolatileId(&producer_ReplaySubscriber_);
  if (p0 != nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Only a single producer can be set on a Subscriber.");
  }
  JreVolatileStrongAssign(&producer_ReplaySubscriber_, p);
  [self manageRequestsWithRxInternalOperatorsOperatorReplay_InnerProducer:nil];
  [self replay];
}

- (void)onNextWithId:(id)t {
  if (!done_) {
    [((id<RxInternalOperatorsOperatorReplay_ReplayBuffer>) nil_chk(buffer_)) nextWithId:t];
    [self replay];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (!done_) {
    done_ = true;
    @try {
      [((id<RxInternalOperatorsOperatorReplay_ReplayBuffer>) nil_chk(buffer_)) errorWithNSException:e];
      [self replay];
    }
    @finally {
      [self unsubscribe];
    }
  }
}

- (void)onCompleted {
  if (!done_) {
    done_ = true;
    @try {
      [((id<RxInternalOperatorsOperatorReplay_ReplayBuffer>) nil_chk(buffer_)) complete];
      [self replay];
    }
    @finally {
      [self unsubscribe];
    }
  }
}

- (void)manageRequestsWithRxInternalOperatorsOperatorReplay_InnerProducer:(RxInternalOperatorsOperatorReplay_InnerProducer *)inner {
  if ([self isUnsubscribed]) {
    return;
  }
  @synchronized(self) {
    if (emitting_) {
      if (inner != nil) {
        id<JavaUtilList> q = coordinationQueue_;
        if (q == nil) {
          q = create_JavaUtilArrayList_init();
          JreStrongAssign(&coordinationQueue_, q);
        }
        [q addWithId:inner];
      }
      else {
        coordinateAll_ = true;
      }
      missed_ = true;
      return;
    }
    emitting_ = true;
  }
  jlong ri = maxChildRequested_;
  jlong maxTotalRequested;
  if (inner != nil) {
    maxTotalRequested = JavaLangMath_maxWithLong_withLong_(ri, [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(inner->totalRequested_)) get]);
  }
  else {
    maxTotalRequested = ri;
    IOSObjectArray *a = [self copyProducers];
    {
      IOSObjectArray *a__ = a;
      RxInternalOperatorsOperatorReplay_InnerProducer * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      RxInternalOperatorsOperatorReplay_InnerProducer * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        RxInternalOperatorsOperatorReplay_InnerProducer *rp = *b__++;
        if (rp != nil) {
          maxTotalRequested = JavaLangMath_maxWithLong_withLong_(maxTotalRequested, [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(rp->totalRequested_)) get]);
        }
      }
    }
  }
  [self makeRequestWithLong:maxTotalRequested withLong:ri];
  for (; ; ) {
    if ([self isUnsubscribed]) {
      return;
    }
    id<JavaUtilList> q;
    jboolean all;
    @synchronized(self) {
      if (!missed_) {
        emitting_ = false;
        return;
      }
      missed_ = false;
      q = coordinationQueue_;
      JreStrongAssign(&coordinationQueue_, nil);
      all = coordinateAll_;
      coordinateAll_ = false;
    }
    ri = maxChildRequested_;
    maxTotalRequested = ri;
    if (q != nil) {
      for (RxInternalOperatorsOperatorReplay_InnerProducer * __strong rp in q) {
        maxTotalRequested = JavaLangMath_maxWithLong_withLong_(maxTotalRequested, [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(((RxInternalOperatorsOperatorReplay_InnerProducer *) nil_chk(rp))->totalRequested_)) get]);
      }
    }
    if (all) {
      IOSObjectArray *a = [self copyProducers];
      {
        IOSObjectArray *a__ = a;
        RxInternalOperatorsOperatorReplay_InnerProducer * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        RxInternalOperatorsOperatorReplay_InnerProducer * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          RxInternalOperatorsOperatorReplay_InnerProducer *rp = *b__++;
          if (rp != nil) {
            maxTotalRequested = JavaLangMath_maxWithLong_withLong_(maxTotalRequested, [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(rp->totalRequested_)) get]);
          }
        }
      }
    }
    [self makeRequestWithLong:maxTotalRequested withLong:ri];
  }
}

- (IOSObjectArray *)copyProducers {
  @synchronized(producers_) {
    IOSObjectArray *a = [((RxInternalUtilOpenHashSet *) nil_chk(producers_)) values];
    jint n = ((IOSObjectArray *) nil_chk(a))->size_;
    IOSObjectArray *result = [IOSObjectArray arrayWithLength:n type:RxInternalOperatorsOperatorReplay_InnerProducer_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 0, n);
    return result;
  }
}

- (void)makeRequestWithLong:(jlong)maxTotalRequests
                   withLong:(jlong)previousTotalRequests {
  jlong ur = maxUpstreamRequested_;
  id<RxProducer> p = JreLoadVolatileId(&producer_ReplaySubscriber_);
  jlong diff = maxTotalRequests - previousTotalRequests;
  if (diff != 0) {
    maxChildRequested_ = maxTotalRequests;
    if (p != nil) {
      if (ur != 0LL) {
        maxUpstreamRequested_ = 0LL;
        [p requestWithLong:ur + diff];
      }
      else {
        [p requestWithLong:diff];
      }
    }
    else {
      jlong u = ur + diff;
      if (u < 0) {
        u = JavaLangLong_MAX_VALUE;
      }
      maxUpstreamRequested_ = u;
    }
  }
  else if (ur != 0LL && p != nil) {
    maxUpstreamRequested_ = 0LL;
    [p requestWithLong:ur];
  }
}

- (void)replay {
  IOSObjectArray *pc = producersCache_;
  if (producersCacheVersion_ != JreLoadVolatileLong(&producersVersion_)) {
    @synchronized(producers_) {
      pc = producersCache_;
      IOSObjectArray *a = [((RxInternalUtilOpenHashSet *) nil_chk(producers_)) values];
      jint n = ((IOSObjectArray *) nil_chk(a))->size_;
      if (((IOSObjectArray *) nil_chk(pc))->size_ != n) {
        pc = [IOSObjectArray arrayWithLength:n type:RxInternalOperatorsOperatorReplay_InnerProducer_class_()];
        JreStrongAssign(&producersCache_, pc);
      }
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, pc, 0, n);
      producersCacheVersion_ = JreLoadVolatileLong(&producersVersion_);
    }
  }
  id<RxInternalOperatorsOperatorReplay_ReplayBuffer> b = buffer_;
  {
    IOSObjectArray *a__ = pc;
    RxInternalOperatorsOperatorReplay_InnerProducer * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    RxInternalOperatorsOperatorReplay_InnerProducer * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      RxInternalOperatorsOperatorReplay_InnerProducer *rp = *b__++;
      if (rp != nil) {
        [((id<RxInternalOperatorsOperatorReplay_ReplayBuffer>) nil_chk(b)) replayWithRxInternalOperatorsOperatorReplay_InnerProducer:rp];
      }
    }
  }
}

- (void)__javaClone:(RxInternalOperatorsOperatorReplay_ReplaySubscriber *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&producer_ReplaySubscriber_, &original->producer_ReplaySubscriber_);
}

- (void)dealloc {
  RELEASE_(buffer_);
  RELEASE_(producers_);
  RELEASE_(producersCache_);
  RELEASE_(shouldConnect_);
  JreReleaseVolatile(&producer_ReplaySubscriber_);
  RELEASE_(coordinationQueue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x0, 6, 4, -1, 7, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 4, -1, 7, -1, -1 },
    { NULL, "[LRxInternalOperatorsOperatorReplay_InnerProducer;", 0x0, -1, -1, -1, 16, -1, -1 },
    { NULL, "V", 0x0, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOperatorReplay_ReplayBuffer:);
  methods[1].selector = @selector(init__);
  methods[2].selector = @selector(addWithRxInternalOperatorsOperatorReplay_InnerProducer:);
  methods[3].selector = @selector(removeWithRxInternalOperatorsOperatorReplay_InnerProducer:);
  methods[4].selector = @selector(setProducerWithRxProducer:);
  methods[5].selector = @selector(onNextWithId:);
  methods[6].selector = @selector(onErrorWithNSException:);
  methods[7].selector = @selector(onCompleted);
  methods[8].selector = @selector(manageRequestsWithRxInternalOperatorsOperatorReplay_InnerProducer:);
  methods[9].selector = @selector(copyProducers);
  methods[10].selector = @selector(makeRequestWithLong:withLong:);
  methods[11].selector = @selector(replay);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "buffer_", "LRxInternalOperatorsOperatorReplay_ReplayBuffer;", .constantValue.asLong = 0, 0x10, -1, -1, 19, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "EMPTY", "[LRxInternalOperatorsOperatorReplay_InnerProducer;", .constantValue.asLong = 0, 0x18, -1, 20, -1, -1 },
    { "TERMINATED", "[LRxInternalOperatorsOperatorReplay_InnerProducer;", .constantValue.asLong = 0, 0x18, -1, 21, -1, -1 },
    { "terminated_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "producers_", "LRxInternalUtilOpenHashSet;", .constantValue.asLong = 0, 0x10, -1, -1, 22, -1 },
    { "producersCache_", "[LRxInternalOperatorsOperatorReplay_InnerProducer;", .constantValue.asLong = 0, 0x0, -1, -1, 23, -1 },
    { "producersVersion_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "producersCacheVersion_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "shouldConnect_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "emitting_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "missed_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "maxChildRequested_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "maxUpstreamRequested_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "producer_ReplaySubscriber_", "LRxProducer;", .constantValue.asLong = 0, 0x40, 24, -1, -1, -1 },
    { "coordinationQueue_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 25, -1 },
    { "coordinateAll_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorReplay_ReplayBuffer;", "(Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;)V", "init", "add", "LRxInternalOperatorsOperatorReplay_InnerProducer;", "(Lrx/internal/operators/OperatorReplay$InnerProducer<TT;>;)Z", "remove", "(Lrx/internal/operators/OperatorReplay$InnerProducer<TT;>;)V", "setProducer", "LRxProducer;", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "manageRequests", "()[Lrx/internal/operators/OperatorReplay$InnerProducer<TT;>;", "makeRequest", "JJ", "Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;", &RxInternalOperatorsOperatorReplay_ReplaySubscriber_EMPTY, &RxInternalOperatorsOperatorReplay_ReplaySubscriber_TERMINATED, "Lrx/internal/util/OpenHashSet<Lrx/internal/operators/OperatorReplay$InnerProducer<TT;>;>;", "[Lrx/internal/operators/OperatorReplay$InnerProducer<TT;>;", "producer", "Ljava/util/List<Lrx/internal/operators/OperatorReplay$InnerProducer<TT;>;>;", "LRxInternalOperatorsOperatorReplay;", "<T:Ljava/lang/Object;>Lrx/Subscriber<TT;>;Lrx/Subscription;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_ReplaySubscriber = { "ReplaySubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 12, 17, 26, -1, -1, 27, -1 };
  return &_RxInternalOperatorsOperatorReplay_ReplaySubscriber;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorReplay_ReplaySubscriber class]) {
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorReplay_ReplaySubscriber_EMPTY, [IOSObjectArray newArrayWithLength:0 type:RxInternalOperatorsOperatorReplay_InnerProducer_class_()]);
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorReplay_ReplaySubscriber_TERMINATED, [IOSObjectArray newArrayWithLength:0 type:RxInternalOperatorsOperatorReplay_InnerProducer_class_()]);
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorReplay_ReplaySubscriber)
  }
}

@end

void RxInternalOperatorsOperatorReplay_ReplaySubscriber_initWithRxInternalOperatorsOperatorReplay_ReplayBuffer_(RxInternalOperatorsOperatorReplay_ReplaySubscriber *self, id<RxInternalOperatorsOperatorReplay_ReplayBuffer> buffer) {
  RxSubscriber_init(self);
  JreStrongAssign(&self->buffer_, buffer);
  JreStrongAssignAndConsume(&self->producers_, new_RxInternalUtilOpenHashSet_init());
  JreStrongAssign(&self->producersCache_, RxInternalOperatorsOperatorReplay_ReplaySubscriber_EMPTY);
  JreStrongAssignAndConsume(&self->shouldConnect_, new_JavaUtilConcurrentAtomicAtomicBoolean_init());
  [self requestWithLong:0];
}

RxInternalOperatorsOperatorReplay_ReplaySubscriber *new_RxInternalOperatorsOperatorReplay_ReplaySubscriber_initWithRxInternalOperatorsOperatorReplay_ReplayBuffer_(id<RxInternalOperatorsOperatorReplay_ReplayBuffer> buffer) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_ReplaySubscriber, initWithRxInternalOperatorsOperatorReplay_ReplayBuffer_, buffer)
}

RxInternalOperatorsOperatorReplay_ReplaySubscriber *create_RxInternalOperatorsOperatorReplay_ReplaySubscriber_initWithRxInternalOperatorsOperatorReplay_ReplayBuffer_(id<RxInternalOperatorsOperatorReplay_ReplayBuffer> buffer) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_ReplaySubscriber, initWithRxInternalOperatorsOperatorReplay_ReplayBuffer_, buffer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_ReplaySubscriber)

@implementation RxInternalOperatorsOperatorReplay_ReplaySubscriber_1

- (instancetype)initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber:(RxInternalOperatorsOperatorReplay_ReplaySubscriber *)outer$ {
  RxInternalOperatorsOperatorReplay_ReplaySubscriber_1_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_(self, outer$);
  return self;
}

- (void)call {
  if (!JreLoadVolatileBoolean(&this$0_->terminated_)) {
    @synchronized(this$0_->producers_) {
      if (!JreLoadVolatileBoolean(&this$0_->terminated_)) {
        [((RxInternalUtilOpenHashSet *) nil_chk(this$0_->producers_)) terminate];
        this$0_->producersVersion_++;
        JreAssignVolatileBoolean(&this$0_->terminated_, true);
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorReplay_ReplaySubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Lrx/internal/operators/OperatorReplay$ReplaySubscriber<TT;>;", "LRxInternalOperatorsOperatorReplay_ReplaySubscriber;", "init__" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_ReplaySubscriber_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxInternalOperatorsOperatorReplay_ReplaySubscriber_1;
}

@end

void RxInternalOperatorsOperatorReplay_ReplaySubscriber_1_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_(RxInternalOperatorsOperatorReplay_ReplaySubscriber_1 *self, RxInternalOperatorsOperatorReplay_ReplaySubscriber *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorReplay_ReplaySubscriber_1 *new_RxInternalOperatorsOperatorReplay_ReplaySubscriber_1_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_(RxInternalOperatorsOperatorReplay_ReplaySubscriber *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_ReplaySubscriber_1, initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_, outer$)
}

RxInternalOperatorsOperatorReplay_ReplaySubscriber_1 *create_RxInternalOperatorsOperatorReplay_ReplaySubscriber_1_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_(RxInternalOperatorsOperatorReplay_ReplaySubscriber *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_ReplaySubscriber_1, initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_, outer$)
}

@implementation RxInternalOperatorsOperatorReplay_InnerProducer

- (instancetype)initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber:(RxInternalOperatorsOperatorReplay_ReplaySubscriber *)parent
                                                          withRxSubscriber:(RxSubscriber *)child {
  RxInternalOperatorsOperatorReplay_InnerProducer_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_withRxSubscriber_(self, parent, child);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if (n < 0) {
    return;
  }
  for (; ; ) {
    jlong r = [self get];
    if (r == RxInternalOperatorsOperatorReplay_InnerProducer_UNSUBSCRIBED) {
      return;
    }
    if (r >= 0LL && n == 0) {
      return;
    }
    jlong u = r + n;
    if (u < 0) {
      u = JavaLangLong_MAX_VALUE;
    }
    if ([self compareAndSetWithLong:r withLong:u]) {
      [self addTotalRequestedWithLong:n];
      [((RxInternalOperatorsOperatorReplay_ReplaySubscriber *) nil_chk(parent_)) manageRequestsWithRxInternalOperatorsOperatorReplay_InnerProducer:self];
      [((id<RxInternalOperatorsOperatorReplay_ReplayBuffer>) nil_chk(parent_->buffer_)) replayWithRxInternalOperatorsOperatorReplay_InnerProducer:self];
      return;
    }
  }
}

- (void)addTotalRequestedWithLong:(jlong)n {
  for (; ; ) {
    jlong r = [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(totalRequested_)) get];
    jlong u = r + n;
    if (u < 0) {
      u = JavaLangLong_MAX_VALUE;
    }
    if ([totalRequested_ compareAndSetWithLong:r withLong:u]) {
      return;
    }
  }
}

- (jlong)producedWithLong:(jlong)n {
  if (n <= 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Cant produce zero or less");
  }
  for (; ; ) {
    jlong r = [self get];
    if (r == RxInternalOperatorsOperatorReplay_InnerProducer_UNSUBSCRIBED) {
      return RxInternalOperatorsOperatorReplay_InnerProducer_UNSUBSCRIBED;
    }
    jlong u = r - n;
    if (u < 0) {
      @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$J$JC", @"More produced (", n, @") than requested (", r, ')'));
    }
    if ([self compareAndSetWithLong:r withLong:u]) {
      return u;
    }
  }
}

- (jboolean)isUnsubscribed {
  return [self get] == RxInternalOperatorsOperatorReplay_InnerProducer_UNSUBSCRIBED;
}

- (void)unsubscribe {
  jlong r = [self get];
  if (r != RxInternalOperatorsOperatorReplay_InnerProducer_UNSUBSCRIBED) {
    r = [self getAndSetWithLong:RxInternalOperatorsOperatorReplay_InnerProducer_UNSUBSCRIBED];
    if (r != RxInternalOperatorsOperatorReplay_InnerProducer_UNSUBSCRIBED) {
      [((RxInternalOperatorsOperatorReplay_ReplaySubscriber *) nil_chk(parent_)) removeWithRxInternalOperatorsOperatorReplay_InnerProducer:self];
      [parent_ manageRequestsWithRxInternalOperatorsOperatorReplay_InnerProducer:self];
      child_ = nil;
    }
  }
}

- (id)index {
  return index_;
}

- (void)__javaClone:(RxInternalOperatorsOperatorReplay_InnerProducer *)original {
  [super __javaClone:original];
  [child_ release];
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(index_);
  RELEASE_(totalRequested_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 4, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber:withRxSubscriber:);
  methods[1].selector = @selector(requestWithLong:);
  methods[2].selector = @selector(addTotalRequestedWithLong:);
  methods[3].selector = @selector(producedWithLong:);
  methods[4].selector = @selector(isUnsubscribed);
  methods[5].selector = @selector(unsubscribe);
  methods[6].selector = @selector(index);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalOperatorsOperatorReplay_InnerProducer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "parent_", "LRxInternalOperatorsOperatorReplay_ReplaySubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x0, -1, -1, 8, -1 },
    { "index_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "totalRequested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "emitting_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "missed_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "UNSUBSCRIBED", "J", .constantValue.asLong = RxInternalOperatorsOperatorReplay_InnerProducer_UNSUBSCRIBED, 0x18, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorReplay_ReplaySubscriber;LRxSubscriber;", "(Lrx/internal/operators/OperatorReplay$ReplaySubscriber<TT;>;Lrx/Subscriber<-TT;>;)V", "request", "J", "addTotalRequested", "produced", "<U:Ljava/lang/Object;>()TU;", "Lrx/internal/operators/OperatorReplay$ReplaySubscriber<TT;>;", "Lrx/Subscriber<-TT;>;", "LRxInternalOperatorsOperatorReplay;", "<T:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicLong;Lrx/Producer;Lrx/Subscription;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_InnerProducer = { "InnerProducer", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 7, 8, 9, -1, -1, 10, -1 };
  return &_RxInternalOperatorsOperatorReplay_InnerProducer;
}

@end

void RxInternalOperatorsOperatorReplay_InnerProducer_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_withRxSubscriber_(RxInternalOperatorsOperatorReplay_InnerProducer *self, RxInternalOperatorsOperatorReplay_ReplaySubscriber *parent, RxSubscriber *child) {
  JavaUtilConcurrentAtomicAtomicLong_init(self);
  JreStrongAssign(&self->parent_, parent);
  self->child_ = child;
  JreStrongAssignAndConsume(&self->totalRequested_, new_JavaUtilConcurrentAtomicAtomicLong_init());
}

RxInternalOperatorsOperatorReplay_InnerProducer *new_RxInternalOperatorsOperatorReplay_InnerProducer_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_withRxSubscriber_(RxInternalOperatorsOperatorReplay_ReplaySubscriber *parent, RxSubscriber *child) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_InnerProducer, initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_withRxSubscriber_, parent, child)
}

RxInternalOperatorsOperatorReplay_InnerProducer *create_RxInternalOperatorsOperatorReplay_InnerProducer_initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_withRxSubscriber_(RxInternalOperatorsOperatorReplay_ReplaySubscriber *parent, RxSubscriber *child) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_InnerProducer, initWithRxInternalOperatorsOperatorReplay_ReplaySubscriber_withRxSubscriber_, parent, child)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_InnerProducer)

@implementation RxInternalOperatorsOperatorReplay_ReplayBuffer

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(nextWithId:);
  methods[1].selector = @selector(errorWithNSException:);
  methods[2].selector = @selector(complete);
  methods[3].selector = @selector(replayWithRxInternalOperatorsOperatorReplay_InnerProducer:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "next", "LNSObject;", "(TT;)V", "error", "LNSException;", "replay", "LRxInternalOperatorsOperatorReplay_InnerProducer;", "(Lrx/internal/operators/OperatorReplay$InnerProducer<TT;>;)V", "LRxInternalOperatorsOperatorReplay;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_ReplayBuffer = { "ReplayBuffer", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x608, 4, 0, 8, -1, -1, 9, -1 };
  return &_RxInternalOperatorsOperatorReplay_ReplayBuffer;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_ReplayBuffer)

@implementation RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer

- (instancetype)initWithInt:(jint)capacityHint {
  RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer_initWithInt_(self, capacityHint);
  return self;
}

- (void)nextWithId:(id)value {
  [self addWithId:RxInternalOperatorsNotificationLite_nextWithId_(value)];
  size_UnboundedReplayBuffer_++;
}

- (void)errorWithNSException:(NSException *)e {
  [self addWithId:RxInternalOperatorsNotificationLite_errorWithNSException_(e)];
  size_UnboundedReplayBuffer_++;
}

- (void)complete {
  [self addWithId:RxInternalOperatorsNotificationLite_completed()];
  size_UnboundedReplayBuffer_++;
}

- (void)replayWithRxInternalOperatorsOperatorReplay_InnerProducer:(RxInternalOperatorsOperatorReplay_InnerProducer *)output {
  @synchronized(output) {
    if (((RxInternalOperatorsOperatorReplay_InnerProducer *) nil_chk(output))->emitting_) {
      output->missed_ = true;
      return;
    }
    output->emitting_ = true;
  }
  for (; ; ) {
    if ([output isUnsubscribed]) {
      return;
    }
    jint sourceIndex = JreLoadVolatileInt(&size_UnboundedReplayBuffer_);
    JavaLangInteger *destinationIndexObject = [output index];
    jint destinationIndex = destinationIndexObject != nil ? [destinationIndexObject intValue] : 0;
    RxSubscriber *child = output->child_;
    if (child == nil) {
      return;
    }
    jlong r = [output get];
    jlong e = 0LL;
    while (e != r && destinationIndex < sourceIndex) {
      id o = [self getWithInt:destinationIndex];
      @try {
        if (RxInternalOperatorsNotificationLite_acceptWithRxObserver_withId_(child, o)) {
          return;
        }
      }
      @catch (NSException *err) {
        RxExceptionsExceptions_throwIfFatalWithNSException_(err);
        [output unsubscribe];
        if (!RxInternalOperatorsNotificationLite_isErrorWithId_(o) && !RxInternalOperatorsNotificationLite_isCompletedWithId_(o)) {
          [child onErrorWithNSException:RxExceptionsOnErrorThrowable_addValueAsLastCauseWithNSException_withId_(err, RxInternalOperatorsNotificationLite_getValueWithId_(o))];
        }
        return;
      }
      if ([output isUnsubscribed]) {
        return;
      }
      destinationIndex++;
      e++;
    }
    if (e != 0LL) {
      JreStrongAssign(&output->index_, JavaLangInteger_valueOfWithInt_(destinationIndex));
      if (r != JavaLangLong_MAX_VALUE) {
        [output producedWithLong:e];
      }
    }
    @synchronized(output) {
      if (!output->missed_) {
        output->emitting_ = false;
        return;
      }
      output->missed_ = false;
    }
  }
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(nextWithId:);
  methods[2].selector = @selector(errorWithNSException:);
  methods[3].selector = @selector(complete);
  methods[4].selector = @selector(replayWithRxInternalOperatorsOperatorReplay_InnerProducer:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "size_UnboundedReplayBuffer_", "I", .constantValue.asLong = 0, 0x40, 9, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "next", "LNSObject;", "(TT;)V", "error", "LNSException;", "replay", "LRxInternalOperatorsOperatorReplay_InnerProducer;", "(Lrx/internal/operators/OperatorReplay$InnerProducer<TT;>;)V", "size", "LRxInternalOperatorsOperatorReplay;", "<T:Ljava/lang/Object;>Ljava/util/ArrayList<Ljava/lang/Object;>;Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer = { "UnboundedReplayBuffer", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 5, 2, 10, -1, -1, 11, -1 };
  return &_RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer;
}

@end

void RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer_initWithInt_(RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer *self, jint capacityHint) {
  JavaUtilArrayList_initWithInt_(self, capacityHint);
}

RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer *new_RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer_initWithInt_(jint capacityHint) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer, initWithInt_, capacityHint)
}

RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer *create_RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer_initWithInt_(jint capacityHint) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer, initWithInt_, capacityHint)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_UnboundedReplayBuffer)

@implementation RxInternalOperatorsOperatorReplay_Node

- (instancetype)initWithId:(id)value
                  withLong:(jlong)index {
  RxInternalOperatorsOperatorReplay_Node_initWithId_withLong_(self, value, index);
  return self;
}

- (void)dealloc {
  RELEASE_(value_Node_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalOperatorsOperatorReplay_Node_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "value_Node_", "LNSObject;", .constantValue.asLong = 0, 0x10, 1, -1, -1, -1 },
    { "index_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;J", "value", "LRxInternalOperatorsOperatorReplay;", "Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OperatorReplay$Node;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_Node = { "Node", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 1, 3, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorReplay_Node;
}

@end

void RxInternalOperatorsOperatorReplay_Node_initWithId_withLong_(RxInternalOperatorsOperatorReplay_Node *self, id value, jlong index) {
  JavaUtilConcurrentAtomicAtomicReference_init(self);
  JreStrongAssign(&self->value_Node_, value);
  self->index_ = index;
}

RxInternalOperatorsOperatorReplay_Node *new_RxInternalOperatorsOperatorReplay_Node_initWithId_withLong_(id value, jlong index) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_Node, initWithId_withLong_, value, index)
}

RxInternalOperatorsOperatorReplay_Node *create_RxInternalOperatorsOperatorReplay_Node_initWithId_withLong_(id value, jlong index) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_Node, initWithId_withLong_, value, index)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_Node)

@implementation RxInternalOperatorsOperatorReplay_BoundedReplayBuffer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addLastWithRxInternalOperatorsOperatorReplay_Node:(RxInternalOperatorsOperatorReplay_Node *)n {
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_addLastWithRxInternalOperatorsOperatorReplay_Node_(self, n);
}

- (void)removeFirst {
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_removeFirst(self);
}

- (void)removeSomeWithInt:(jint)n {
  RxInternalOperatorsOperatorReplay_Node *head = [self get];
  while (n > 0) {
    head = [((RxInternalOperatorsOperatorReplay_Node *) nil_chk(head)) get];
    n--;
    size_--;
  }
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_setFirstWithRxInternalOperatorsOperatorReplay_Node_(self, head);
}

- (void)setFirstWithRxInternalOperatorsOperatorReplay_Node:(RxInternalOperatorsOperatorReplay_Node *)n {
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_setFirstWithRxInternalOperatorsOperatorReplay_Node_(self, n);
}

- (RxInternalOperatorsOperatorReplay_Node *)getInitialHead {
  return [self get];
}

- (void)nextWithId:(id)value {
  id o = [self enterTransformWithId:RxInternalOperatorsNotificationLite_nextWithId_(value)];
  RxInternalOperatorsOperatorReplay_Node *n = create_RxInternalOperatorsOperatorReplay_Node_initWithId_withLong_(o, ++index_);
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_addLastWithRxInternalOperatorsOperatorReplay_Node_(self, n);
  [self truncate];
}

- (void)errorWithNSException:(NSException *)e {
  id o = [self enterTransformWithId:RxInternalOperatorsNotificationLite_errorWithNSException_(e)];
  RxInternalOperatorsOperatorReplay_Node *n = create_RxInternalOperatorsOperatorReplay_Node_initWithId_withLong_(o, ++index_);
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_addLastWithRxInternalOperatorsOperatorReplay_Node_(self, n);
  [self truncateFinal];
}

- (void)complete {
  id o = [self enterTransformWithId:RxInternalOperatorsNotificationLite_completed()];
  RxInternalOperatorsOperatorReplay_Node *n = create_RxInternalOperatorsOperatorReplay_Node_initWithId_withLong_(o, ++index_);
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_addLastWithRxInternalOperatorsOperatorReplay_Node_(self, n);
  [self truncateFinal];
}

- (void)replayWithRxInternalOperatorsOperatorReplay_InnerProducer:(RxInternalOperatorsOperatorReplay_InnerProducer *)output {
  @synchronized(output) {
    if (((RxInternalOperatorsOperatorReplay_InnerProducer *) nil_chk(output))->emitting_) {
      output->missed_ = true;
      return;
    }
    output->emitting_ = true;
  }
  for (; ; ) {
    if ([output isUnsubscribed]) {
      return;
    }
    RxInternalOperatorsOperatorReplay_Node *node = [output index];
    if (node == nil) {
      node = [self getInitialHead];
      JreStrongAssign(&output->index_, node);
      [output addTotalRequestedWithLong:((RxInternalOperatorsOperatorReplay_Node *) nil_chk(node))->index_];
    }
    if ([output isUnsubscribed]) {
      return;
    }
    RxSubscriber *child = output->child_;
    if (child == nil) {
      return;
    }
    jlong r = [output get];
    jlong e = 0LL;
    while (e != r) {
      RxInternalOperatorsOperatorReplay_Node *v = [node get];
      if (v != nil) {
        id o = [self leaveTransformWithId:v->value_Node_];
        @try {
          if (RxInternalOperatorsNotificationLite_acceptWithRxObserver_withId_(child, o)) {
            JreStrongAssign(&output->index_, nil);
            return;
          }
        }
        @catch (NSException *err) {
          JreStrongAssign(&output->index_, nil);
          RxExceptionsExceptions_throwIfFatalWithNSException_(err);
          [output unsubscribe];
          if (!RxInternalOperatorsNotificationLite_isErrorWithId_(o) && !RxInternalOperatorsNotificationLite_isCompletedWithId_(o)) {
            [child onErrorWithNSException:RxExceptionsOnErrorThrowable_addValueAsLastCauseWithNSException_withId_(err, RxInternalOperatorsNotificationLite_getValueWithId_(o))];
          }
          return;
        }
        e++;
        node = v;
      }
      else {
        break;
      }
      if ([output isUnsubscribed]) {
        return;
      }
    }
    if (e != 0LL) {
      JreStrongAssign(&output->index_, node);
      if (r != JavaLangLong_MAX_VALUE) {
        [output producedWithLong:e];
      }
    }
    @synchronized(output) {
      if (!output->missed_) {
        output->emitting_ = false;
        return;
      }
      output->missed_ = false;
    }
  }
}

- (id)enterTransformWithId:(id)value {
  return value;
}

- (id)leaveTransformWithId:(id)value {
  return value;
}

- (void)truncate {
}

- (void)truncateFinal {
}

- (void)collectWithJavaUtilCollection:(id<JavaUtilCollection>)output {
  RxInternalOperatorsOperatorReplay_Node *n = [self getInitialHead];
  for (; ; ) {
    RxInternalOperatorsOperatorReplay_Node *next = [((RxInternalOperatorsOperatorReplay_Node *) nil_chk(n)) get];
    if (next != nil) {
      id o = next->value_Node_;
      id v = [self leaveTransformWithId:o];
      if (RxInternalOperatorsNotificationLite_isCompletedWithId_(v) || RxInternalOperatorsNotificationLite_isErrorWithId_(v)) {
        break;
      }
      [((id<JavaUtilCollection>) nil_chk(output)) addWithId:RxInternalOperatorsNotificationLite_getValueWithId_(v)];
      n = next;
    }
    else {
      break;
    }
  }
}

- (jboolean)hasError {
  return ((RxInternalOperatorsOperatorReplay_Node *) nil_chk(tail_))->value_Node_ != nil && RxInternalOperatorsNotificationLite_isErrorWithId_([self leaveTransformWithId:tail_->value_Node_]);
}

- (jboolean)hasCompleted {
  return ((RxInternalOperatorsOperatorReplay_Node *) nil_chk(tail_))->value_Node_ != nil && RxInternalOperatorsNotificationLite_isCompletedWithId_([self leaveTransformWithId:tail_->value_Node_]);
}

- (void)dealloc {
  RELEASE_(tail_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 4, 1, -1, -1, -1, -1 },
    { NULL, "LRxInternalOperatorsOperatorReplay_Node;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x11, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 10, 11, -1, 12, -1, -1 },
    { NULL, "LNSObject;", 0x0, 13, 6, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, 14, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 15, 16, -1, 17, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addLastWithRxInternalOperatorsOperatorReplay_Node:);
  methods[2].selector = @selector(removeFirst);
  methods[3].selector = @selector(removeSomeWithInt:);
  methods[4].selector = @selector(setFirstWithRxInternalOperatorsOperatorReplay_Node:);
  methods[5].selector = @selector(getInitialHead);
  methods[6].selector = @selector(nextWithId:);
  methods[7].selector = @selector(errorWithNSException:);
  methods[8].selector = @selector(complete);
  methods[9].selector = @selector(replayWithRxInternalOperatorsOperatorReplay_InnerProducer:);
  methods[10].selector = @selector(enterTransformWithId:);
  methods[11].selector = @selector(leaveTransformWithId:);
  methods[12].selector = @selector(truncate);
  methods[13].selector = @selector(truncateFinal);
  methods[14].selector = @selector(collectWithJavaUtilCollection:);
  methods[15].selector = @selector(hasError);
  methods[16].selector = @selector(hasCompleted);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "tail_", "LRxInternalOperatorsOperatorReplay_Node;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "size_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "index_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addLast", "LRxInternalOperatorsOperatorReplay_Node;", "removeSome", "I", "setFirst", "next", "LNSObject;", "(TT;)V", "error", "LNSException;", "replay", "LRxInternalOperatorsOperatorReplay_InnerProducer;", "(Lrx/internal/operators/OperatorReplay$InnerProducer<TT;>;)V", "enterTransform", "leaveTransform", "collect", "LJavaUtilCollection;", "(Ljava/util/Collection<-TT;>;)V", "LRxInternalOperatorsOperatorReplay;", "<T:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OperatorReplay$Node;>;Lrx/internal/operators/OperatorReplay$ReplayBuffer<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_BoundedReplayBuffer = { "BoundedReplayBuffer", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8, 17, 4, 18, -1, -1, 19, -1 };
  return &_RxInternalOperatorsOperatorReplay_BoundedReplayBuffer;
}

@end

void RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_init(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer *self) {
  JavaUtilConcurrentAtomicAtomicReference_init(self);
  RxInternalOperatorsOperatorReplay_Node *n = create_RxInternalOperatorsOperatorReplay_Node_initWithId_withLong_(nil, 0);
  JreStrongAssign(&self->tail_, n);
  [self setWithId:n];
}

RxInternalOperatorsOperatorReplay_BoundedReplayBuffer *new_RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer, init)
}

RxInternalOperatorsOperatorReplay_BoundedReplayBuffer *create_RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer, init)
}

void RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_addLastWithRxInternalOperatorsOperatorReplay_Node_(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer *self, RxInternalOperatorsOperatorReplay_Node *n) {
  [((RxInternalOperatorsOperatorReplay_Node *) nil_chk(self->tail_)) setWithId:n];
  JreStrongAssign(&self->tail_, n);
  self->size_++;
}

void RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_removeFirst(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer *self) {
  RxInternalOperatorsOperatorReplay_Node *head = [self get];
  RxInternalOperatorsOperatorReplay_Node *next = [((RxInternalOperatorsOperatorReplay_Node *) nil_chk(head)) get];
  if (next == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Empty list!");
  }
  self->size_--;
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_setFirstWithRxInternalOperatorsOperatorReplay_Node_(self, next);
}

void RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_setFirstWithRxInternalOperatorsOperatorReplay_Node_(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer *self, RxInternalOperatorsOperatorReplay_Node *n) {
  [self setWithId:n];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_BoundedReplayBuffer)

@implementation RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer

- (instancetype)initWithInt:(jint)limit {
  RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer_initWithInt_(self, limit);
  return self;
}

- (void)truncate {
  if (size_ > limit_) {
    RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_removeFirst(self);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(truncate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "limit_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LRxInternalOperatorsOperatorReplay;", "<T:Ljava/lang/Object;>Lrx/internal/operators/OperatorReplay$BoundedReplayBuffer<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer = { "SizeBoundReplayBuffer", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 2, 2, 1, -1, -1, 2, -1 };
  return &_RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer;
}

@end

void RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer_initWithInt_(RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer *self, jint limit) {
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_init(self);
  self->limit_ = limit;
}

RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer *new_RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer_initWithInt_(jint limit) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer, initWithInt_, limit)
}

RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer *create_RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer_initWithInt_(jint limit) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer, initWithInt_, limit)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_SizeBoundReplayBuffer)

@implementation RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer

- (instancetype)initWithInt:(jint)limit
                   withLong:(jlong)maxAgeInMillis
            withRxScheduler:(RxScheduler *)scheduler {
  RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer_initWithInt_withLong_withRxScheduler_(self, limit, maxAgeInMillis, scheduler);
  return self;
}

- (id)enterTransformWithId:(id)value {
  return create_RxSchedulersTimestamped_initWithLong_withId_([((RxScheduler *) nil_chk(scheduler_)) now], value);
}

- (id)leaveTransformWithId:(id)value {
  return [((RxSchedulersTimestamped *) nil_chk(((RxSchedulersTimestamped *) cast_chk(value, [RxSchedulersTimestamped class])))) getValue];
}

- (RxInternalOperatorsOperatorReplay_Node *)getInitialHead {
  jlong timeLimit = [((RxScheduler *) nil_chk(scheduler_)) now] - maxAgeInMillis_;
  RxInternalOperatorsOperatorReplay_Node *prev = [self get];
  RxInternalOperatorsOperatorReplay_Node *next = [((RxInternalOperatorsOperatorReplay_Node *) nil_chk(prev)) get];
  while (next != nil && [((RxSchedulersTimestamped *) nil_chk(((RxSchedulersTimestamped *) cast_chk(next->value_Node_, [RxSchedulersTimestamped class])))) getTimestampMillis] <= timeLimit) {
    prev = next;
    next = [next get];
  }
  return prev;
}

- (void)truncate {
  jlong timeLimit = [((RxScheduler *) nil_chk(scheduler_)) now] - maxAgeInMillis_;
  RxInternalOperatorsOperatorReplay_Node *prev = [self get];
  RxInternalOperatorsOperatorReplay_Node *next = [((RxInternalOperatorsOperatorReplay_Node *) nil_chk(prev)) get];
  jint e = 0;
  for (; ; ) {
    if (next != nil) {
      if (size_ > limit_) {
        e++;
        size_--;
        prev = next;
        next = [next get];
      }
      else {
        RxSchedulersTimestamped *v = (RxSchedulersTimestamped *) cast_chk(next->value_Node_, [RxSchedulersTimestamped class]);
        if ([((RxSchedulersTimestamped *) nil_chk(v)) getTimestampMillis] <= timeLimit) {
          e++;
          size_--;
          prev = next;
          next = [next get];
        }
        else {
          break;
        }
      }
    }
    else {
      break;
    }
  }
  if (e != 0) {
    RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_setFirstWithRxInternalOperatorsOperatorReplay_Node_(self, prev);
  }
}

- (void)truncateFinal {
  jlong timeLimit = [((RxScheduler *) nil_chk(scheduler_)) now] - maxAgeInMillis_;
  RxInternalOperatorsOperatorReplay_Node *prev = [self get];
  RxInternalOperatorsOperatorReplay_Node *next = [((RxInternalOperatorsOperatorReplay_Node *) nil_chk(prev)) get];
  jint e = 0;
  for (; ; ) {
    if (next != nil && size_ > 1) {
      RxSchedulersTimestamped *v = (RxSchedulersTimestamped *) cast_chk(next->value_Node_, [RxSchedulersTimestamped class]);
      if ([((RxSchedulersTimestamped *) nil_chk(v)) getTimestampMillis] <= timeLimit) {
        e++;
        size_--;
        prev = next;
        next = [next get];
      }
      else {
        break;
      }
    }
    else {
      break;
    }
  }
  if (e != 0) {
    RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_setFirstWithRxInternalOperatorsOperatorReplay_Node_(self, prev);
  }
}

- (void)dealloc {
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, 3, 2, -1, -1, -1, -1 },
    { NULL, "LRxInternalOperatorsOperatorReplay_Node;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withLong:withRxScheduler:);
  methods[1].selector = @selector(enterTransformWithId:);
  methods[2].selector = @selector(leaveTransformWithId:);
  methods[3].selector = @selector(getInitialHead);
  methods[4].selector = @selector(truncate);
  methods[5].selector = @selector(truncateFinal);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxAgeInMillis_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "limit_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IJLRxScheduler;", "enterTransform", "LNSObject;", "leaveTransform", "LRxInternalOperatorsOperatorReplay;", "<T:Ljava/lang/Object;>Lrx/internal/operators/OperatorReplay$BoundedReplayBuffer<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer = { "SizeAndTimeBoundReplayBuffer", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 6, 4, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer;
}

@end

void RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer_initWithInt_withLong_withRxScheduler_(RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer *self, jint limit, jlong maxAgeInMillis, RxScheduler *scheduler) {
  RxInternalOperatorsOperatorReplay_BoundedReplayBuffer_init(self);
  JreStrongAssign(&self->scheduler_, scheduler);
  self->limit_ = limit;
  self->maxAgeInMillis_ = maxAgeInMillis;
}

RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer *new_RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer_initWithInt_withLong_withRxScheduler_(jint limit, jlong maxAgeInMillis, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer, initWithInt_withLong_withRxScheduler_, limit, maxAgeInMillis, scheduler)
}

RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer *create_RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer_initWithInt_withLong_withRxScheduler_(jint limit, jlong maxAgeInMillis, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer, initWithInt_withLong_withRxScheduler_, limit, maxAgeInMillis, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_SizeAndTimeBoundReplayBuffer)
