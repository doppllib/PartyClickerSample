//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalUtilIndexedRingBuffer")
#ifdef RESTRICT_RxInternalUtilIndexedRingBuffer
#define INCLUDE_ALL_RxInternalUtilIndexedRingBuffer 0
#else
#define INCLUDE_ALL_RxInternalUtilIndexedRingBuffer 1
#endif
#undef RESTRICT_RxInternalUtilIndexedRingBuffer

#if !defined (RxInternalUtilIndexedRingBuffer_) && (INCLUDE_ALL_RxInternalUtilIndexedRingBuffer || defined(INCLUDE_RxInternalUtilIndexedRingBuffer))
#define RxInternalUtilIndexedRingBuffer_

#define RESTRICT_RxSubscription 1
#define INCLUDE_RxSubscription 1
#include "RxSubscription.h"

@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol RxFunctionsFunc1;

@interface RxInternalUtilIndexedRingBuffer : NSObject < RxSubscription > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *index_;
  JavaUtilConcurrentAtomicAtomicInteger *removedIndex_;
}

#pragma mark Public

- (jint)addWithId:(id)e;

- (jint)forEachWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)action;

- (jint)forEachWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)action
                            withInt:(jint)startIndex;

+ (RxInternalUtilIndexedRingBuffer *)getInstance;

- (jboolean)isUnsubscribed;

- (void)releaseToPool;

- (id)removeWithInt:(jint)index;

- (void)unsubscribe;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(RxInternalUtilIndexedRingBuffer)

J2OBJC_FIELD_SETTER(RxInternalUtilIndexedRingBuffer, index_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(RxInternalUtilIndexedRingBuffer, removedIndex_, JavaUtilConcurrentAtomicAtomicInteger *)

inline jint RxInternalUtilIndexedRingBuffer_get_SIZE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint RxInternalUtilIndexedRingBuffer_SIZE;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(RxInternalUtilIndexedRingBuffer, SIZE, jint)

FOUNDATION_EXPORT RxInternalUtilIndexedRingBuffer *RxInternalUtilIndexedRingBuffer_getInstance();

FOUNDATION_EXPORT void RxInternalUtilIndexedRingBuffer_init(RxInternalUtilIndexedRingBuffer *self);

FOUNDATION_EXPORT RxInternalUtilIndexedRingBuffer *new_RxInternalUtilIndexedRingBuffer_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilIndexedRingBuffer *create_RxInternalUtilIndexedRingBuffer_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilIndexedRingBuffer)

#endif

#if !defined (RxInternalUtilIndexedRingBuffer_ElementSection_) && (INCLUDE_ALL_RxInternalUtilIndexedRingBuffer || defined(INCLUDE_RxInternalUtilIndexedRingBuffer_ElementSection))
#define RxInternalUtilIndexedRingBuffer_ElementSection_

@class JavaUtilConcurrentAtomicAtomicReference;
@class JavaUtilConcurrentAtomicAtomicReferenceArray;

@interface RxInternalUtilIndexedRingBuffer_ElementSection : NSObject {
 @public
  JavaUtilConcurrentAtomicAtomicReferenceArray *array_;
  JavaUtilConcurrentAtomicAtomicReference *next_;
}

#pragma mark Package-Private

- (instancetype)init;

- (RxInternalUtilIndexedRingBuffer_ElementSection *)getNext;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilIndexedRingBuffer_ElementSection)

J2OBJC_FIELD_SETTER(RxInternalUtilIndexedRingBuffer_ElementSection, array_, JavaUtilConcurrentAtomicAtomicReferenceArray *)
J2OBJC_FIELD_SETTER(RxInternalUtilIndexedRingBuffer_ElementSection, next_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void RxInternalUtilIndexedRingBuffer_ElementSection_init(RxInternalUtilIndexedRingBuffer_ElementSection *self);

FOUNDATION_EXPORT RxInternalUtilIndexedRingBuffer_ElementSection *new_RxInternalUtilIndexedRingBuffer_ElementSection_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilIndexedRingBuffer_ElementSection *create_RxInternalUtilIndexedRingBuffer_ElementSection_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilIndexedRingBuffer_ElementSection)

#endif

#if !defined (RxInternalUtilIndexedRingBuffer_IndexSection_) && (INCLUDE_ALL_RxInternalUtilIndexedRingBuffer || defined(INCLUDE_RxInternalUtilIndexedRingBuffer_IndexSection))
#define RxInternalUtilIndexedRingBuffer_IndexSection_

@interface RxInternalUtilIndexedRingBuffer_IndexSection : NSObject

#pragma mark Public

- (jint)getAndSetWithInt:(jint)expected
                 withInt:(jint)newValue;

- (void)setWithInt:(jint)i
           withInt:(jint)elementIndex;

#pragma mark Package-Private

- (instancetype)init;

- (RxInternalUtilIndexedRingBuffer_IndexSection *)getNext;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilIndexedRingBuffer_IndexSection)

FOUNDATION_EXPORT void RxInternalUtilIndexedRingBuffer_IndexSection_init(RxInternalUtilIndexedRingBuffer_IndexSection *self);

FOUNDATION_EXPORT RxInternalUtilIndexedRingBuffer_IndexSection *new_RxInternalUtilIndexedRingBuffer_IndexSection_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilIndexedRingBuffer_IndexSection *create_RxInternalUtilIndexedRingBuffer_IndexSection_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilIndexedRingBuffer_IndexSection)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalUtilIndexedRingBuffer")
