//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxInternalOperatorsOnSubscribeDelaySubscriptionOther.h"
#include "RxObservable.h"
#include "RxObserversSubscribers.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSerialSubscription.h"
#include "RxSubscriptionsSubscriptions.h"

@interface RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1 : RxSubscriber {
 @public
  RxInternalOperatorsOnSubscribeDelaySubscriptionOther *this$0_;
  RxSubscriber *val$child_;
  RxSubscriptionsSerialSubscription *val$serial_;
  jboolean done_;
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther:(RxInternalOperatorsOnSubscribeDelaySubscriptionOther *)outer$
                                                            withRxSubscriber:(RxSubscriber *)capture$0
                                       withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)capture$1;

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1_initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther_withRxSubscriber_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1 *self, RxInternalOperatorsOnSubscribeDelaySubscriptionOther *outer$, RxSubscriber *capture$0, RxSubscriptionsSerialSubscription *capture$1);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1 *new_RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1_initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther_withRxSubscriber_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeDelaySubscriptionOther *outer$, RxSubscriber *capture$0, RxSubscriptionsSerialSubscription *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1 *create_RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1_initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther_withRxSubscriber_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeDelaySubscriptionOther *outer$, RxSubscriber *capture$0, RxSubscriptionsSerialSubscription *capture$1);

@implementation RxInternalOperatorsOnSubscribeDelaySubscriptionOther

- (instancetype)initWithRxObservable:(RxObservable *)main
                    withRxObservable:(RxObservable *)other {
  RxInternalOperatorsOnSubscribeDelaySubscriptionOther_initWithRxObservable_withRxObservable_(self, main, other);
  return self;
}

- (void)callWithId:(RxSubscriber *)t {
  RxSubscriptionsSerialSubscription *serial = create_RxSubscriptionsSerialSubscription_init();
  [((RxSubscriber *) nil_chk(t)) addWithRxSubscription:serial];
  RxSubscriber *child = RxObserversSubscribers_wrapWithRxSubscriber_(t);
  RxSubscriber *otherSubscriber = create_RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1_initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther_withRxSubscriber_withRxSubscriptionsSerialSubscription_(self, child, serial);
  [serial setWithRxSubscription:otherSubscriber];
  [((RxObservable *) nil_chk(other_)) unsafeSubscribeWithRxSubscriber:otherSubscriber];
}

- (void)dealloc {
  RELEASE_(main_);
  RELEASE_(other_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservable:withRxObservable:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "main_", "LRxObservable;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "other_", "LRxObservable;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;LRxObservable;", "(Lrx/Observable<+TT;>;Lrx/Observable<TU;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "Lrx/Observable<+TT;>;", "Lrx/Observable<TU;>;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeDelaySubscriptionOther = { "OnSubscribeDelaySubscriptionOther", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, -1, -1, 7, -1 };
  return &_RxInternalOperatorsOnSubscribeDelaySubscriptionOther;
}

@end

void RxInternalOperatorsOnSubscribeDelaySubscriptionOther_initWithRxObservable_withRxObservable_(RxInternalOperatorsOnSubscribeDelaySubscriptionOther *self, RxObservable *main, RxObservable *other) {
  NSObject_init(self);
  JreStrongAssign(&self->main_, main);
  JreStrongAssign(&self->other_, other);
}

RxInternalOperatorsOnSubscribeDelaySubscriptionOther *new_RxInternalOperatorsOnSubscribeDelaySubscriptionOther_initWithRxObservable_withRxObservable_(RxObservable *main, RxObservable *other) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeDelaySubscriptionOther, initWithRxObservable_withRxObservable_, main, other)
}

RxInternalOperatorsOnSubscribeDelaySubscriptionOther *create_RxInternalOperatorsOnSubscribeDelaySubscriptionOther_initWithRxObservable_withRxObservable_(RxObservable *main, RxObservable *other) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeDelaySubscriptionOther, initWithRxObservable_withRxObservable_, main, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeDelaySubscriptionOther)

@implementation RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1

- (instancetype)initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther:(RxInternalOperatorsOnSubscribeDelaySubscriptionOther *)outer$
                                                            withRxSubscriber:(RxSubscriber *)capture$0
                                       withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)capture$1 {
  RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1_initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther_withRxSubscriber_withRxSubscriptionsSerialSubscription_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)onNextWithId:(id)t {
  [self onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  if (done_) {
    RxPluginsRxJavaHooks_onErrorWithNSException_(e);
    return;
  }
  done_ = true;
  [((RxSubscriber *) nil_chk(val$child_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  if (done_) {
    return;
  }
  done_ = true;
  [((RxSubscriptionsSerialSubscription *) nil_chk(val$serial_)) setWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
  [((RxObservable *) nil_chk(this$0_->main_)) unsafeSubscribeWithRxSubscriber:val$child_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$child_);
  RELEASE_(val$serial_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther:withRxSubscriber:withRxSubscriptionsSerialSubscription:);
  methods[1].selector = @selector(onNextWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onCompleted);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeDelaySubscriptionOther;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
    { "val$serial_", "LRxSubscriptionsSerialSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TU;)V", "onError", "LNSException;", "Lrx/internal/operators/OnSubscribeDelaySubscriptionOther<TT;TU;>;", "Lrx/Subscriber<TT;>;", "LRxInternalOperatorsOnSubscribeDelaySubscriptionOther;", "callWithId:", "Lrx/Subscriber<TU;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 4, 4, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1;
}

@end

void RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1_initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther_withRxSubscriber_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1 *self, RxInternalOperatorsOnSubscribeDelaySubscriptionOther *outer$, RxSubscriber *capture$0, RxSubscriptionsSerialSubscription *capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$child_, capture$0);
  JreStrongAssign(&self->val$serial_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1 *new_RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1_initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther_withRxSubscriber_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeDelaySubscriptionOther *outer$, RxSubscriber *capture$0, RxSubscriptionsSerialSubscription *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1, initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther_withRxSubscriber_withRxSubscriptionsSerialSubscription_, outer$, capture$0, capture$1)
}

RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1 *create_RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1_initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther_withRxSubscriber_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeDelaySubscriptionOther *outer$, RxSubscriber *capture$0, RxSubscriptionsSerialSubscription *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeDelaySubscriptionOther_1, initWithRxInternalOperatorsOnSubscribeDelaySubscriptionOther_withRxSubscriber_withRxSubscriptionsSerialSubscription_, outer$, capture$0, capture$1)
}
