//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxDopplJ2objcWeakReference.h"
#include "java/lang/ref/WeakReference.h"

@interface RxDopplJ2objcWeakReference () {
 @public
  JavaLangRefWeakReference *weakReference_;
  id hardRef_;
}

@end

J2OBJC_FIELD_SETTER(RxDopplJ2objcWeakReference, weakReference_, JavaLangRefWeakReference *)
J2OBJC_FIELD_SETTER(RxDopplJ2objcWeakReference, hardRef_, id)

@implementation RxDopplJ2objcWeakReference

- (instancetype)initWithId:(id)val {
  RxDopplJ2objcWeakReference_initWithId_(self, val);
  return self;
}

- (id)get {
  return [((JavaLangRefWeakReference *) nil_chk(weakReference_)) get];
}

- (void)dealloc {
  RELEASE_(weakReference_);
  RELEASE_(hardRef_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "USE_WEAK", "Z", .constantValue.asBOOL = RxDopplJ2objcWeakReference_USE_WEAK, 0x19, -1, -1, -1, -1 },
    { "weakReference_", "LJavaLangRefWeakReference;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
    { "hardRef_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TT;)V", "()TT;", "Ljava/lang/ref/WeakReference<TT;>;", "TT;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxDopplJ2objcWeakReference = { "J2objcWeakReference", "rx.doppl", ptrTable, methods, fields, 7, 0x1, 2, 3, -1, -1, -1, 5, -1 };
  return &_RxDopplJ2objcWeakReference;
}

@end

void RxDopplJ2objcWeakReference_initWithId_(RxDopplJ2objcWeakReference *self, id val) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->weakReference_, new_JavaLangRefWeakReference_initWithId_(val));
  JreStrongAssign(&self->hardRef_, nil);
}

RxDopplJ2objcWeakReference *new_RxDopplJ2objcWeakReference_initWithId_(id val) {
  J2OBJC_NEW_IMPL(RxDopplJ2objcWeakReference, initWithId_, val)
}

RxDopplJ2objcWeakReference *create_RxDopplJ2objcWeakReference_initWithId_(id val) {
  J2OBJC_CREATE_IMPL(RxDopplJ2objcWeakReference, initWithId_, val)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxDopplJ2objcWeakReference)
