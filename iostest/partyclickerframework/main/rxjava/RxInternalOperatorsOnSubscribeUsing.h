//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing")
#ifdef RESTRICT_RxInternalOperatorsOnSubscribeUsing
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing 1
#endif
#undef RESTRICT_RxInternalOperatorsOnSubscribeUsing

#if !defined (RxInternalOperatorsOnSubscribeUsing_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing || defined(INCLUDE_RxInternalOperatorsOnSubscribeUsing))
#define RxInternalOperatorsOnSubscribeUsing_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_OnSubscribe 1
#include "RxObservable.h"

@class RxSubscriber;
@protocol RxFunctionsAction1;
@protocol RxFunctionsFunc0;
@protocol RxFunctionsFunc1;

@interface RxInternalOperatorsOnSubscribeUsing : NSObject < RxObservable_OnSubscribe >

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFactory
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)observableFactory
                  withRxFunctionsAction1:(id<RxFunctionsAction1>)dispose
                             withBoolean:(jboolean)disposeEagerly;

- (void)callWithId:(RxSubscriber *)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeUsing)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(RxInternalOperatorsOnSubscribeUsing *self, id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> dispose, jboolean disposeEagerly);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeUsing *new_RxInternalOperatorsOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> dispose, jboolean disposeEagerly) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeUsing *create_RxInternalOperatorsOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> dispose, jboolean disposeEagerly);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeUsing)

#endif

#if !defined (RxInternalOperatorsOnSubscribeUsing_DisposeAction_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing || defined(INCLUDE_RxInternalOperatorsOnSubscribeUsing_DisposeAction))
#define RxInternalOperatorsOnSubscribeUsing_DisposeAction_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicBoolean 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicBoolean 1
#include "java/util/concurrent/atomic/AtomicBoolean.h"

#define RESTRICT_RxFunctionsAction0 1
#define INCLUDE_RxFunctionsAction0 1
#include "RxFunctionsAction0.h"

#define RESTRICT_RxSubscription 1
#define INCLUDE_RxSubscription 1
#include "RxSubscription.h"

@protocol RxFunctionsAction1;

@interface RxInternalOperatorsOnSubscribeUsing_DisposeAction : JavaUtilConcurrentAtomicAtomicBoolean < RxFunctionsAction0, RxSubscription >

#pragma mark Public

- (void)call;

- (jboolean)isUnsubscribed;

- (void)unsubscribe;

#pragma mark Package-Private

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)dispose
                                    withId:(id)resource;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeUsing_DisposeAction)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeUsing_DisposeAction_initWithRxFunctionsAction1_withId_(RxInternalOperatorsOnSubscribeUsing_DisposeAction *self, id<RxFunctionsAction1> dispose, id resource);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeUsing_DisposeAction *new_RxInternalOperatorsOnSubscribeUsing_DisposeAction_initWithRxFunctionsAction1_withId_(id<RxFunctionsAction1> dispose, id resource) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeUsing_DisposeAction *create_RxInternalOperatorsOnSubscribeUsing_DisposeAction_initWithRxFunctionsAction1_withId_(id<RxFunctionsAction1> dispose, id resource);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeUsing_DisposeAction)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing")
