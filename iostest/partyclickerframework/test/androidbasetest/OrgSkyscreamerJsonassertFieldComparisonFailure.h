//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertFieldComparisonFailure")
#ifdef RESTRICT_OrgSkyscreamerJsonassertFieldComparisonFailure
#define INCLUDE_ALL_OrgSkyscreamerJsonassertFieldComparisonFailure 0
#else
#define INCLUDE_ALL_OrgSkyscreamerJsonassertFieldComparisonFailure 1
#endif
#undef RESTRICT_OrgSkyscreamerJsonassertFieldComparisonFailure

#if !defined (OrgSkyscreamerJsonassertFieldComparisonFailure_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertFieldComparisonFailure || defined(INCLUDE_OrgSkyscreamerJsonassertFieldComparisonFailure))
#define OrgSkyscreamerJsonassertFieldComparisonFailure_

@interface OrgSkyscreamerJsonassertFieldComparisonFailure : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)field
                          withId:(id)expected
                          withId:(id)actual;

- (id)getActual;

- (id)getExpected;

- (NSString *)getField;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertFieldComparisonFailure)

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(OrgSkyscreamerJsonassertFieldComparisonFailure *self, NSString *field, id expected, id actual);

FOUNDATION_EXPORT OrgSkyscreamerJsonassertFieldComparisonFailure *new_OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(NSString *field, id expected, id actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSkyscreamerJsonassertFieldComparisonFailure *create_OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(NSString *field, id expected, id actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertFieldComparisonFailure)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertFieldComparisonFailure")
