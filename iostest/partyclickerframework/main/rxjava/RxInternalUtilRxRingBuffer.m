//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxExceptionsMissingBackpressureException.h"
#include "RxInternalOperatorsNotificationLite.h"
#include "RxInternalUtilObjectPool.h"
#include "RxInternalUtilPlatformDependent.h"
#include "RxInternalUtilRxRingBuffer.h"
#include "RxInternalUtilSynchronizedQueue.h"
#include "RxInternalUtilUnsafeSpmcArrayQueue.h"
#include "RxInternalUtilUnsafeSpscArrayQueue.h"
#include "RxInternalUtilUnsafeUnsafeAccess.h"
#include "RxObserver.h"
#include "java/io/PrintStream.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/System.h"
#include "java/util/Queue.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface RxInternalUtilRxRingBuffer () {
 @public
  id<JavaUtilQueue> queue_;
  jint size_;
  RxInternalUtilObjectPool *pool_;
}

- (instancetype)initWithJavaUtilQueue:(id<JavaUtilQueue>)queue
                              withInt:(jint)size;

- (instancetype)initWithRxInternalUtilObjectPool:(RxInternalUtilObjectPool *)pool
                                         withInt:(jint)size;

@end

J2OBJC_FIELD_SETTER(RxInternalUtilRxRingBuffer, queue_, id<JavaUtilQueue>)
J2OBJC_FIELD_SETTER(RxInternalUtilRxRingBuffer, pool_, RxInternalUtilObjectPool *)

__attribute__((unused)) static void RxInternalUtilRxRingBuffer_initWithJavaUtilQueue_withInt_(RxInternalUtilRxRingBuffer *self, id<JavaUtilQueue> queue, jint size);

__attribute__((unused)) static RxInternalUtilRxRingBuffer *new_RxInternalUtilRxRingBuffer_initWithJavaUtilQueue_withInt_(id<JavaUtilQueue> queue, jint size) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilRxRingBuffer *create_RxInternalUtilRxRingBuffer_initWithJavaUtilQueue_withInt_(id<JavaUtilQueue> queue, jint size);

__attribute__((unused)) static void RxInternalUtilRxRingBuffer_initWithRxInternalUtilObjectPool_withInt_(RxInternalUtilRxRingBuffer *self, RxInternalUtilObjectPool *pool, jint size);

__attribute__((unused)) static RxInternalUtilRxRingBuffer *new_RxInternalUtilRxRingBuffer_initWithRxInternalUtilObjectPool_withInt_(RxInternalUtilObjectPool *pool, jint size) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilRxRingBuffer *create_RxInternalUtilRxRingBuffer_initWithRxInternalUtilObjectPool_withInt_(RxInternalUtilObjectPool *pool, jint size);

@interface RxInternalUtilRxRingBuffer_1 : RxInternalUtilObjectPool

- (instancetype)init;

- (RxInternalUtilUnsafeSpscArrayQueue *)createObject;

- (id<JavaUtilQueue>)borrowObject;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilRxRingBuffer_1)

__attribute__((unused)) static void RxInternalUtilRxRingBuffer_1_init(RxInternalUtilRxRingBuffer_1 *self);

__attribute__((unused)) static RxInternalUtilRxRingBuffer_1 *new_RxInternalUtilRxRingBuffer_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilRxRingBuffer_1 *create_RxInternalUtilRxRingBuffer_1_init();

@interface RxInternalUtilRxRingBuffer_2 : RxInternalUtilObjectPool

- (instancetype)init;

- (RxInternalUtilUnsafeSpmcArrayQueue *)createObject;

- (id<JavaUtilQueue>)borrowObject;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilRxRingBuffer_2)

__attribute__((unused)) static void RxInternalUtilRxRingBuffer_2_init(RxInternalUtilRxRingBuffer_2 *self);

__attribute__((unused)) static RxInternalUtilRxRingBuffer_2 *new_RxInternalUtilRxRingBuffer_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilRxRingBuffer_2 *create_RxInternalUtilRxRingBuffer_2_init();

J2OBJC_INITIALIZED_DEFN(RxInternalUtilRxRingBuffer)

jint RxInternalUtilRxRingBuffer_SIZE;
RxInternalUtilObjectPool *RxInternalUtilRxRingBuffer_SPSC_POOL;
RxInternalUtilObjectPool *RxInternalUtilRxRingBuffer_SPMC_POOL;

@implementation RxInternalUtilRxRingBuffer

+ (RxInternalUtilRxRingBuffer *)getSpscInstance {
  return RxInternalUtilRxRingBuffer_getSpscInstance();
}

+ (RxInternalUtilRxRingBuffer *)getSpmcInstance {
  return RxInternalUtilRxRingBuffer_getSpmcInstance();
}

- (instancetype)initWithJavaUtilQueue:(id<JavaUtilQueue>)queue
                              withInt:(jint)size {
  RxInternalUtilRxRingBuffer_initWithJavaUtilQueue_withInt_(self, queue, size);
  return self;
}

- (instancetype)initWithRxInternalUtilObjectPool:(RxInternalUtilObjectPool *)pool
                                         withInt:(jint)size {
  RxInternalUtilRxRingBuffer_initWithRxInternalUtilObjectPool_withInt_(self, pool, size);
  return self;
}

- (void)release__ {
  @synchronized(self) {
    id<JavaUtilQueue> q = queue_;
    RxInternalUtilObjectPool *p = pool_;
    if (p != nil && q != nil) {
      [q clear];
      JreStrongAssign(&queue_, nil);
      [p returnObjectWithId:q];
    }
  }
}

- (void)unsubscribe {
  [self release__];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilRxRingBuffer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onNextWithId:(id)o {
  jboolean iae = false;
  jboolean mbe = false;
  @synchronized(self) {
    id<JavaUtilQueue> q = queue_;
    if (q != nil) {
      mbe = ![q offerWithId:RxInternalOperatorsNotificationLite_nextWithId_(o)];
    }
    else {
      iae = true;
    }
  }
  if (iae) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"This instance has been unsubscribed and the queue is no longer usable.");
  }
  if (mbe) {
    @throw create_RxExceptionsMissingBackpressureException_init();
  }
}

- (void)onCompleted {
  if (JreLoadVolatileId(&terminalState_) == nil) {
    JreVolatileStrongAssign(&terminalState_, RxInternalOperatorsNotificationLite_completed());
  }
}

- (void)onErrorWithNSException:(NSException *)t {
  if (JreLoadVolatileId(&terminalState_) == nil) {
    JreVolatileStrongAssign(&terminalState_, RxInternalOperatorsNotificationLite_errorWithNSException_(t));
  }
}

- (jint)available {
  return size_ - [self count];
}

- (jint)capacity {
  return size_;
}

- (jint)count {
  id<JavaUtilQueue> q = queue_;
  if (q == nil) {
    return 0;
  }
  return [q size];
}

- (jboolean)isEmpty {
  id<JavaUtilQueue> q = queue_;
  return q == nil || [q isEmpty];
}

- (id)poll {
  id o;
  @synchronized(self) {
    id<JavaUtilQueue> q = queue_;
    if (q == nil) {
      return nil;
    }
    o = [q poll];
    id ts = JreLoadVolatileId(&terminalState_);
    if (o == nil && ts != nil && [q peek] == nil) {
      o = ts;
      JreVolatileStrongAssign(&terminalState_, nil);
    }
  }
  return o;
}

- (id)peek {
  id o;
  @synchronized(self) {
    id<JavaUtilQueue> q = queue_;
    if (q == nil) {
      return nil;
    }
    o = [q peek];
    id ts = JreLoadVolatileId(&terminalState_);
    if (o == nil && ts != nil && [q peek] == nil) {
      o = ts;
    }
  }
  return o;
}

- (jboolean)isCompletedWithId:(id)o {
  return RxInternalOperatorsNotificationLite_isCompletedWithId_(o);
}

- (jboolean)isErrorWithId:(id)o {
  return RxInternalOperatorsNotificationLite_isErrorWithId_(o);
}

- (id)getValueWithId:(id)o {
  return RxInternalOperatorsNotificationLite_getValueWithId_(o);
}

- (jboolean)acceptWithId:(id)o
          withRxObserver:(id<RxObserver>)child {
  return RxInternalOperatorsNotificationLite_acceptWithRxObserver_withId_(child, o);
}

- (NSException *)asErrorWithId:(id)o {
  return RxInternalOperatorsNotificationLite_getErrorWithId_(o);
}

- (jboolean)isUnsubscribed {
  return queue_ == nil;
}

- (void)__javaClone:(RxInternalUtilRxRingBuffer *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&terminalState_, &original->terminalState_);
}

- (void)dealloc {
  RELEASE_(queue_);
  RELEASE_(pool_);
  JreReleaseVolatile(&terminalState_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxInternalUtilRxRingBuffer;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxInternalUtilRxRingBuffer;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x21, 4, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 7, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 6, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 12, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LNSException;", 0x1, 15, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getSpscInstance);
  methods[1].selector = @selector(getSpmcInstance);
  methods[2].selector = @selector(initWithJavaUtilQueue:withInt:);
  methods[3].selector = @selector(initWithRxInternalUtilObjectPool:withInt:);
  methods[4].selector = @selector(release__);
  methods[5].selector = @selector(unsubscribe);
  methods[6].selector = @selector(init);
  methods[7].selector = @selector(onNextWithId:);
  methods[8].selector = @selector(onCompleted);
  methods[9].selector = @selector(onErrorWithNSException:);
  methods[10].selector = @selector(available);
  methods[11].selector = @selector(capacity);
  methods[12].selector = @selector(count);
  methods[13].selector = @selector(isEmpty);
  methods[14].selector = @selector(poll);
  methods[15].selector = @selector(peek);
  methods[16].selector = @selector(isCompletedWithId:);
  methods[17].selector = @selector(isErrorWithId:);
  methods[18].selector = @selector(getValueWithId:);
  methods[19].selector = @selector(acceptWithId:withRxObserver:);
  methods[20].selector = @selector(asErrorWithId:);
  methods[21].selector = @selector(isUnsubscribed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "queue_", "LJavaUtilQueue;", .constantValue.asLong = 0, 0x2, -1, -1, 16, -1 },
    { "size_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "pool_", "LRxInternalUtilObjectPool;", .constantValue.asLong = 0, 0x12, -1, -1, 17, -1 },
    { "terminalState_", "LNSObject;", .constantValue.asLong = 0, 0x41, -1, -1, -1, -1 },
    { "SIZE", "I", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "SPSC_POOL", "LRxInternalUtilObjectPool;", .constantValue.asLong = 0, 0x19, -1, 19, 17, -1 },
    { "SPMC_POOL", "LRxInternalUtilObjectPool;", .constantValue.asLong = 0, 0x19, -1, 20, 17, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilQueue;I", "(Ljava/util/Queue<Ljava/lang/Object;>;I)V", "LRxInternalUtilObjectPool;I", "(Lrx/internal/util/ObjectPool<Ljava/util/Queue<Ljava/lang/Object;>;>;I)V", "release", "onNext", "LNSObject;", "LRxExceptionsMissingBackpressureException;", "onError", "LNSException;", "isCompleted", "isError", "getValue", "accept", "LNSObject;LRxObserver;", "asError", "Ljava/util/Queue<Ljava/lang/Object;>;", "Lrx/internal/util/ObjectPool<Ljava/util/Queue<Ljava/lang/Object;>;>;", &RxInternalUtilRxRingBuffer_SIZE, &RxInternalUtilRxRingBuffer_SPSC_POOL, &RxInternalUtilRxRingBuffer_SPMC_POOL };
  static const J2ObjcClassInfo _RxInternalUtilRxRingBuffer = { "RxRingBuffer", "rx.internal.util", ptrTable, methods, fields, 7, 0x1, 22, 7, -1, -1, -1, -1, -1 };
  return &_RxInternalUtilRxRingBuffer;
}

+ (void)initialize {
  if (self == [RxInternalUtilRxRingBuffer class]) {
    {
      jint defaultSize = 128;
      if (RxInternalUtilPlatformDependent_isAndroid()) {
        defaultSize = 16;
      }
      NSString *sizeFromProperty = JavaLangSystem_getPropertyWithNSString_(@"rx.ring-buffer.size");
      if (sizeFromProperty != nil) {
        @try {
          defaultSize = JavaLangInteger_parseIntWithNSString_(sizeFromProperty);
        }
        @catch (JavaLangNumberFormatException *e) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$$", @"Failed to set 'rx.buffer.size' with value ", sizeFromProperty, @" => ", [((JavaLangNumberFormatException *) nil_chk(e)) getMessage])];
        }
      }
      RxInternalUtilRxRingBuffer_SIZE = defaultSize;
    }
    JreStrongAssignAndConsume(&RxInternalUtilRxRingBuffer_SPSC_POOL, new_RxInternalUtilRxRingBuffer_1_init());
    JreStrongAssignAndConsume(&RxInternalUtilRxRingBuffer_SPMC_POOL, new_RxInternalUtilRxRingBuffer_2_init());
    J2OBJC_SET_INITIALIZED(RxInternalUtilRxRingBuffer)
  }
}

@end

RxInternalUtilRxRingBuffer *RxInternalUtilRxRingBuffer_getSpscInstance() {
  RxInternalUtilRxRingBuffer_initialize();
  if (RxInternalUtilUnsafeUnsafeAccess_isUnsafeAvailable()) {
    return create_RxInternalUtilRxRingBuffer_initWithRxInternalUtilObjectPool_withInt_(RxInternalUtilRxRingBuffer_SPSC_POOL, RxInternalUtilRxRingBuffer_SIZE);
  }
  else {
    return create_RxInternalUtilRxRingBuffer_init();
  }
}

RxInternalUtilRxRingBuffer *RxInternalUtilRxRingBuffer_getSpmcInstance() {
  RxInternalUtilRxRingBuffer_initialize();
  if (RxInternalUtilUnsafeUnsafeAccess_isUnsafeAvailable()) {
    return create_RxInternalUtilRxRingBuffer_initWithRxInternalUtilObjectPool_withInt_(RxInternalUtilRxRingBuffer_SPMC_POOL, RxInternalUtilRxRingBuffer_SIZE);
  }
  else {
    return create_RxInternalUtilRxRingBuffer_init();
  }
}

void RxInternalUtilRxRingBuffer_initWithJavaUtilQueue_withInt_(RxInternalUtilRxRingBuffer *self, id<JavaUtilQueue> queue, jint size) {
  NSObject_init(self);
  JreStrongAssign(&self->queue_, queue);
  JreStrongAssign(&self->pool_, nil);
  self->size_ = size;
}

RxInternalUtilRxRingBuffer *new_RxInternalUtilRxRingBuffer_initWithJavaUtilQueue_withInt_(id<JavaUtilQueue> queue, jint size) {
  J2OBJC_NEW_IMPL(RxInternalUtilRxRingBuffer, initWithJavaUtilQueue_withInt_, queue, size)
}

RxInternalUtilRxRingBuffer *create_RxInternalUtilRxRingBuffer_initWithJavaUtilQueue_withInt_(id<JavaUtilQueue> queue, jint size) {
  J2OBJC_CREATE_IMPL(RxInternalUtilRxRingBuffer, initWithJavaUtilQueue_withInt_, queue, size)
}

void RxInternalUtilRxRingBuffer_initWithRxInternalUtilObjectPool_withInt_(RxInternalUtilRxRingBuffer *self, RxInternalUtilObjectPool *pool, jint size) {
  NSObject_init(self);
  JreStrongAssign(&self->pool_, pool);
  JreStrongAssign(&self->queue_, [((RxInternalUtilObjectPool *) nil_chk(pool)) borrowObject]);
  self->size_ = size;
}

RxInternalUtilRxRingBuffer *new_RxInternalUtilRxRingBuffer_initWithRxInternalUtilObjectPool_withInt_(RxInternalUtilObjectPool *pool, jint size) {
  J2OBJC_NEW_IMPL(RxInternalUtilRxRingBuffer, initWithRxInternalUtilObjectPool_withInt_, pool, size)
}

RxInternalUtilRxRingBuffer *create_RxInternalUtilRxRingBuffer_initWithRxInternalUtilObjectPool_withInt_(RxInternalUtilObjectPool *pool, jint size) {
  J2OBJC_CREATE_IMPL(RxInternalUtilRxRingBuffer, initWithRxInternalUtilObjectPool_withInt_, pool, size)
}

void RxInternalUtilRxRingBuffer_init(RxInternalUtilRxRingBuffer *self) {
  RxInternalUtilRxRingBuffer_initWithJavaUtilQueue_withInt_(self, create_RxInternalUtilSynchronizedQueue_initWithInt_(RxInternalUtilRxRingBuffer_SIZE), RxInternalUtilRxRingBuffer_SIZE);
}

RxInternalUtilRxRingBuffer *new_RxInternalUtilRxRingBuffer_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilRxRingBuffer, init)
}

RxInternalUtilRxRingBuffer *create_RxInternalUtilRxRingBuffer_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilRxRingBuffer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilRxRingBuffer)

@implementation RxInternalUtilRxRingBuffer_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilRxRingBuffer_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (RxInternalUtilUnsafeSpscArrayQueue *)createObject {
  return create_RxInternalUtilUnsafeSpscArrayQueue_initWithInt_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxInternalUtilUnsafeSpscArrayQueue;", 0x4, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createObject);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Lrx/internal/util/unsafe/SpscArrayQueue<Ljava/lang/Object;>;", "LRxInternalUtilRxRingBuffer;", "Lrx/internal/util/ObjectPool<Ljava/util/Queue<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilRxRingBuffer_1 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, -1, 2, -1 };
  return &_RxInternalUtilRxRingBuffer_1;
}

@end

void RxInternalUtilRxRingBuffer_1_init(RxInternalUtilRxRingBuffer_1 *self) {
  RxInternalUtilObjectPool_init(self);
}

RxInternalUtilRxRingBuffer_1 *new_RxInternalUtilRxRingBuffer_1_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilRxRingBuffer_1, init)
}

RxInternalUtilRxRingBuffer_1 *create_RxInternalUtilRxRingBuffer_1_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilRxRingBuffer_1, init)
}

@implementation RxInternalUtilRxRingBuffer_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilRxRingBuffer_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (RxInternalUtilUnsafeSpmcArrayQueue *)createObject {
  return create_RxInternalUtilUnsafeSpmcArrayQueue_initWithInt_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxInternalUtilUnsafeSpmcArrayQueue;", 0x4, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createObject);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Lrx/internal/util/unsafe/SpmcArrayQueue<Ljava/lang/Object;>;", "LRxInternalUtilRxRingBuffer;", "Lrx/internal/util/ObjectPool<Ljava/util/Queue<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilRxRingBuffer_2 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, -1, 2, -1 };
  return &_RxInternalUtilRxRingBuffer_2;
}

@end

void RxInternalUtilRxRingBuffer_2_init(RxInternalUtilRxRingBuffer_2 *self) {
  RxInternalUtilObjectPool_init(self);
}

RxInternalUtilRxRingBuffer_2 *new_RxInternalUtilRxRingBuffer_2_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilRxRingBuffer_2, init)
}

RxInternalUtilRxRingBuffer_2 *create_RxInternalUtilRxRingBuffer_2_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilRxRingBuffer_2, init)
}
