//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsEmptyObservableHolder")
#ifdef RESTRICT_RxInternalOperatorsEmptyObservableHolder
#define INCLUDE_ALL_RxInternalOperatorsEmptyObservableHolder 0
#else
#define INCLUDE_ALL_RxInternalOperatorsEmptyObservableHolder 1
#endif
#undef RESTRICT_RxInternalOperatorsEmptyObservableHolder

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (RxInternalOperatorsEmptyObservableHolder_) && (INCLUDE_ALL_RxInternalOperatorsEmptyObservableHolder || defined(INCLUDE_RxInternalOperatorsEmptyObservableHolder))
#define RxInternalOperatorsEmptyObservableHolder_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_OnSubscribe 1
#include "RxObservable.h"

@class IOSObjectArray;
@class RxObservable;
@class RxSubscriber;

typedef NS_ENUM(NSUInteger, RxInternalOperatorsEmptyObservableHolder_Enum) {
  RxInternalOperatorsEmptyObservableHolder_Enum_INSTANCE = 0,
};

@interface RxInternalOperatorsEmptyObservableHolder : JavaLangEnum < NSCopying, RxObservable_OnSubscribe >

#pragma mark Public

- (void)callWithId:(RxSubscriber *)child;

+ (RxObservable *)instance;

+ (RxInternalOperatorsEmptyObservableHolder *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsEmptyObservableHolder)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT RxInternalOperatorsEmptyObservableHolder *RxInternalOperatorsEmptyObservableHolder_values_[];

inline RxInternalOperatorsEmptyObservableHolder *RxInternalOperatorsEmptyObservableHolder_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(RxInternalOperatorsEmptyObservableHolder, INSTANCE)

inline RxObservable *RxInternalOperatorsEmptyObservableHolder_get_EMPTY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT RxObservable *RxInternalOperatorsEmptyObservableHolder_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsEmptyObservableHolder, EMPTY, RxObservable *)

FOUNDATION_EXPORT RxObservable *RxInternalOperatorsEmptyObservableHolder_instance();

FOUNDATION_EXPORT IOSObjectArray *RxInternalOperatorsEmptyObservableHolder_values();

FOUNDATION_EXPORT RxInternalOperatorsEmptyObservableHolder *RxInternalOperatorsEmptyObservableHolder_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT RxInternalOperatorsEmptyObservableHolder *RxInternalOperatorsEmptyObservableHolder_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsEmptyObservableHolder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsEmptyObservableHolder")
