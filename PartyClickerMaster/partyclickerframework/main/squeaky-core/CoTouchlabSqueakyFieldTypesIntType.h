//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/core/src/main/java/co/touchlab/squeaky/field/types/IntType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesIntType")
#ifdef RESTRICT_CoTouchlabSqueakyFieldTypesIntType
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesIntType 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesIntType 1
#endif
#undef RESTRICT_CoTouchlabSqueakyFieldTypesIntType

#if !defined (CoTouchlabSqueakyFieldTypesIntType_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesIntType || defined(INCLUDE_CoTouchlabSqueakyFieldTypesIntType))
#define CoTouchlabSqueakyFieldTypesIntType_

#define RESTRICT_CoTouchlabSqueakyFieldTypesIntegerObjectType 1
#define INCLUDE_CoTouchlabSqueakyFieldTypesIntegerObjectType 1
#include "CoTouchlabSqueakyFieldTypesIntegerObjectType.h"

@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;

@interface CoTouchlabSqueakyFieldTypesIntType : CoTouchlabSqueakyFieldTypesIntegerObjectType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesIntType *)getSingleton;

- (jboolean)isPrimitive;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesIntType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesIntType *CoTouchlabSqueakyFieldTypesIntType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesIntType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesIntType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesIntType *new_CoTouchlabSqueakyFieldTypesIntType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesIntType *create_CoTouchlabSqueakyFieldTypesIntType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesIntType)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesIntType")
