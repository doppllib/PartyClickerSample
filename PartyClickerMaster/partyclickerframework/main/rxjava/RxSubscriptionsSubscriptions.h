//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxSubscriptionsSubscriptions")
#ifdef RESTRICT_RxSubscriptionsSubscriptions
#define INCLUDE_ALL_RxSubscriptionsSubscriptions 0
#else
#define INCLUDE_ALL_RxSubscriptionsSubscriptions 1
#endif
#undef RESTRICT_RxSubscriptionsSubscriptions

#if !defined (RxSubscriptionsSubscriptions_) && (INCLUDE_ALL_RxSubscriptionsSubscriptions || defined(INCLUDE_RxSubscriptionsSubscriptions))
#define RxSubscriptionsSubscriptions_

@class IOSObjectArray;
@class RxSubscriptionsCompositeSubscription;
@protocol JavaUtilConcurrentFuture;
@protocol RxFunctionsAction0;
@protocol RxSubscription;

@interface RxSubscriptionsSubscriptions : NSObject

#pragma mark Public

+ (id<RxSubscription>)createWithRxFunctionsAction0:(id<RxFunctionsAction0>)unsubscribe;

+ (id<RxSubscription>)empty;

+ (id<RxSubscription>)fromWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)f;

+ (RxSubscriptionsCompositeSubscription *)fromWithRxSubscriptionArray:(IOSObjectArray *)subscriptions;

+ (id<RxSubscription>)unsubscribed;

@end

J2OBJC_STATIC_INIT(RxSubscriptionsSubscriptions)

FOUNDATION_EXPORT id<RxSubscription> RxSubscriptionsSubscriptions_empty();

FOUNDATION_EXPORT id<RxSubscription> RxSubscriptionsSubscriptions_unsubscribed();

FOUNDATION_EXPORT id<RxSubscription> RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(id<RxFunctionsAction0> unsubscribe);

FOUNDATION_EXPORT id<RxSubscription> RxSubscriptionsSubscriptions_fromWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> f);

FOUNDATION_EXPORT RxSubscriptionsCompositeSubscription *RxSubscriptionsSubscriptions_fromWithRxSubscriptionArray_(IOSObjectArray *subscriptions);

J2OBJC_TYPE_LITERAL_HEADER(RxSubscriptionsSubscriptions)

#endif

#if !defined (RxSubscriptionsSubscriptions_FutureSubscription_) && (INCLUDE_ALL_RxSubscriptionsSubscriptions || defined(INCLUDE_RxSubscriptionsSubscriptions_FutureSubscription))
#define RxSubscriptionsSubscriptions_FutureSubscription_

#define RESTRICT_RxSubscription 1
#define INCLUDE_RxSubscription 1
#include "RxSubscription.h"

@protocol JavaUtilConcurrentFuture;

@interface RxSubscriptionsSubscriptions_FutureSubscription : NSObject < RxSubscription > {
 @public
  id<JavaUtilConcurrentFuture> f_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)f;

- (jboolean)isUnsubscribed;

- (void)unsubscribe;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubscriptionsSubscriptions_FutureSubscription)

J2OBJC_FIELD_SETTER(RxSubscriptionsSubscriptions_FutureSubscription, f_, id<JavaUtilConcurrentFuture>)

FOUNDATION_EXPORT void RxSubscriptionsSubscriptions_FutureSubscription_initWithJavaUtilConcurrentFuture_(RxSubscriptionsSubscriptions_FutureSubscription *self, id<JavaUtilConcurrentFuture> f);

FOUNDATION_EXPORT RxSubscriptionsSubscriptions_FutureSubscription *new_RxSubscriptionsSubscriptions_FutureSubscription_initWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> f) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSubscriptionsSubscriptions_FutureSubscription *create_RxSubscriptionsSubscriptions_FutureSubscription_initWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> f);

J2OBJC_TYPE_LITERAL_HEADER(RxSubscriptionsSubscriptions_FutureSubscription)

#endif

#if !defined (RxSubscriptionsSubscriptions_Unsubscribed_) && (INCLUDE_ALL_RxSubscriptionsSubscriptions || defined(INCLUDE_RxSubscriptionsSubscriptions_Unsubscribed))
#define RxSubscriptionsSubscriptions_Unsubscribed_

#define RESTRICT_RxSubscription 1
#define INCLUDE_RxSubscription 1
#include "RxSubscription.h"

@interface RxSubscriptionsSubscriptions_Unsubscribed : NSObject < RxSubscription >

#pragma mark Public

- (jboolean)isUnsubscribed;

- (void)unsubscribe;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubscriptionsSubscriptions_Unsubscribed)

FOUNDATION_EXPORT void RxSubscriptionsSubscriptions_Unsubscribed_init(RxSubscriptionsSubscriptions_Unsubscribed *self);

FOUNDATION_EXPORT RxSubscriptionsSubscriptions_Unsubscribed *new_RxSubscriptionsSubscriptions_Unsubscribed_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSubscriptionsSubscriptions_Unsubscribed *create_RxSubscriptionsSubscriptions_Unsubscribed_init();

J2OBJC_TYPE_LITERAL_HEADER(RxSubscriptionsSubscriptions_Unsubscribed)

#endif

#pragma pop_macro("INCLUDE_ALL_RxSubscriptionsSubscriptions")
