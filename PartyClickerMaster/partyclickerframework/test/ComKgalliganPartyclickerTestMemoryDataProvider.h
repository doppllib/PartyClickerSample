//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComKgalliganPartyclickerTestMemoryDataProvider")
#ifdef RESTRICT_ComKgalliganPartyclickerTestMemoryDataProvider
#define INCLUDE_ALL_ComKgalliganPartyclickerTestMemoryDataProvider 0
#else
#define INCLUDE_ALL_ComKgalliganPartyclickerTestMemoryDataProvider 1
#endif
#undef RESTRICT_ComKgalliganPartyclickerTestMemoryDataProvider

#if !defined (ComKgalliganPartyclickerTestMemoryDataProvider_) && (INCLUDE_ALL_ComKgalliganPartyclickerTestMemoryDataProvider || defined(INCLUDE_ComKgalliganPartyclickerTestMemoryDataProvider))
#define ComKgalliganPartyclickerTestMemoryDataProvider_

#define RESTRICT_ComKgalliganPartyclickerDataDataProvider 1
#define INCLUDE_ComKgalliganPartyclickerDataDataProvider 1
#include "ComKgalliganPartyclickerDataDataProvider.h"

@class ComKgalliganPartyclickerDataParty;
@protocol JavaUtilList;

@interface ComKgalliganPartyclickerTestMemoryDataProvider : NSObject < ComKgalliganPartyclickerDataDataProvider > {
 @public
  volatile_jint idCounter_;
  id<JavaUtilList> parties_;
}

#pragma mark Public

- (instancetype)init;

- (void)addPersonWithComKgalliganPartyclickerDataParty:(ComKgalliganPartyclickerDataParty *)party
                                           withBoolean:(jboolean)coming;

- (id<JavaUtilList>)allParties;

- (id<JavaUtilList>)allPeopleForPartyWithComKgalliganPartyclickerDataParty:(ComKgalliganPartyclickerDataParty *)party;

- (jint)countCurrentPartyWithInt:(jint)id_;

- (ComKgalliganPartyclickerDataParty *)createPartyWithNSString:(NSString *)name;

- (void)deletePartyWithComKgalliganPartyclickerDataParty:(ComKgalliganPartyclickerDataParty *)party;

- (ComKgalliganPartyclickerDataParty *)loadPartyWithInt:(jint)id_;

@end

J2OBJC_EMPTY_STATIC_INIT(ComKgalliganPartyclickerTestMemoryDataProvider)

J2OBJC_FIELD_SETTER(ComKgalliganPartyclickerTestMemoryDataProvider, parties_, id<JavaUtilList>)

FOUNDATION_EXPORT void ComKgalliganPartyclickerTestMemoryDataProvider_init(ComKgalliganPartyclickerTestMemoryDataProvider *self);

FOUNDATION_EXPORT ComKgalliganPartyclickerTestMemoryDataProvider *new_ComKgalliganPartyclickerTestMemoryDataProvider_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComKgalliganPartyclickerTestMemoryDataProvider *create_ComKgalliganPartyclickerTestMemoryDataProvider_init();

J2OBJC_TYPE_LITERAL_HEADER(ComKgalliganPartyclickerTestMemoryDataProvider)

#endif

#if !defined (ComKgalliganPartyclickerTestMemoryDataProvider_MemParty_) && (INCLUDE_ALL_ComKgalliganPartyclickerTestMemoryDataProvider || defined(INCLUDE_ComKgalliganPartyclickerTestMemoryDataProvider_MemParty))
#define ComKgalliganPartyclickerTestMemoryDataProvider_MemParty_

#define RESTRICT_ComKgalliganPartyclickerDataParty 1
#define INCLUDE_ComKgalliganPartyclickerDataParty 1
#include "ComKgalliganPartyclickerDataParty.h"

@protocol JavaUtilList;

@interface ComKgalliganPartyclickerTestMemoryDataProvider_MemParty : ComKgalliganPartyclickerDataParty {
 @public
  id<JavaUtilList> people_;
}

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComKgalliganPartyclickerTestMemoryDataProvider_MemParty)

J2OBJC_FIELD_SETTER(ComKgalliganPartyclickerTestMemoryDataProvider_MemParty, people_, id<JavaUtilList>)

FOUNDATION_EXPORT void ComKgalliganPartyclickerTestMemoryDataProvider_MemParty_init(ComKgalliganPartyclickerTestMemoryDataProvider_MemParty *self);

FOUNDATION_EXPORT ComKgalliganPartyclickerTestMemoryDataProvider_MemParty *new_ComKgalliganPartyclickerTestMemoryDataProvider_MemParty_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComKgalliganPartyclickerTestMemoryDataProvider_MemParty *create_ComKgalliganPartyclickerTestMemoryDataProvider_MemParty_init();

J2OBJC_TYPE_LITERAL_HEADER(ComKgalliganPartyclickerTestMemoryDataProvider_MemParty)

#endif

#pragma pop_macro("INCLUDE_ALL_ComKgalliganPartyclickerTestMemoryDataProvider")
