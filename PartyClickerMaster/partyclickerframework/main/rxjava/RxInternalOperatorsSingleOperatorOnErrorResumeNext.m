//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxExceptionsExceptions.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsSingleOperatorOnErrorResumeNext.h"
#include "RxSingle.h"
#include "RxSingleSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/NullPointerException.h"

@interface RxInternalOperatorsSingleOperatorOnErrorResumeNext () {
 @public
  RxSingle *originalSingle_;
}

- (instancetype)initWithRxSingle:(RxSingle *)originalSingle
            withRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunctionInCaseOfError;

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOperatorOnErrorResumeNext, originalSingle_, RxSingle *)

__attribute__((unused)) static void RxInternalOperatorsSingleOperatorOnErrorResumeNext_initWithRxSingle_withRxFunctionsFunc1_(RxInternalOperatorsSingleOperatorOnErrorResumeNext *self, RxSingle *originalSingle, id<RxFunctionsFunc1> resumeFunctionInCaseOfError);

__attribute__((unused)) static RxInternalOperatorsSingleOperatorOnErrorResumeNext *new_RxInternalOperatorsSingleOperatorOnErrorResumeNext_initWithRxSingle_withRxFunctionsFunc1_(RxSingle *originalSingle, id<RxFunctionsFunc1> resumeFunctionInCaseOfError) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOperatorOnErrorResumeNext *create_RxInternalOperatorsSingleOperatorOnErrorResumeNext_initWithRxSingle_withRxFunctionsFunc1_(RxSingle *originalSingle, id<RxFunctionsFunc1> resumeFunctionInCaseOfError);

@interface RxInternalOperatorsSingleOperatorOnErrorResumeNext_1 : NSObject < RxFunctionsFunc1 > {
 @public
  RxSingle *val$resumeSingleInCaseOfError_;
}

- (instancetype)initWithRxSingle:(RxSingle *)capture$0;

- (RxSingle *)callWithId:(NSException *)throwable;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOperatorOnErrorResumeNext_1)

__attribute__((unused)) static void RxInternalOperatorsSingleOperatorOnErrorResumeNext_1_initWithRxSingle_(RxInternalOperatorsSingleOperatorOnErrorResumeNext_1 *self, RxSingle *capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOperatorOnErrorResumeNext_1 *new_RxInternalOperatorsSingleOperatorOnErrorResumeNext_1_initWithRxSingle_(RxSingle *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOperatorOnErrorResumeNext_1 *create_RxInternalOperatorsSingleOperatorOnErrorResumeNext_1_initWithRxSingle_(RxSingle *capture$0);

@interface RxInternalOperatorsSingleOperatorOnErrorResumeNext_2 : RxSingleSubscriber {
 @public
  RxInternalOperatorsSingleOperatorOnErrorResumeNext *this$0_;
  RxSingleSubscriber *val$child_;
}

- (instancetype)initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext:(RxInternalOperatorsSingleOperatorOnErrorResumeNext *)outer$
                                                    withRxSingleSubscriber:(RxSingleSubscriber *)capture$0;

- (void)onSuccessWithId:(id)value;

- (void)onErrorWithNSException:(NSException *)error;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOperatorOnErrorResumeNext_2)

__attribute__((unused)) static void RxInternalOperatorsSingleOperatorOnErrorResumeNext_2_initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext_withRxSingleSubscriber_(RxInternalOperatorsSingleOperatorOnErrorResumeNext_2 *self, RxInternalOperatorsSingleOperatorOnErrorResumeNext *outer$, RxSingleSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOperatorOnErrorResumeNext_2 *new_RxInternalOperatorsSingleOperatorOnErrorResumeNext_2_initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext_withRxSingleSubscriber_(RxInternalOperatorsSingleOperatorOnErrorResumeNext *outer$, RxSingleSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOperatorOnErrorResumeNext_2 *create_RxInternalOperatorsSingleOperatorOnErrorResumeNext_2_initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext_withRxSingleSubscriber_(RxInternalOperatorsSingleOperatorOnErrorResumeNext *outer$, RxSingleSubscriber *capture$0);

@implementation RxInternalOperatorsSingleOperatorOnErrorResumeNext

- (instancetype)initWithRxSingle:(RxSingle *)originalSingle
            withRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunctionInCaseOfError {
  RxInternalOperatorsSingleOperatorOnErrorResumeNext_initWithRxSingle_withRxFunctionsFunc1_(self, originalSingle, resumeFunctionInCaseOfError);
  return self;
}

+ (RxInternalOperatorsSingleOperatorOnErrorResumeNext *)withFunctionWithRxSingle:(RxSingle *)originalSingle
                                                            withRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunctionInCaseOfError {
  return RxInternalOperatorsSingleOperatorOnErrorResumeNext_withFunctionWithRxSingle_withRxFunctionsFunc1_(originalSingle, resumeFunctionInCaseOfError);
}

+ (RxInternalOperatorsSingleOperatorOnErrorResumeNext *)withOtherWithRxSingle:(RxSingle *)originalSingle
                                                                 withRxSingle:(RxSingle *)resumeSingleInCaseOfError {
  return RxInternalOperatorsSingleOperatorOnErrorResumeNext_withOtherWithRxSingle_withRxSingle_(originalSingle, resumeSingleInCaseOfError);
}

- (void)callWithId:(RxSingleSubscriber *)child {
  RxSingleSubscriber *parent = create_RxInternalOperatorsSingleOperatorOnErrorResumeNext_2_initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext_withRxSingleSubscriber_(self, child);
  [((RxSingleSubscriber *) nil_chk(child)) addWithRxSubscription:parent];
  [((RxSingle *) nil_chk(originalSingle_)) subscribeWithRxSingleSubscriber:parent];
}

- (void)dealloc {
  RELEASE_(originalSingle_);
  RELEASE_(resumeFunctionInCaseOfError_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxInternalOperatorsSingleOperatorOnErrorResumeNext;", 0x9, 2, 0, -1, 3, -1, -1 },
    { NULL, "LRxInternalOperatorsSingleOperatorOnErrorResumeNext;", 0x9, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingle:withRxFunctionsFunc1:);
  methods[1].selector = @selector(withFunctionWithRxSingle:withRxFunctionsFunc1:);
  methods[2].selector = @selector(withOtherWithRxSingle:withRxSingle:);
  methods[3].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "originalSingle_", "LRxSingle;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
    { "resumeFunctionInCaseOfError_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 11, -1 },
  };
  static const void *ptrTable[] = { "LRxSingle;LRxFunctionsFunc1;", "(Lrx/Single<+TT;>;Lrx/functions/Func1<Ljava/lang/Throwable;+Lrx/Single<+TT;>;>;)V", "withFunction", "<T:Ljava/lang/Object;>(Lrx/Single<+TT;>;Lrx/functions/Func1<Ljava/lang/Throwable;+Lrx/Single<+TT;>;>;)Lrx/internal/operators/SingleOperatorOnErrorResumeNext<TT;>;", "withOther", "LRxSingle;LRxSingle;", "<T:Ljava/lang/Object;>(Lrx/Single<+TT;>;Lrx/Single<+TT;>;)Lrx/internal/operators/SingleOperatorOnErrorResumeNext<TT;>;", "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TT;>;)V", "Lrx/Single<+TT;>;", "Lrx/functions/Func1<Ljava/lang/Throwable;+Lrx/Single<+TT;>;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Single$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOperatorOnErrorResumeNext = { "SingleOperatorOnErrorResumeNext", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 4, 2, -1, -1, -1, 12, -1 };
  return &_RxInternalOperatorsSingleOperatorOnErrorResumeNext;
}

@end

void RxInternalOperatorsSingleOperatorOnErrorResumeNext_initWithRxSingle_withRxFunctionsFunc1_(RxInternalOperatorsSingleOperatorOnErrorResumeNext *self, RxSingle *originalSingle, id<RxFunctionsFunc1> resumeFunctionInCaseOfError) {
  NSObject_init(self);
  if (originalSingle == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"originalSingle must not be null");
  }
  if (resumeFunctionInCaseOfError == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"resumeFunctionInCaseOfError must not be null");
  }
  JreStrongAssign(&self->originalSingle_, originalSingle);
  JreStrongAssign(&self->resumeFunctionInCaseOfError_, resumeFunctionInCaseOfError);
}

RxInternalOperatorsSingleOperatorOnErrorResumeNext *new_RxInternalOperatorsSingleOperatorOnErrorResumeNext_initWithRxSingle_withRxFunctionsFunc1_(RxSingle *originalSingle, id<RxFunctionsFunc1> resumeFunctionInCaseOfError) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOperatorOnErrorResumeNext, initWithRxSingle_withRxFunctionsFunc1_, originalSingle, resumeFunctionInCaseOfError)
}

RxInternalOperatorsSingleOperatorOnErrorResumeNext *create_RxInternalOperatorsSingleOperatorOnErrorResumeNext_initWithRxSingle_withRxFunctionsFunc1_(RxSingle *originalSingle, id<RxFunctionsFunc1> resumeFunctionInCaseOfError) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOperatorOnErrorResumeNext, initWithRxSingle_withRxFunctionsFunc1_, originalSingle, resumeFunctionInCaseOfError)
}

RxInternalOperatorsSingleOperatorOnErrorResumeNext *RxInternalOperatorsSingleOperatorOnErrorResumeNext_withFunctionWithRxSingle_withRxFunctionsFunc1_(RxSingle *originalSingle, id<RxFunctionsFunc1> resumeFunctionInCaseOfError) {
  RxInternalOperatorsSingleOperatorOnErrorResumeNext_initialize();
  return create_RxInternalOperatorsSingleOperatorOnErrorResumeNext_initWithRxSingle_withRxFunctionsFunc1_(originalSingle, resumeFunctionInCaseOfError);
}

RxInternalOperatorsSingleOperatorOnErrorResumeNext *RxInternalOperatorsSingleOperatorOnErrorResumeNext_withOtherWithRxSingle_withRxSingle_(RxSingle *originalSingle, RxSingle *resumeSingleInCaseOfError) {
  RxInternalOperatorsSingleOperatorOnErrorResumeNext_initialize();
  if (resumeSingleInCaseOfError == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"resumeSingleInCaseOfError must not be null");
  }
  return create_RxInternalOperatorsSingleOperatorOnErrorResumeNext_initWithRxSingle_withRxFunctionsFunc1_(originalSingle, create_RxInternalOperatorsSingleOperatorOnErrorResumeNext_1_initWithRxSingle_(resumeSingleInCaseOfError));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleOperatorOnErrorResumeNext)

@implementation RxInternalOperatorsSingleOperatorOnErrorResumeNext_1

- (instancetype)initWithRxSingle:(RxSingle *)capture$0 {
  RxInternalOperatorsSingleOperatorOnErrorResumeNext_1_initWithRxSingle_(self, capture$0);
  return self;
}

- (RxSingle *)callWithId:(NSException *)throwable {
  return val$resumeSingleInCaseOfError_;
}

- (void)dealloc {
  RELEASE_(val$resumeSingleInCaseOfError_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingle:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$resumeSingleInCaseOfError_", "LRxSingle;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lrx/Single<+TT;>;", "Lrx/Single<+TT;>;", "LRxInternalOperatorsSingleOperatorOnErrorResumeNext;", "withOtherWithRxSingle:withRxSingle:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lrx/Single<+TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOperatorOnErrorResumeNext_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsSingleOperatorOnErrorResumeNext_1;
}

@end

void RxInternalOperatorsSingleOperatorOnErrorResumeNext_1_initWithRxSingle_(RxInternalOperatorsSingleOperatorOnErrorResumeNext_1 *self, RxSingle *capture$0) {
  JreStrongAssign(&self->val$resumeSingleInCaseOfError_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleOperatorOnErrorResumeNext_1 *new_RxInternalOperatorsSingleOperatorOnErrorResumeNext_1_initWithRxSingle_(RxSingle *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOperatorOnErrorResumeNext_1, initWithRxSingle_, capture$0)
}

RxInternalOperatorsSingleOperatorOnErrorResumeNext_1 *create_RxInternalOperatorsSingleOperatorOnErrorResumeNext_1_initWithRxSingle_(RxSingle *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOperatorOnErrorResumeNext_1, initWithRxSingle_, capture$0)
}

@implementation RxInternalOperatorsSingleOperatorOnErrorResumeNext_2

- (instancetype)initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext:(RxInternalOperatorsSingleOperatorOnErrorResumeNext *)outer$
                                                    withRxSingleSubscriber:(RxSingleSubscriber *)capture$0 {
  RxInternalOperatorsSingleOperatorOnErrorResumeNext_2_initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext_withRxSingleSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)onSuccessWithId:(id)value {
  [((RxSingleSubscriber *) nil_chk(val$child_)) onSuccessWithId:value];
}

- (void)onErrorWithNSException:(NSException *)error {
  @try {
    [((RxSingle *) nil_chk([((id<RxFunctionsFunc1>) nil_chk(this$0_->resumeFunctionInCaseOfError_)) callWithId:error])) subscribeWithRxSingleSubscriber:val$child_];
  }
  @catch (NSException *innerError) {
    RxExceptionsExceptions_throwOrReportWithNSException_withRxSingleSubscriber_(innerError, val$child_);
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$child_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext:withRxSingleSubscriber:);
  methods[1].selector = @selector(onSuccessWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsSingleOperatorOnErrorResumeNext;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$child_", "LRxSingleSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "onSuccess", "LNSObject;", "(TT;)V", "onError", "LNSException;", "Lrx/internal/operators/SingleOperatorOnErrorResumeNext<TT;>;", "Lrx/SingleSubscriber<-TT;>;", "LRxInternalOperatorsSingleOperatorOnErrorResumeNext;", "callWithId:", "Lrx/SingleSubscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOperatorOnErrorResumeNext_2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 3, 2, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsSingleOperatorOnErrorResumeNext_2;
}

@end

void RxInternalOperatorsSingleOperatorOnErrorResumeNext_2_initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext_withRxSingleSubscriber_(RxInternalOperatorsSingleOperatorOnErrorResumeNext_2 *self, RxInternalOperatorsSingleOperatorOnErrorResumeNext *outer$, RxSingleSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$child_, capture$0);
  RxSingleSubscriber_init(self);
}

RxInternalOperatorsSingleOperatorOnErrorResumeNext_2 *new_RxInternalOperatorsSingleOperatorOnErrorResumeNext_2_initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext_withRxSingleSubscriber_(RxInternalOperatorsSingleOperatorOnErrorResumeNext *outer$, RxSingleSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOperatorOnErrorResumeNext_2, initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext_withRxSingleSubscriber_, outer$, capture$0)
}

RxInternalOperatorsSingleOperatorOnErrorResumeNext_2 *create_RxInternalOperatorsSingleOperatorOnErrorResumeNext_2_initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext_withRxSingleSubscriber_(RxInternalOperatorsSingleOperatorOnErrorResumeNext *outer$, RxSingleSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOperatorOnErrorResumeNext_2, initWithRxInternalOperatorsSingleOperatorOnErrorResumeNext_withRxSingleSubscriber_, outer$, capture$0)
}
