//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxDopplJ2objcWeakReference.h"
#include "RxDopplWeakSubscription.h"
#include "RxSubscription.h"

@interface RxDopplWeakSubscription () {
 @public
  RxDopplJ2objcWeakReference *weakReference_;
}

@end

J2OBJC_FIELD_SETTER(RxDopplWeakSubscription, weakReference_, RxDopplJ2objcWeakReference *)

@implementation RxDopplWeakSubscription

- (instancetype)initWithRxSubscription:(id<RxSubscription>)subscription {
  RxDopplWeakSubscription_initWithRxSubscription_(self, subscription);
  return self;
}

- (void)unsubscribe {
  id<RxSubscription> subscription = [((RxDopplJ2objcWeakReference *) nil_chk(weakReference_)) get];
  if (subscription != nil) [subscription unsubscribe];
}

- (jboolean)isUnsubscribed {
  id<RxSubscription> subscription = [((RxDopplJ2objcWeakReference *) nil_chk(weakReference_)) get];
  return subscription == nil || [subscription isUnsubscribed];
}

- (void)dealloc {
  RELEASE_(weakReference_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscription:);
  methods[1].selector = @selector(unsubscribe);
  methods[2].selector = @selector(isUnsubscribed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "weakReference_", "LRxDopplJ2objcWeakReference;", .constantValue.asLong = 0, 0x12, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscription;", "Lrx/doppl/J2objcWeakReference<Lrx/Subscription;>;" };
  static const J2ObjcClassInfo _RxDopplWeakSubscription = { "WeakSubscription", "rx.doppl", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_RxDopplWeakSubscription;
}

@end

void RxDopplWeakSubscription_initWithRxSubscription_(RxDopplWeakSubscription *self, id<RxSubscription> subscription) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->weakReference_, new_RxDopplJ2objcWeakReference_initWithId_(subscription));
}

RxDopplWeakSubscription *new_RxDopplWeakSubscription_initWithRxSubscription_(id<RxSubscription> subscription) {
  J2OBJC_NEW_IMPL(RxDopplWeakSubscription, initWithRxSubscription_, subscription)
}

RxDopplWeakSubscription *create_RxDopplWeakSubscription_initWithRxSubscription_(id<RxSubscription> subscription) {
  J2OBJC_CREATE_IMPL(RxDopplWeakSubscription, initWithRxSubscription_, subscription)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxDopplWeakSubscription)
