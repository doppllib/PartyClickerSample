//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcatArray")
#ifdef RESTRICT_RxInternalOperatorsCompletableOnSubscribeConcatArray
#define INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcatArray 0
#else
#define INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcatArray 1
#endif
#undef RESTRICT_RxInternalOperatorsCompletableOnSubscribeConcatArray

#if !defined (RxInternalOperatorsCompletableOnSubscribeConcatArray_) && (INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcatArray || defined(INCLUDE_RxInternalOperatorsCompletableOnSubscribeConcatArray))
#define RxInternalOperatorsCompletableOnSubscribeConcatArray_

#define RESTRICT_RxCompletable 1
#define INCLUDE_RxCompletable_OnSubscribe 1
#include "RxCompletable.h"

@class IOSObjectArray;
@protocol RxCompletableSubscriber;

@interface RxInternalOperatorsCompletableOnSubscribeConcatArray : NSObject < RxCompletable_OnSubscribe > {
 @public
  IOSObjectArray *sources_;
}

#pragma mark Public

- (instancetype)initWithRxCompletableArray:(IOSObjectArray *)sources;

- (void)callWithId:(id<RxCompletableSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableOnSubscribeConcatArray)

J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcatArray, sources_, IOSObjectArray *)

FOUNDATION_EXPORT void RxInternalOperatorsCompletableOnSubscribeConcatArray_initWithRxCompletableArray_(RxInternalOperatorsCompletableOnSubscribeConcatArray *self, IOSObjectArray *sources);

FOUNDATION_EXPORT RxInternalOperatorsCompletableOnSubscribeConcatArray *new_RxInternalOperatorsCompletableOnSubscribeConcatArray_initWithRxCompletableArray_(IOSObjectArray *sources) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsCompletableOnSubscribeConcatArray *create_RxInternalOperatorsCompletableOnSubscribeConcatArray_initWithRxCompletableArray_(IOSObjectArray *sources);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableOnSubscribeConcatArray)

#endif

#if !defined (RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcatArray || defined(INCLUDE_RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber))
#define RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_RxCompletableSubscriber 1
#define INCLUDE_RxCompletableSubscriber 1
#include "RxCompletableSubscriber.h"

@class IOSObjectArray;
@class RxSubscriptionsSerialSubscription;
@protocol RxSubscription;

@interface RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber : JavaUtilConcurrentAtomicAtomicInteger < RxCompletableSubscriber > {
 @public
  id<RxCompletableSubscriber> actual_;
  IOSObjectArray *sources_;
  jint index_;
  RxSubscriptionsSerialSubscription *sd_;
}

#pragma mark Public

- (instancetype)initWithRxCompletableSubscriber:(id<RxCompletableSubscriber>)actual
                         withRxCompletableArray:(IOSObjectArray *)sources;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

#pragma mark Package-Private

- (void)next;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber, actual_, id<RxCompletableSubscriber>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber, sources_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber, sd_, RxSubscriptionsSerialSubscription *)

FOUNDATION_EXPORT void RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber_initWithRxCompletableSubscriber_withRxCompletableArray_(RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber *self, id<RxCompletableSubscriber> actual, IOSObjectArray *sources);

FOUNDATION_EXPORT RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber *new_RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber_initWithRxCompletableSubscriber_withRxCompletableArray_(id<RxCompletableSubscriber> actual, IOSObjectArray *sources) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber *create_RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber_initWithRxCompletableSubscriber_withRxCompletableArray_(id<RxCompletableSubscriber> actual, IOSObjectArray *sources);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableOnSubscribeConcatArray_ConcatInnerSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsCompletableOnSubscribeConcatArray")
