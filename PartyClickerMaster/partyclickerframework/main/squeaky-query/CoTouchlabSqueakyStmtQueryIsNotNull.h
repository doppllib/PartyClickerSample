//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyStmtQueryIsNotNull")
#ifdef RESTRICT_CoTouchlabSqueakyStmtQueryIsNotNull
#define INCLUDE_ALL_CoTouchlabSqueakyStmtQueryIsNotNull 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyStmtQueryIsNotNull 1
#endif
#undef RESTRICT_CoTouchlabSqueakyStmtQueryIsNotNull

#if !defined (CoTouchlabSqueakyStmtQueryIsNotNull_) && (INCLUDE_ALL_CoTouchlabSqueakyStmtQueryIsNotNull || defined(INCLUDE_CoTouchlabSqueakyStmtQueryIsNotNull))
#define CoTouchlabSqueakyStmtQueryIsNotNull_

#define RESTRICT_CoTouchlabSqueakyStmtQueryBaseComparison 1
#define INCLUDE_CoTouchlabSqueakyStmtQueryBaseComparison 1
#include "CoTouchlabSqueakyStmtQueryBaseComparison.h"

@class CoTouchlabSqueakyDaoSqueakyContext;
@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyStmtJoinAlias;
@protocol JavaUtilList;

@interface CoTouchlabSqueakyStmtQueryIsNotNull : CoTouchlabSqueakyStmtQueryBaseComparison

#pragma mark Public

- (instancetype)initWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                     withCoTouchlabSqueakyStmtJoinAlias:(CoTouchlabSqueakyStmtJoinAlias *)joinAlias;

- (void)appendValueWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)squeakyContext
                                         withJavaUtilList:(id<JavaUtilList>)params;

- (NSString *)getOperation;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyStmtQueryIsNotNull)

FOUNDATION_EXPORT void CoTouchlabSqueakyStmtQueryIsNotNull_initWithCoTouchlabSqueakyFieldFieldType_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyStmtQueryIsNotNull *self, CoTouchlabSqueakyFieldFieldType *fieldType, CoTouchlabSqueakyStmtJoinAlias *joinAlias);

FOUNDATION_EXPORT CoTouchlabSqueakyStmtQueryIsNotNull *new_CoTouchlabSqueakyStmtQueryIsNotNull_initWithCoTouchlabSqueakyFieldFieldType_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyFieldFieldType *fieldType, CoTouchlabSqueakyStmtJoinAlias *joinAlias) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyStmtQueryIsNotNull *create_CoTouchlabSqueakyStmtQueryIsNotNull_initWithCoTouchlabSqueakyFieldFieldType_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyFieldFieldType *fieldType, CoTouchlabSqueakyStmtJoinAlias *joinAlias);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyStmtQueryIsNotNull)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyStmtQueryIsNotNull")
