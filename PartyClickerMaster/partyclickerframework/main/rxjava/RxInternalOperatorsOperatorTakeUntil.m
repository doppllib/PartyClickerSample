//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxInternalOperatorsOperatorTakeUntil.h"
#include "RxObservable.h"
#include "RxObserversSerializedSubscriber.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Long.h"

@interface RxInternalOperatorsOperatorTakeUntil () {
 @public
  RxObservable *other_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeUntil, other_, RxObservable *)

@interface RxInternalOperatorsOperatorTakeUntil_1 : RxSubscriber {
 @public
  RxSubscriber *val$serial_;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0
                    withRxSubscriber:(RxSubscriber *)subscriber
                         withBoolean:(jboolean)shareSubscriptions;

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeUntil_1)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeUntil_1_initWithRxSubscriber_withRxSubscriber_withBoolean_(RxInternalOperatorsOperatorTakeUntil_1 *self, RxSubscriber *capture$0, RxSubscriber *subscriber, jboolean shareSubscriptions);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntil_1 *new_RxInternalOperatorsOperatorTakeUntil_1_initWithRxSubscriber_withRxSubscriber_withBoolean_(RxSubscriber *capture$0, RxSubscriber *subscriber, jboolean shareSubscriptions) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntil_1 *create_RxInternalOperatorsOperatorTakeUntil_1_initWithRxSubscriber_withRxSubscriber_withBoolean_(RxSubscriber *capture$0, RxSubscriber *subscriber, jboolean shareSubscriptions);

@interface RxInternalOperatorsOperatorTakeUntil_2 : RxSubscriber {
 @public
  RxSubscriber *val$main_;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeUntil_2)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeUntil_2_initWithRxSubscriber_(RxInternalOperatorsOperatorTakeUntil_2 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntil_2 *new_RxInternalOperatorsOperatorTakeUntil_2_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntil_2 *create_RxInternalOperatorsOperatorTakeUntil_2_initWithRxSubscriber_(RxSubscriber *capture$0);

@implementation RxInternalOperatorsOperatorTakeUntil

- (instancetype)initWithRxObservable:(RxObservable *)other {
  RxInternalOperatorsOperatorTakeUntil_initWithRxObservable_(self, other);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  RxSubscriber *serial = create_RxObserversSerializedSubscriber_initWithRxSubscriber_withBoolean_(child, false);
  RxSubscriber *main = create_RxInternalOperatorsOperatorTakeUntil_1_initWithRxSubscriber_withRxSubscriber_withBoolean_(serial, serial, false);
  RxSubscriber *so = create_RxInternalOperatorsOperatorTakeUntil_2_initWithRxSubscriber_(main);
  [serial addWithRxSubscription:main];
  [serial addWithRxSubscription:so];
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:serial];
  [((RxObservable *) nil_chk(other_)) unsafeSubscribeWithRxSubscriber:so];
  return main;
}

- (void)dealloc {
  RELEASE_(other_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxSubscriber;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservable:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "other_", "LRxObservable;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;", "(Lrx/Observable<+TE;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<-TT;>;", "Lrx/Observable<+TE;>;", "<T:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeUntil = { "OperatorTakeUntil", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, -1, -1, 6, -1 };
  return &_RxInternalOperatorsOperatorTakeUntil;
}

@end

void RxInternalOperatorsOperatorTakeUntil_initWithRxObservable_(RxInternalOperatorsOperatorTakeUntil *self, RxObservable *other) {
  NSObject_init(self);
  JreStrongAssign(&self->other_, other);
}

RxInternalOperatorsOperatorTakeUntil *new_RxInternalOperatorsOperatorTakeUntil_initWithRxObservable_(RxObservable *other) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeUntil, initWithRxObservable_, other)
}

RxInternalOperatorsOperatorTakeUntil *create_RxInternalOperatorsOperatorTakeUntil_initWithRxObservable_(RxObservable *other) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeUntil, initWithRxObservable_, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTakeUntil)

@implementation RxInternalOperatorsOperatorTakeUntil_1

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0
                    withRxSubscriber:(RxSubscriber *)subscriber
                         withBoolean:(jboolean)shareSubscriptions {
  RxInternalOperatorsOperatorTakeUntil_1_initWithRxSubscriber_withRxSubscriber_withBoolean_(self, capture$0, subscriber, shareSubscriptions);
  return self;
}

- (void)onNextWithId:(id)t {
  [((RxSubscriber *) nil_chk(val$serial_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  @try {
    [((RxSubscriber *) nil_chk(val$serial_)) onErrorWithNSException:e];
  }
  @finally {
    [val$serial_ unsubscribe];
  }
}

- (void)onCompleted {
  @try {
    [((RxSubscriber *) nil_chk(val$serial_)) onCompleted];
  }
  @finally {
    [val$serial_ unsubscribe];
  }
}

- (void)dealloc {
  RELEASE_(val$serial_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:withRxSubscriber:withBoolean:);
  methods[1].selector = @selector(onNextWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onCompleted);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$serial_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;Z", "(Lrx/Subscriber<*>;Z)V", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "Lrx/Subscriber<TT;>;", "LRxInternalOperatorsOperatorTakeUntil;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeUntil_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 4, 1, 8, -1, 9, 7, -1 };
  return &_RxInternalOperatorsOperatorTakeUntil_1;
}

@end

void RxInternalOperatorsOperatorTakeUntil_1_initWithRxSubscriber_withRxSubscriber_withBoolean_(RxInternalOperatorsOperatorTakeUntil_1 *self, RxSubscriber *capture$0, RxSubscriber *subscriber, jboolean shareSubscriptions) {
  JreStrongAssign(&self->val$serial_, capture$0);
  RxSubscriber_initWithRxSubscriber_withBoolean_(self, subscriber, shareSubscriptions);
}

RxInternalOperatorsOperatorTakeUntil_1 *new_RxInternalOperatorsOperatorTakeUntil_1_initWithRxSubscriber_withRxSubscriber_withBoolean_(RxSubscriber *capture$0, RxSubscriber *subscriber, jboolean shareSubscriptions) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeUntil_1, initWithRxSubscriber_withRxSubscriber_withBoolean_, capture$0, subscriber, shareSubscriptions)
}

RxInternalOperatorsOperatorTakeUntil_1 *create_RxInternalOperatorsOperatorTakeUntil_1_initWithRxSubscriber_withRxSubscriber_withBoolean_(RxSubscriber *capture$0, RxSubscriber *subscriber, jboolean shareSubscriptions) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeUntil_1, initWithRxSubscriber_withRxSubscriber_withBoolean_, capture$0, subscriber, shareSubscriptions)
}

@implementation RxInternalOperatorsOperatorTakeUntil_2

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorTakeUntil_2_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)onStart {
  [self requestWithLong:JavaLangLong_MAX_VALUE];
}

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(val$main_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(val$main_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)t {
  [self onCompleted];
}

- (void)dealloc {
  RELEASE_(val$main_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:);
  methods[1].selector = @selector(onStart);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(onErrorWithNSException:);
  methods[4].selector = @selector(onNextWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$main_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "(TE;)V", "Lrx/Subscriber<TT;>;", "LRxInternalOperatorsOperatorTakeUntil;", "callWithId:", "Lrx/Subscriber<TE;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeUntil_2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 5, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorTakeUntil_2;
}

@end

void RxInternalOperatorsOperatorTakeUntil_2_initWithRxSubscriber_(RxInternalOperatorsOperatorTakeUntil_2 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$main_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorTakeUntil_2 *new_RxInternalOperatorsOperatorTakeUntil_2_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeUntil_2, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorTakeUntil_2 *create_RxInternalOperatorsOperatorTakeUntil_2_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeUntil_2, initWithRxSubscriber_, capture$0)
}
