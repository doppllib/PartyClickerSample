//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidAppApplication.h"
#include "ComKgalliganPartyclickerDataDataProvider.h"
#include "ComKgalliganPartyclickerTestTestAppModule.h"
#include "ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory.h"
#include "DaggerInternalFactory.h"
#include "DaggerInternalPreconditions.h"
#include "J2ObjC_source.h"
#include "javax/inject/Provider.h"

@interface ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory () {
 @public
  ComKgalliganPartyclickerTestTestAppModule *module_;
  id<JavaxInjectProvider> applicationProvider_;
}

@end

J2OBJC_FIELD_SETTER(ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory, module_, ComKgalliganPartyclickerTestTestAppModule *)
J2OBJC_FIELD_SETTER(ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory, applicationProvider_, id<JavaxInjectProvider>)

@implementation ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory

- (instancetype)initWithComKgalliganPartyclickerTestTestAppModule:(ComKgalliganPartyclickerTestTestAppModule *)module
                                          withJavaxInjectProvider:(id<JavaxInjectProvider>)applicationProvider {
  ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory_initWithComKgalliganPartyclickerTestTestAppModule_withJavaxInjectProvider_(self, module, applicationProvider);
  return self;
}

- (id<ComKgalliganPartyclickerDataDataProvider>)get {
  return DaggerInternalPreconditions_checkNotNullWithId_withNSString_([((ComKgalliganPartyclickerTestTestAppModule *) nil_chk(module_)) providesDataProviderWithAndroidAppApplication:[((id<JavaxInjectProvider>) nil_chk(applicationProvider_)) get]], @"Cannot return null from a non-@Nullable @Provides method");
}

+ (id<DaggerInternalFactory>)createWithComKgalliganPartyclickerTestTestAppModule:(ComKgalliganPartyclickerTestTestAppModule *)module
                                                         withJavaxInjectProvider:(id<JavaxInjectProvider>)applicationProvider {
  return ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory_createWithComKgalliganPartyclickerTestTestAppModule_withJavaxInjectProvider_(module, applicationProvider);
}

- (void)dealloc {
  RELEASE_(module_);
  RELEASE_(applicationProvider_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComKgalliganPartyclickerDataDataProvider;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDaggerInternalFactory;", 0x9, 2, 0, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComKgalliganPartyclickerTestTestAppModule:withJavaxInjectProvider:);
  methods[1].selector = @selector(get);
  methods[2].selector = @selector(createWithComKgalliganPartyclickerTestTestAppModule:withJavaxInjectProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "module_", "LComKgalliganPartyclickerTestTestAppModule;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "applicationProvider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LComKgalliganPartyclickerTestTestAppModule;LJavaxInjectProvider;", "(Lcom/kgalligan/partyclicker/test/TestAppModule;Ljavax/inject/Provider<Landroid/app/Application;>;)V", "create", "(Lcom/kgalligan/partyclicker/test/TestAppModule;Ljavax/inject/Provider<Landroid/app/Application;>;)Ldagger/internal/Factory<Lcom/kgalligan/partyclicker/data/DataProvider;>;", "Ljavax/inject/Provider<Landroid/app/Application;>;", "Ljava/lang/Object;Ldagger/internal/Factory<Lcom/kgalligan/partyclicker/data/DataProvider;>;" };
  static const J2ObjcClassInfo _ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory = { "TestAppModule_ProvidesDataProviderFactory", "com.kgalligan.partyclicker.test", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, -1, -1, 5, -1 };
  return &_ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory;
}

@end

void ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory_initWithComKgalliganPartyclickerTestTestAppModule_withJavaxInjectProvider_(ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory *self, ComKgalliganPartyclickerTestTestAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  NSObject_init(self);
  JreAssert((module != nil), (@"com/kgalligan/partyclicker/test/TestAppModule_ProvidesDataProviderFactory.java:21 condition failed: assert module != null;"));
  JreStrongAssign(&self->module_, module);
  JreAssert((applicationProvider != nil), (@"com/kgalligan/partyclicker/test/TestAppModule_ProvidesDataProviderFactory.java:23 condition failed: assert applicationProvider != null;"));
  JreStrongAssign(&self->applicationProvider_, applicationProvider);
}

ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory *new_ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory_initWithComKgalliganPartyclickerTestTestAppModule_withJavaxInjectProvider_(ComKgalliganPartyclickerTestTestAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  J2OBJC_NEW_IMPL(ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory, initWithComKgalliganPartyclickerTestTestAppModule_withJavaxInjectProvider_, module, applicationProvider)
}

ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory *create_ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory_initWithComKgalliganPartyclickerTestTestAppModule_withJavaxInjectProvider_(ComKgalliganPartyclickerTestTestAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  J2OBJC_CREATE_IMPL(ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory, initWithComKgalliganPartyclickerTestTestAppModule_withJavaxInjectProvider_, module, applicationProvider)
}

id<DaggerInternalFactory> ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory_createWithComKgalliganPartyclickerTestTestAppModule_withJavaxInjectProvider_(ComKgalliganPartyclickerTestTestAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory_initialize();
  return create_ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory_initWithComKgalliganPartyclickerTestTestAppModule_withJavaxInjectProvider_(module, applicationProvider);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComKgalliganPartyclickerTestTestAppModule_ProvidesDataProviderFactory)
