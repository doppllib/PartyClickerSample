//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorWindowWithObservable")
#ifdef RESTRICT_RxInternalOperatorsOperatorWindowWithObservable
#define INCLUDE_ALL_RxInternalOperatorsOperatorWindowWithObservable 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorWindowWithObservable 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorWindowWithObservable

#if !defined (RxInternalOperatorsOperatorWindowWithObservable_) && (INCLUDE_ALL_RxInternalOperatorsOperatorWindowWithObservable || defined(INCLUDE_RxInternalOperatorsOperatorWindowWithObservable))
#define RxInternalOperatorsOperatorWindowWithObservable_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "RxObservable.h"

@class RxObservable;
@class RxSubscriber;

@interface RxInternalOperatorsOperatorWindowWithObservable : NSObject < RxObservable_Operator > {
 @public
  RxObservable *other_;
}

#pragma mark Public

- (instancetype)initWithRxObservable:(RxObservable *)other;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsOperatorWindowWithObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithObservable, other_, RxObservable *)

inline id RxInternalOperatorsOperatorWindowWithObservable_get_NEXT_SUBJECT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id RxInternalOperatorsOperatorWindowWithObservable_NEXT_SUBJECT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorWindowWithObservable, NEXT_SUBJECT, id)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorWindowWithObservable_initWithRxObservable_(RxInternalOperatorsOperatorWindowWithObservable *self, RxObservable *other);

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithObservable *new_RxInternalOperatorsOperatorWindowWithObservable_initWithRxObservable_(RxObservable *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithObservable *create_RxInternalOperatorsOperatorWindowWithObservable_initWithRxObservable_(RxObservable *other);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorWindowWithObservable)

#endif

#if !defined (RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsOperatorWindowWithObservable || defined(INCLUDE_RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber))
#define RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "RxSubscriber.h"

@class RxObservable;
@protocol JavaUtilList;
@protocol RxObserver;

@interface RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber : RxSubscriber {
 @public
  RxSubscriber *child_;
  id guard_;
  id<RxObserver> consumer_;
  RxObservable *producer_SourceSubscriber_;
  jboolean emitting_;
  id<JavaUtilList> queue_;
}

#pragma mark Public

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (void)onStart;

#pragma mark Package-Private

- (void)complete;

- (void)createNewWindow;

- (void)drainWithJavaUtilList:(id<JavaUtilList>)queue;

- (void)emitValueWithId:(id)t;

- (void)errorWithNSException:(NSException *)e;

- (void)replaceSubject;

- (void)replaceWindow;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber, child_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber, guard_, id)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber, consumer_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber, producer_SourceSubscriber_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber, queue_, id<JavaUtilList>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber_initWithRxSubscriber_(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber *self, RxSubscriber *child);

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber *new_RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber_initWithRxSubscriber_(RxSubscriber *child) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber *create_RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber_initWithRxSubscriber_(RxSubscriber *child);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber)

#endif

#if !defined (RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber_) && (INCLUDE_ALL_RxInternalOperatorsOperatorWindowWithObservable || defined(INCLUDE_RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber))
#define RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "RxSubscriber.h"

@class RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber;

@interface RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber : RxSubscriber {
 @public
  RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber *sub_;
}

#pragma mark Public

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber:(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber *)sub;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (void)onStart;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber, sub_, RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber_initWithRxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber_(RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber *self, RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber *sub);

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber *new_RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber_initWithRxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber_(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber *sub) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber *create_RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber_initWithRxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber_(RxInternalOperatorsOperatorWindowWithObservable_SourceSubscriber *sub);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorWindowWithObservable_BoundarySubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorWindowWithObservable")
