//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxExceptionsExceptions.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsSingleOnErrorReturn.h"
#include "RxSingle.h"
#include "RxSingleSubscriber.h"

@implementation RxInternalOperatorsSingleOnErrorReturn

- (instancetype)initWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)source
                        withRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunction {
  RxInternalOperatorsSingleOnErrorReturn_initWithRxSingle_OnSubscribe_withRxFunctionsFunc1_(self, source, resumeFunction);
  return self;
}

- (void)callWithId:(RxSingleSubscriber *)t {
  RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber *parent = create_RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber_initWithRxSingleSubscriber_withRxFunctionsFunc1_(t, resumeFunction_);
  [((RxSingleSubscriber *) nil_chk(t)) addWithRxSubscription:parent];
  [((id<RxSingle_OnSubscribe>) nil_chk(source_)) callWithId:parent];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(resumeFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingle_OnSubscribe:withRxFunctionsFunc1:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxSingle_OnSubscribe;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "resumeFunction_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LRxSingle_OnSubscribe;LRxFunctionsFunc1;", "(Lrx/Single$OnSubscribe<TT;>;Lrx/functions/Func1<Ljava/lang/Throwable;+TT;>;)V", "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TT;>;)V", "Lrx/Single$OnSubscribe<TT;>;", "Lrx/functions/Func1<Ljava/lang/Throwable;+TT;>;", "LRxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Single$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnErrorReturn = { "SingleOnErrorReturn", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 7, -1, 8, -1 };
  return &_RxInternalOperatorsSingleOnErrorReturn;
}

@end

void RxInternalOperatorsSingleOnErrorReturn_initWithRxSingle_OnSubscribe_withRxFunctionsFunc1_(RxInternalOperatorsSingleOnErrorReturn *self, id<RxSingle_OnSubscribe> source, id<RxFunctionsFunc1> resumeFunction) {
  NSObject_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->resumeFunction_, resumeFunction);
}

RxInternalOperatorsSingleOnErrorReturn *new_RxInternalOperatorsSingleOnErrorReturn_initWithRxSingle_OnSubscribe_withRxFunctionsFunc1_(id<RxSingle_OnSubscribe> source, id<RxFunctionsFunc1> resumeFunction) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnErrorReturn, initWithRxSingle_OnSubscribe_withRxFunctionsFunc1_, source, resumeFunction)
}

RxInternalOperatorsSingleOnErrorReturn *create_RxInternalOperatorsSingleOnErrorReturn_initWithRxSingle_OnSubscribe_withRxFunctionsFunc1_(id<RxSingle_OnSubscribe> source, id<RxFunctionsFunc1> resumeFunction) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnErrorReturn, initWithRxSingle_OnSubscribe_withRxFunctionsFunc1_, source, resumeFunction)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleOnErrorReturn)

@implementation RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber

- (instancetype)initWithRxSingleSubscriber:(RxSingleSubscriber *)actual
                      withRxFunctionsFunc1:(id<RxFunctionsFunc1>)resumeFunction {
  RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber_initWithRxSingleSubscriber_withRxFunctionsFunc1_(self, actual, resumeFunction);
  return self;
}

- (void)onSuccessWithId:(id)value {
  [((RxSingleSubscriber *) nil_chk(actual_)) onSuccessWithId:value];
}

- (void)onErrorWithNSException:(NSException *)error {
  id v;
  @try {
    v = [((id<RxFunctionsFunc1>) nil_chk(resumeFunction_)) callWithId:error];
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    [((RxSingleSubscriber *) nil_chk(actual_)) onErrorWithNSException:ex];
    return;
  }
  [((RxSingleSubscriber *) nil_chk(actual_)) onSuccessWithId:v];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(resumeFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSingleSubscriber:withRxFunctionsFunc1:);
  methods[1].selector = @selector(onSuccessWithId:);
  methods[2].selector = @selector(onErrorWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LRxSingleSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "resumeFunction_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "LRxSingleSubscriber;LRxFunctionsFunc1;", "(Lrx/SingleSubscriber<-TT;>;Lrx/functions/Func1<Ljava/lang/Throwable;+TT;>;)V", "onSuccess", "LNSObject;", "(TT;)V", "onError", "LNSException;", "Lrx/SingleSubscriber<-TT;>;", "Lrx/functions/Func1<Ljava/lang/Throwable;+TT;>;", "LRxInternalOperatorsSingleOnErrorReturn;", "<T:Ljava/lang/Object;>Lrx/SingleSubscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber = { "OnErrorReturnsSingleSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 3, 2, 9, -1, -1, 10, -1 };
  return &_RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber;
}

@end

void RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber_initWithRxSingleSubscriber_withRxFunctionsFunc1_(RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber *self, RxSingleSubscriber *actual, id<RxFunctionsFunc1> resumeFunction) {
  RxSingleSubscriber_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->resumeFunction_, resumeFunction);
}

RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber *new_RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber_initWithRxSingleSubscriber_withRxFunctionsFunc1_(RxSingleSubscriber *actual, id<RxFunctionsFunc1> resumeFunction) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber, initWithRxSingleSubscriber_withRxFunctionsFunc1_, actual, resumeFunction)
}

RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber *create_RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber_initWithRxSingleSubscriber_withRxFunctionsFunc1_(RxSingleSubscriber *actual, id<RxFunctionsFunc1> resumeFunction) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber, initWithRxSingleSubscriber_withRxFunctionsFunc1_, actual, resumeFunction)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleOnErrorReturn_OnErrorReturnsSingleSubscriber)
