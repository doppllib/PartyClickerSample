//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeSkipTimed")
#ifdef RESTRICT_RxInternalOperatorsOnSubscribeSkipTimed
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeSkipTimed 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeSkipTimed 1
#endif
#undef RESTRICT_RxInternalOperatorsOnSubscribeSkipTimed

#if !defined (RxInternalOperatorsOnSubscribeSkipTimed_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeSkipTimed || defined(INCLUDE_RxInternalOperatorsOnSubscribeSkipTimed))
#define RxInternalOperatorsOnSubscribeSkipTimed_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_OnSubscribe 1
#include "RxObservable.h"

@class JavaUtilConcurrentTimeUnit;
@class RxObservable;
@class RxScheduler;
@class RxSubscriber;

@interface RxInternalOperatorsOnSubscribeSkipTimed : NSObject < RxObservable_OnSubscribe > {
 @public
  jlong time_;
  JavaUtilConcurrentTimeUnit *unit_;
  RxScheduler *scheduler_;
  RxObservable *source_;
}

#pragma mark Public

- (instancetype)initWithRxObservable:(RxObservable *)source
                            withLong:(jlong)time
      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                     withRxScheduler:(RxScheduler *)scheduler;

- (void)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeSkipTimed)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeSkipTimed, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeSkipTimed, scheduler_, RxScheduler *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeSkipTimed, source_, RxObservable *)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeSkipTimed_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxInternalOperatorsOnSubscribeSkipTimed *self, RxObservable *source, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeSkipTimed *new_RxInternalOperatorsOnSubscribeSkipTimed_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeSkipTimed *create_RxInternalOperatorsOnSubscribeSkipTimed_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeSkipTimed)

#endif

#if !defined (RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeSkipTimed || defined(INCLUDE_RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber))
#define RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "RxSubscriber.h"

#define RESTRICT_RxFunctionsAction0 1
#define INCLUDE_RxFunctionsAction0 1
#include "RxFunctionsAction0.h"

@interface RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber : RxSubscriber < RxFunctionsAction0 > {
 @public
  RxSubscriber *child_;
  volatile_jboolean gate_;
}

#pragma mark Public

- (void)call;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber, child_, RxSubscriber *)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber *self, RxSubscriber *child);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber *new_RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber_initWithRxSubscriber_(RxSubscriber *child) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber *create_RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber_initWithRxSubscriber_(RxSubscriber *child);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeSkipTimed_SkipTimedSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeSkipTimed")
