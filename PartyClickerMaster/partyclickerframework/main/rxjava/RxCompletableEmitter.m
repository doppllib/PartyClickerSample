//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxCompletableEmitter.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"

@interface RxCompletableEmitter : NSObject

@end

__attribute__((unused)) static IOSObjectArray *RxCompletableEmitter__Annotations$0();

@implementation RxCompletableEmitter

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(setSubscriptionWithRxSubscription:);
  methods[3].selector = @selector(setCancellationWithRxAsyncEmitter_Cancellable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "setSubscription", "LRxSubscription;", "setCancellation", "LRxAsyncEmitter_Cancellable;", (void *)&RxCompletableEmitter__Annotations$0 };
  static const J2ObjcClassInfo _RxCompletableEmitter = { "CompletableEmitter", "rx", ptrTable, methods, NULL, 7, 0x609, 4, 0, -1, -1, -1, -1, 6 };
  return &_RxCompletableEmitter;
}

@end

IOSObjectArray *RxCompletableEmitter__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxCompletableEmitter)
