//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/core/src/main/java/co/touchlab/squeaky/misc/IOUtils.java
//

#include "CoTouchlabSqueakyMiscIOUtils.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"

@implementation CoTouchlabSqueakyMiscIOUtils

+ (void)closeQuietlyWithJavaIoCloseable:(id<JavaIoCloseable>)closeable {
  CoTouchlabSqueakyMiscIOUtils_closeQuietlyWithJavaIoCloseable_(closeable);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyMiscIOUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(closeQuietlyWithJavaIoCloseable:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "closeQuietly", "LJavaIoCloseable;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyMiscIOUtils = { "IOUtils", "co.touchlab.squeaky.misc", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabSqueakyMiscIOUtils;
}

@end

void CoTouchlabSqueakyMiscIOUtils_closeQuietlyWithJavaIoCloseable_(id<JavaIoCloseable> closeable) {
  CoTouchlabSqueakyMiscIOUtils_initialize();
  if (closeable != nil) {
    @try {
      [closeable close];
    }
    @catch (JavaIoIOException *e) {
    }
  }
}

void CoTouchlabSqueakyMiscIOUtils_init(CoTouchlabSqueakyMiscIOUtils *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyMiscIOUtils *new_CoTouchlabSqueakyMiscIOUtils_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyMiscIOUtils, init)
}

CoTouchlabSqueakyMiscIOUtils *create_CoTouchlabSqueakyMiscIOUtils_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyMiscIOUtils, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyMiscIOUtils)
