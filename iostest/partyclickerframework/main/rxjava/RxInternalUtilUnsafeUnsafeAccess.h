//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalUtilUnsafeUnsafeAccess")
#ifdef RESTRICT_RxInternalUtilUnsafeUnsafeAccess
#define INCLUDE_ALL_RxInternalUtilUnsafeUnsafeAccess 0
#else
#define INCLUDE_ALL_RxInternalUtilUnsafeUnsafeAccess 1
#endif
#undef RESTRICT_RxInternalUtilUnsafeUnsafeAccess

#if !defined (RxInternalUtilUnsafeUnsafeAccess_) && (INCLUDE_ALL_RxInternalUtilUnsafeUnsafeAccess || defined(INCLUDE_RxInternalUtilUnsafeUnsafeAccess))
#define RxInternalUtilUnsafeUnsafeAccess_

@class IOSClass;
@class SunMiscUnsafe;

@interface RxInternalUtilUnsafeUnsafeAccess : NSObject

#pragma mark Public

+ (jlong)addressOfWithIOSClass:(IOSClass *)clazz
                  withNSString:(NSString *)fieldName;

+ (jboolean)compareAndSwapIntWithId:(id)obj
                           withLong:(jlong)offset
                            withInt:(jint)expected
                            withInt:(jint)newValue;

+ (jint)getAndAddIntWithId:(id)obj
                  withLong:(jlong)offset
                   withInt:(jint)n;

+ (jint)getAndIncrementIntWithId:(id)obj
                        withLong:(jlong)offset;

+ (jint)getAndSetIntWithId:(id)obj
                  withLong:(jlong)offset
                   withInt:(jint)newValue;

+ (jboolean)isUnsafeAvailable;

@end

J2OBJC_STATIC_INIT(RxInternalUtilUnsafeUnsafeAccess)

inline SunMiscUnsafe *RxInternalUtilUnsafeUnsafeAccess_get_UNSAFE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT SunMiscUnsafe *RxInternalUtilUnsafeUnsafeAccess_UNSAFE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalUtilUnsafeUnsafeAccess, UNSAFE, SunMiscUnsafe *)

FOUNDATION_EXPORT jboolean RxInternalUtilUnsafeUnsafeAccess_isUnsafeAvailable();

FOUNDATION_EXPORT jint RxInternalUtilUnsafeUnsafeAccess_getAndIncrementIntWithId_withLong_(id obj, jlong offset);

FOUNDATION_EXPORT jint RxInternalUtilUnsafeUnsafeAccess_getAndAddIntWithId_withLong_withInt_(id obj, jlong offset, jint n);

FOUNDATION_EXPORT jint RxInternalUtilUnsafeUnsafeAccess_getAndSetIntWithId_withLong_withInt_(id obj, jlong offset, jint newValue);

FOUNDATION_EXPORT jboolean RxInternalUtilUnsafeUnsafeAccess_compareAndSwapIntWithId_withLong_withInt_withInt_(id obj, jlong offset, jint expected, jint newValue);

FOUNDATION_EXPORT jlong RxInternalUtilUnsafeUnsafeAccess_addressOfWithIOSClass_withNSString_(IOSClass *clazz, NSString *fieldName);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeUnsafeAccess)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalUtilUnsafeUnsafeAccess")
