//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "CoTouchlabSqueakyDaoSqueakyContext.h"
#include "CoTouchlabSqueakyStmtQueryRaw.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "java/util/List.h"

@interface CoTouchlabSqueakyStmtQueryRaw () {
 @public
  NSString *statement_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyStmtQueryRaw, statement_, NSString *)

@implementation CoTouchlabSqueakyStmtQueryRaw

- (instancetype)initWithNSString:(NSString *)statement {
  CoTouchlabSqueakyStmtQueryRaw_initWithNSString_(self, statement);
  return self;
}

- (void)appendSqlWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)squeakyContext
                              withJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                            withBoolean:(jboolean)joinsAllowed {
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:statement_];
}

- (void)appendValueWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)squeakyContext
                                         withJavaUtilList:(id<JavaUtilList>)params {
}

- (void)dealloc {
  RELEASE_(statement_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(appendSqlWithCoTouchlabSqueakyDaoSqueakyContext:withJavaLangStringBuilder:withBoolean:);
  methods[2].selector = @selector(appendValueWithCoTouchlabSqueakyDaoSqueakyContext:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "statement_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "appendSql", "LCoTouchlabSqueakyDaoSqueakyContext;LJavaLangStringBuilder;Z", "appendValue", "LCoTouchlabSqueakyDaoSqueakyContext;LJavaUtilList;", "LJavaSqlSQLException;", "(Lco/touchlab/squeaky/dao/SqueakyContext;Ljava/util/List<Ljava/lang/String;>;)V" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyStmtQueryRaw = { "Raw", "co.touchlab.squeaky.stmt.query", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_CoTouchlabSqueakyStmtQueryRaw;
}

@end

void CoTouchlabSqueakyStmtQueryRaw_initWithNSString_(CoTouchlabSqueakyStmtQueryRaw *self, NSString *statement) {
  NSObject_init(self);
  JreStrongAssign(&self->statement_, statement);
}

CoTouchlabSqueakyStmtQueryRaw *new_CoTouchlabSqueakyStmtQueryRaw_initWithNSString_(NSString *statement) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyStmtQueryRaw, initWithNSString_, statement)
}

CoTouchlabSqueakyStmtQueryRaw *create_CoTouchlabSqueakyStmtQueryRaw_initWithNSString_(NSString *statement) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyStmtQueryRaw, initWithNSString_, statement)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyStmtQueryRaw)
