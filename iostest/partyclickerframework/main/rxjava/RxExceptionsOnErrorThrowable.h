//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxExceptionsOnErrorThrowable")
#ifdef RESTRICT_RxExceptionsOnErrorThrowable
#define INCLUDE_ALL_RxExceptionsOnErrorThrowable 0
#else
#define INCLUDE_ALL_RxExceptionsOnErrorThrowable 1
#endif
#undef RESTRICT_RxExceptionsOnErrorThrowable

#if !defined (RxExceptionsOnErrorThrowable_) && (INCLUDE_ALL_RxExceptionsOnErrorThrowable || defined(INCLUDE_RxExceptionsOnErrorThrowable))
#define RxExceptionsOnErrorThrowable_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@interface RxExceptionsOnErrorThrowable : JavaLangRuntimeException

#pragma mark Public

+ (NSException *)addValueAsLastCauseWithNSException:(NSException *)e
                                             withId:(id)value;

+ (RxExceptionsOnErrorThrowable *)fromWithNSException:(NSException *)t;

- (id)getValue;

- (jboolean)isValueNull;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsOnErrorThrowable)

FOUNDATION_EXPORT RxExceptionsOnErrorThrowable *RxExceptionsOnErrorThrowable_fromWithNSException_(NSException *t);

FOUNDATION_EXPORT NSException *RxExceptionsOnErrorThrowable_addValueAsLastCauseWithNSException_withId_(NSException *e, id value);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsOnErrorThrowable)

#endif

#if !defined (RxExceptionsOnErrorThrowable_OnNextValue_) && (INCLUDE_ALL_RxExceptionsOnErrorThrowable || defined(INCLUDE_RxExceptionsOnErrorThrowable_OnNextValue))
#define RxExceptionsOnErrorThrowable_OnNextValue_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@interface RxExceptionsOnErrorThrowable_OnNextValue : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithId:(id)value;

- (id)getValue;

#pragma mark Package-Private

+ (NSString *)renderValueWithId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsOnErrorThrowable_OnNextValue)

FOUNDATION_EXPORT void RxExceptionsOnErrorThrowable_OnNextValue_initWithId_(RxExceptionsOnErrorThrowable_OnNextValue *self, id value);

FOUNDATION_EXPORT RxExceptionsOnErrorThrowable_OnNextValue *new_RxExceptionsOnErrorThrowable_OnNextValue_initWithId_(id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsOnErrorThrowable_OnNextValue *create_RxExceptionsOnErrorThrowable_OnNextValue_initWithId_(id value);

FOUNDATION_EXPORT NSString *RxExceptionsOnErrorThrowable_OnNextValue_renderValueWithId_(id value);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsOnErrorThrowable_OnNextValue)

#endif

#if !defined (RxExceptionsOnErrorThrowable_OnNextValue_Primitives_) && (INCLUDE_ALL_RxExceptionsOnErrorThrowable || defined(INCLUDE_RxExceptionsOnErrorThrowable_OnNextValue_Primitives))
#define RxExceptionsOnErrorThrowable_OnNextValue_Primitives_

@protocol JavaUtilSet;

@interface RxExceptionsOnErrorThrowable_OnNextValue_Primitives : NSObject

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(RxExceptionsOnErrorThrowable_OnNextValue_Primitives)

inline id<JavaUtilSet> RxExceptionsOnErrorThrowable_OnNextValue_Primitives_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilSet> RxExceptionsOnErrorThrowable_OnNextValue_Primitives_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxExceptionsOnErrorThrowable_OnNextValue_Primitives, INSTANCE, id<JavaUtilSet>)

FOUNDATION_EXPORT void RxExceptionsOnErrorThrowable_OnNextValue_Primitives_init(RxExceptionsOnErrorThrowable_OnNextValue_Primitives *self);

FOUNDATION_EXPORT RxExceptionsOnErrorThrowable_OnNextValue_Primitives *new_RxExceptionsOnErrorThrowable_OnNextValue_Primitives_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsOnErrorThrowable_OnNextValue_Primitives *create_RxExceptionsOnErrorThrowable_OnNextValue_Primitives_init();

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsOnErrorThrowable_OnNextValue_Primitives)

#endif

#pragma pop_macro("INCLUDE_ALL_RxExceptionsOnErrorThrowable")
