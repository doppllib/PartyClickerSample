//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilObservable")
#ifdef RESTRICT_RxInternalOperatorsSingleTakeUntilObservable
#define INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilObservable 0
#else
#define INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilObservable 1
#endif
#undef RESTRICT_RxInternalOperatorsSingleTakeUntilObservable

#if !defined (RxInternalOperatorsSingleTakeUntilObservable_) && (INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilObservable || defined(INCLUDE_RxInternalOperatorsSingleTakeUntilObservable))
#define RxInternalOperatorsSingleTakeUntilObservable_

#define RESTRICT_RxSingle 1
#define INCLUDE_RxSingle_OnSubscribe 1
#include "RxSingle.h"

@class RxObservable;
@class RxSingleSubscriber;

@interface RxInternalOperatorsSingleTakeUntilObservable : NSObject < RxSingle_OnSubscribe > {
 @public
  id<RxSingle_OnSubscribe> source_;
  RxObservable *other_;
}

#pragma mark Public

- (instancetype)initWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)source
                            withRxObservable:(RxObservable *)other;

- (void)callWithId:(RxSingleSubscriber *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleTakeUntilObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleTakeUntilObservable, source_, id<RxSingle_OnSubscribe>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleTakeUntilObservable, other_, RxObservable *)

FOUNDATION_EXPORT void RxInternalOperatorsSingleTakeUntilObservable_initWithRxSingle_OnSubscribe_withRxObservable_(RxInternalOperatorsSingleTakeUntilObservable *self, id<RxSingle_OnSubscribe> source, RxObservable *other);

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilObservable *new_RxInternalOperatorsSingleTakeUntilObservable_initWithRxSingle_OnSubscribe_withRxObservable_(id<RxSingle_OnSubscribe> source, RxObservable *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilObservable *create_RxInternalOperatorsSingleTakeUntilObservable_initWithRxSingle_OnSubscribe_withRxObservable_(id<RxSingle_OnSubscribe> source, RxObservable *other);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleTakeUntilObservable)

#endif

#if !defined (RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilObservable || defined(INCLUDE_RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber))
#define RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_

#define RESTRICT_RxSingleSubscriber 1
#define INCLUDE_RxSingleSubscriber 1
#include "RxSingleSubscriber.h"

@class JavaUtilConcurrentAtomicAtomicBoolean;
@class RxSubscriber;

@interface RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber : RxSingleSubscriber {
 @public
  RxSingleSubscriber *actual_;
  JavaUtilConcurrentAtomicAtomicBoolean *once_;
  RxSubscriber *other_;
}

#pragma mark Public

- (void)onErrorWithNSException:(NSException *)error;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithRxSingleSubscriber:(RxSingleSubscriber *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber, actual_, RxSingleSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber, once_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber, other_, RxSubscriber *)

FOUNDATION_EXPORT void RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_initWithRxSingleSubscriber_(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber *self, RxSingleSubscriber *actual);

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber *new_RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_initWithRxSingleSubscriber_(RxSingleSubscriber *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber *create_RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_initWithRxSingleSubscriber_(RxSingleSubscriber *actual);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber)

#endif

#if !defined (RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilObservable || defined(INCLUDE_RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber))
#define RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "RxSubscriber.h"

@class RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber;

@interface RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber : RxSubscriber

#pragma mark Public

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)error;

- (void)onNextWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithRxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber:(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber)

FOUNDATION_EXPORT void RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber_initWithRxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber *self, RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber *outer$);

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber *new_RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber_initWithRxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber *create_RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber_initWithRxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleTakeUntilObservable_TakeUntilSourceSubscriber_OtherSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilObservable")
