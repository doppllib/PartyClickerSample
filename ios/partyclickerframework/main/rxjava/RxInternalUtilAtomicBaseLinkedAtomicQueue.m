//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxInternalUtilAtomicBaseLinkedAtomicQueue.h"
#include "RxInternalUtilAtomicLinkedQueueNode.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/AbstractQueue.h"
#include "java/util/Iterator.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

@interface RxInternalUtilAtomicBaseLinkedAtomicQueue () {
 @public
  JavaUtilConcurrentAtomicAtomicReference *producerNode_;
  JavaUtilConcurrentAtomicAtomicReference *consumerNode_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalUtilAtomicBaseLinkedAtomicQueue, producerNode_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxInternalUtilAtomicBaseLinkedAtomicQueue, consumerNode_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static RxInternalUtilAtomicLinkedQueueNode *RxInternalUtilAtomicBaseLinkedAtomicQueue_lvProducerNode(RxInternalUtilAtomicBaseLinkedAtomicQueue *self);

__attribute__((unused)) static RxInternalUtilAtomicLinkedQueueNode *RxInternalUtilAtomicBaseLinkedAtomicQueue_lvConsumerNode(RxInternalUtilAtomicBaseLinkedAtomicQueue *self);

@implementation RxInternalUtilAtomicBaseLinkedAtomicQueue

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilAtomicBaseLinkedAtomicQueue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (RxInternalUtilAtomicLinkedQueueNode *)lvProducerNode {
  return RxInternalUtilAtomicBaseLinkedAtomicQueue_lvProducerNode(self);
}

- (RxInternalUtilAtomicLinkedQueueNode *)lpProducerNode {
  return [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(producerNode_)) get];
}

- (void)spProducerNodeWithRxInternalUtilAtomicLinkedQueueNode:(RxInternalUtilAtomicLinkedQueueNode *)node {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(producerNode_)) lazySetWithId:node];
}

- (RxInternalUtilAtomicLinkedQueueNode *)xchgProducerNodeWithRxInternalUtilAtomicLinkedQueueNode:(RxInternalUtilAtomicLinkedQueueNode *)node {
  return [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(producerNode_)) getAndSetWithId:node];
}

- (RxInternalUtilAtomicLinkedQueueNode *)lvConsumerNode {
  return RxInternalUtilAtomicBaseLinkedAtomicQueue_lvConsumerNode(self);
}

- (RxInternalUtilAtomicLinkedQueueNode *)lpConsumerNode {
  return [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(consumerNode_)) get];
}

- (void)spConsumerNodeWithRxInternalUtilAtomicLinkedQueueNode:(RxInternalUtilAtomicLinkedQueueNode *)node {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(consumerNode_)) lazySetWithId:node];
}

- (id<JavaUtilIterator>)iterator {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)size {
  RxInternalUtilAtomicLinkedQueueNode *chaserNode = RxInternalUtilAtomicBaseLinkedAtomicQueue_lvConsumerNode(self);
  RxInternalUtilAtomicLinkedQueueNode *producerNode = RxInternalUtilAtomicBaseLinkedAtomicQueue_lvProducerNode(self);
  jint size = 0;
  while (chaserNode != producerNode && size < JavaLangInteger_MAX_VALUE) {
    RxInternalUtilAtomicLinkedQueueNode *next;
    while ((next = [((RxInternalUtilAtomicLinkedQueueNode *) nil_chk(chaserNode)) lvNext]) == nil) ;
    chaserNode = next;
    size++;
  }
  return size;
}

- (jboolean)isEmpty {
  return RxInternalUtilAtomicBaseLinkedAtomicQueue_lvConsumerNode(self) == RxInternalUtilAtomicBaseLinkedAtomicQueue_lvProducerNode(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(producerNode_);
  RELEASE_(consumerNode_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxInternalUtilAtomicLinkedQueueNode;", 0x14, -1, -1, -1, 0, -1, -1 },
    { NULL, "LRxInternalUtilAtomicLinkedQueueNode;", 0x14, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x14, 1, 2, -1, 3, -1, -1 },
    { NULL, "LRxInternalUtilAtomicLinkedQueueNode;", 0x14, 4, 2, -1, 5, -1, -1 },
    { NULL, "LRxInternalUtilAtomicLinkedQueueNode;", 0x14, -1, -1, -1, 0, -1, -1 },
    { NULL, "LRxInternalUtilAtomicLinkedQueueNode;", 0x14, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x14, 6, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x11, -1, -1, -1, 7, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(lvProducerNode);
  methods[2].selector = @selector(lpProducerNode);
  methods[3].selector = @selector(spProducerNodeWithRxInternalUtilAtomicLinkedQueueNode:);
  methods[4].selector = @selector(xchgProducerNodeWithRxInternalUtilAtomicLinkedQueueNode:);
  methods[5].selector = @selector(lvConsumerNode);
  methods[6].selector = @selector(lpConsumerNode);
  methods[7].selector = @selector(spConsumerNodeWithRxInternalUtilAtomicLinkedQueueNode:);
  methods[8].selector = @selector(iterator);
  methods[9].selector = @selector(size);
  methods[10].selector = @selector(isEmpty);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "producerNode_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
    { "consumerNode_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "()Lrx/internal/util/atomic/LinkedQueueNode<TE;>;", "spProducerNode", "LRxInternalUtilAtomicLinkedQueueNode;", "(Lrx/internal/util/atomic/LinkedQueueNode<TE;>;)V", "xchgProducerNode", "(Lrx/internal/util/atomic/LinkedQueueNode<TE;>;)Lrx/internal/util/atomic/LinkedQueueNode<TE;>;", "spConsumerNode", "()Ljava/util/Iterator<TE;>;", "Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/util/atomic/LinkedQueueNode<TE;>;>;", "<E:Ljava/lang/Object;>Ljava/util/AbstractQueue<TE;>;" };
  static const J2ObjcClassInfo _RxInternalUtilAtomicBaseLinkedAtomicQueue = { "BaseLinkedAtomicQueue", "rx.internal.util.atomic", ptrTable, methods, fields, 7, 0x400, 11, 2, -1, -1, -1, 9, -1 };
  return &_RxInternalUtilAtomicBaseLinkedAtomicQueue;
}

@end

void RxInternalUtilAtomicBaseLinkedAtomicQueue_init(RxInternalUtilAtomicBaseLinkedAtomicQueue *self) {
  JavaUtilAbstractQueue_init(self);
  JreStrongAssignAndConsume(&self->producerNode_, new_JavaUtilConcurrentAtomicAtomicReference_init());
  JreStrongAssignAndConsume(&self->consumerNode_, new_JavaUtilConcurrentAtomicAtomicReference_init());
}

RxInternalUtilAtomicLinkedQueueNode *RxInternalUtilAtomicBaseLinkedAtomicQueue_lvProducerNode(RxInternalUtilAtomicBaseLinkedAtomicQueue *self) {
  return [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(self->producerNode_)) get];
}

RxInternalUtilAtomicLinkedQueueNode *RxInternalUtilAtomicBaseLinkedAtomicQueue_lvConsumerNode(RxInternalUtilAtomicBaseLinkedAtomicQueue *self) {
  return [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(self->consumerNode_)) get];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilAtomicBaseLinkedAtomicQueue)
