//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxScheduler.h"
#include "RxSchedulersImmediateScheduler.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/annotation/Annotation.h"

@interface RxSchedulersImmediateScheduler ()

- (instancetype)init;

@end

__attribute__((unused)) static void RxSchedulersImmediateScheduler_init(RxSchedulersImmediateScheduler *self);

__attribute__((unused)) static RxSchedulersImmediateScheduler *new_RxSchedulersImmediateScheduler_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSchedulersImmediateScheduler *create_RxSchedulersImmediateScheduler_init();

__attribute__((unused)) static IOSObjectArray *RxSchedulersImmediateScheduler__Annotations$0();

@implementation RxSchedulersImmediateScheduler

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxSchedulersImmediateScheduler_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (RxScheduler_Worker *)createWorker {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxScheduler_Worker;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createWorker);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxSchedulersImmediateScheduler__Annotations$0 };
  static const J2ObjcClassInfo _RxSchedulersImmediateScheduler = { "ImmediateScheduler", "rx.schedulers", ptrTable, methods, NULL, 7, 0x11, 2, 0, -1, -1, -1, -1, 0 };
  return &_RxSchedulersImmediateScheduler;
}

@end

void RxSchedulersImmediateScheduler_init(RxSchedulersImmediateScheduler *self) {
  RxScheduler_init(self);
  @throw create_JavaLangIllegalStateException_initWithNSString_(@"No instances!");
}

RxSchedulersImmediateScheduler *new_RxSchedulersImmediateScheduler_init() {
  J2OBJC_NEW_IMPL(RxSchedulersImmediateScheduler, init)
}

RxSchedulersImmediateScheduler *create_RxSchedulersImmediateScheduler_init() {
  J2OBJC_CREATE_IMPL(RxSchedulersImmediateScheduler, init)
}

IOSObjectArray *RxSchedulersImmediateScheduler__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSchedulersImmediateScheduler)
