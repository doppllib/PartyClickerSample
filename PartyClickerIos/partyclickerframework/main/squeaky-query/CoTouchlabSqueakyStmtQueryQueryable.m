//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/query/src/main/java/co/touchlab/squeaky/stmt/query/Queryable.java
//

#include "CoTouchlabSqueakyStmtQueryQueryable.h"
#include "J2ObjC_source.h"

@interface CoTouchlabSqueakyStmtQueryQueryable : NSObject

@end

@implementation CoTouchlabSqueakyStmtQueryQueryable

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao_QueryModifiers;", 0x401, -1, -1, 2, 3, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, -1, -1, -1, 4, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 5, 6, 2, 7, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 5, 8, 2, 9, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 10, 6, 2, 7, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 10, 8, 2, 9, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 11, 6, 2, 7, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 11, 8, 2, 9, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 12, 6, 2, 7, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 12, 8, 2, 9, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 13, 6, 2, 7, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 13, 8, 2, 9, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 14, 6, 2, 7, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 14, 8, 2, 9, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 15, 6, 2, 7, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 15, 8, 2, 9, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 16, 17, 2, 18, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 16, 19, 2, 20, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 21, 17, 2, 18, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 21, 19, 2, 20, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x481, 16, 22, 2, 23, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x481, 16, 24, 2, 25, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x481, 21, 22, 2, 23, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x481, 21, 24, 2, 25, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 26, 27, 2, 28, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 26, 29, 2, 30, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 31, 32, 2, 33, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 31, 34, 2, 35, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 36, 32, 2, 33, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 36, 34, 2, 35, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 37, -1, 2, 4, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 38, -1, 2, 4, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, 39, -1, 2, 4, -1, -1 },
    { NULL, "LCoTouchlabSqueakyStmtQueryQueryable;", 0x401, -1, -1, 2, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getWhereStatementWithBoolean:);
  methods[1].selector = @selector(query);
  methods[2].selector = @selector(reset);
  methods[3].selector = @selector(eqWithNSString:withId:);
  methods[4].selector = @selector(eqWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withId:);
  methods[5].selector = @selector(gtWithNSString:withId:);
  methods[6].selector = @selector(gtWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withId:);
  methods[7].selector = @selector(geWithNSString:withId:);
  methods[8].selector = @selector(geWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withId:);
  methods[9].selector = @selector(ltWithNSString:withId:);
  methods[10].selector = @selector(ltWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withId:);
  methods[11].selector = @selector(leWithNSString:withId:);
  methods[12].selector = @selector(leWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withId:);
  methods[13].selector = @selector(likeWithNSString:withId:);
  methods[14].selector = @selector(likeWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withId:);
  methods[15].selector = @selector(neWithNSString:withId:);
  methods[16].selector = @selector(neWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withId:);
  methods[17].selector = @selector(inWithNSString:withJavaLangIterable:);
  methods[18].selector = @selector(inWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withJavaLangIterable:);
  methods[19].selector = @selector(notInWithNSString:withJavaLangIterable:);
  methods[20].selector = @selector(notInWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withJavaLangIterable:);
  methods[21].selector = @selector(inWithNSString:withNSObjectArray:);
  methods[22].selector = @selector(inWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withNSObjectArray:);
  methods[23].selector = @selector(notInWithNSString:withNSObjectArray:);
  methods[24].selector = @selector(notInWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withNSObjectArray:);
  methods[25].selector = @selector(betweenWithNSString:withId:withId:);
  methods[26].selector = @selector(betweenWithCoTouchlabSqueakyStmtJoinAlias:withNSString:withId:withId:);
  methods[27].selector = @selector(isNullWithNSString:);
  methods[28].selector = @selector(isNullWithCoTouchlabSqueakyStmtJoinAlias:withNSString:);
  methods[29].selector = @selector(isNotNullWithNSString:);
  methods[30].selector = @selector(isNotNullWithCoTouchlabSqueakyStmtJoinAlias:withNSString:);
  methods[31].selector = @selector(and__);
  methods[32].selector = @selector(or__);
  methods[33].selector = @selector(not__);
  methods[34].selector = @selector(end);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getWhereStatement", "Z", "LJavaSqlSQLException;", "()Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;", "()Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "eq", "LNSString;LNSObject;", "(Ljava/lang/String;Ljava/lang/Object;)Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "LCoTouchlabSqueakyStmtJoinAlias;LNSString;LNSObject;", "(Lco/touchlab/squeaky/stmt/JoinAlias;Ljava/lang/String;Ljava/lang/Object;)Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "gt", "ge", "lt", "le", "like", "ne", "in", "LNSString;LJavaLangIterable;", "(Ljava/lang/String;Ljava/lang/Iterable<*>;)Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "LCoTouchlabSqueakyStmtJoinAlias;LNSString;LJavaLangIterable;", "(Lco/touchlab/squeaky/stmt/JoinAlias;Ljava/lang/String;Ljava/lang/Iterable<*>;)Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "notIn", "LNSString;[LNSObject;", "(Ljava/lang/String;[Ljava/lang/Object;)Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "LCoTouchlabSqueakyStmtJoinAlias;LNSString;[LNSObject;", "(Lco/touchlab/squeaky/stmt/JoinAlias;Ljava/lang/String;[Ljava/lang/Object;)Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "between", "LNSString;LNSObject;LNSObject;", "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "LCoTouchlabSqueakyStmtJoinAlias;LNSString;LNSObject;LNSObject;", "(Lco/touchlab/squeaky/stmt/JoinAlias;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "isNull", "LNSString;", "(Ljava/lang/String;)Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "LCoTouchlabSqueakyStmtJoinAlias;LNSString;", "(Lco/touchlab/squeaky/stmt/JoinAlias;Ljava/lang/String;)Lco/touchlab/squeaky/stmt/query/Queryable<TT;>;", "isNotNull", "and", "or", "not", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyStmtQueryQueryable = { "Queryable", "co.touchlab.squeaky.stmt.query", ptrTable, methods, NULL, 7, 0x609, 35, 0, -1, -1, -1, 40, -1 };
  return &_CoTouchlabSqueakyStmtQueryQueryable;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyStmtQueryQueryable)
