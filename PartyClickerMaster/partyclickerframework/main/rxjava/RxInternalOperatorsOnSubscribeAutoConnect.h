//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeAutoConnect")
#ifdef RESTRICT_RxInternalOperatorsOnSubscribeAutoConnect
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeAutoConnect 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeAutoConnect 1
#endif
#undef RESTRICT_RxInternalOperatorsOnSubscribeAutoConnect

#if !defined (RxInternalOperatorsOnSubscribeAutoConnect_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeAutoConnect || defined(INCLUDE_RxInternalOperatorsOnSubscribeAutoConnect))
#define RxInternalOperatorsOnSubscribeAutoConnect_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_OnSubscribe 1
#include "RxObservable.h"

@class RxObservablesConnectableObservable;
@class RxSubscriber;
@protocol RxFunctionsAction1;

@interface RxInternalOperatorsOnSubscribeAutoConnect : JavaUtilConcurrentAtomicAtomicInteger < RxObservable_OnSubscribe > {
 @public
  RxObservablesConnectableObservable *source_;
  jint numberOfSubscribers_;
  id<RxFunctionsAction1> connection_;
}

#pragma mark Public

- (instancetype)initWithRxObservablesConnectableObservable:(RxObservablesConnectableObservable *)source
                                                   withInt:(jint)numberOfSubscribers
                                    withRxFunctionsAction1:(id<RxFunctionsAction1>)connection;

- (void)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeAutoConnect)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAutoConnect, source_, RxObservablesConnectableObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAutoConnect, connection_, id<RxFunctionsAction1>)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeAutoConnect_initWithRxObservablesConnectableObservable_withInt_withRxFunctionsAction1_(RxInternalOperatorsOnSubscribeAutoConnect *self, RxObservablesConnectableObservable *source, jint numberOfSubscribers, id<RxFunctionsAction1> connection);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeAutoConnect *new_RxInternalOperatorsOnSubscribeAutoConnect_initWithRxObservablesConnectableObservable_withInt_withRxFunctionsAction1_(RxObservablesConnectableObservable *source, jint numberOfSubscribers, id<RxFunctionsAction1> connection) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeAutoConnect *create_RxInternalOperatorsOnSubscribeAutoConnect_initWithRxObservablesConnectableObservable_withInt_withRxFunctionsAction1_(RxObservablesConnectableObservable *source, jint numberOfSubscribers, id<RxFunctionsAction1> connection);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeAutoConnect)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeAutoConnect")
