//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxObserversAsyncCompletableSubscriber")
#ifdef RESTRICT_RxObserversAsyncCompletableSubscriber
#define INCLUDE_ALL_RxObserversAsyncCompletableSubscriber 0
#else
#define INCLUDE_ALL_RxObserversAsyncCompletableSubscriber 1
#endif
#undef RESTRICT_RxObserversAsyncCompletableSubscriber

#if !defined (RxObserversAsyncCompletableSubscriber_) && (INCLUDE_ALL_RxObserversAsyncCompletableSubscriber || defined(INCLUDE_RxObserversAsyncCompletableSubscriber))
#define RxObserversAsyncCompletableSubscriber_

#define RESTRICT_RxCompletableSubscriber 1
#define INCLUDE_RxCompletableSubscriber 1
#include "RxCompletableSubscriber.h"

#define RESTRICT_RxSubscription 1
#define INCLUDE_RxSubscription 1
#include "RxSubscription.h"

@class RxObserversAsyncCompletableSubscriber_Unsubscribed;

@interface RxObserversAsyncCompletableSubscriber : NSObject < RxCompletableSubscriber, RxSubscription >

#pragma mark Public

- (instancetype)init;

- (jboolean)isUnsubscribed;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (void)unsubscribe;

#pragma mark Protected

- (void)clear;

- (void)onStart;

@end

J2OBJC_STATIC_INIT(RxObserversAsyncCompletableSubscriber)

inline RxObserversAsyncCompletableSubscriber_Unsubscribed *RxObserversAsyncCompletableSubscriber_get_UNSUBSCRIBED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT RxObserversAsyncCompletableSubscriber_Unsubscribed *RxObserversAsyncCompletableSubscriber_UNSUBSCRIBED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxObserversAsyncCompletableSubscriber, UNSUBSCRIBED, RxObserversAsyncCompletableSubscriber_Unsubscribed *)

FOUNDATION_EXPORT void RxObserversAsyncCompletableSubscriber_init(RxObserversAsyncCompletableSubscriber *self);

J2OBJC_TYPE_LITERAL_HEADER(RxObserversAsyncCompletableSubscriber)

#endif

#if !defined (RxObserversAsyncCompletableSubscriber_Unsubscribed_) && (INCLUDE_ALL_RxObserversAsyncCompletableSubscriber || defined(INCLUDE_RxObserversAsyncCompletableSubscriber_Unsubscribed))
#define RxObserversAsyncCompletableSubscriber_Unsubscribed_

#define RESTRICT_RxSubscription 1
#define INCLUDE_RxSubscription 1
#include "RxSubscription.h"

@interface RxObserversAsyncCompletableSubscriber_Unsubscribed : NSObject < RxSubscription >

#pragma mark Public

- (jboolean)isUnsubscribed;

- (void)unsubscribe;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversAsyncCompletableSubscriber_Unsubscribed)

FOUNDATION_EXPORT void RxObserversAsyncCompletableSubscriber_Unsubscribed_init(RxObserversAsyncCompletableSubscriber_Unsubscribed *self);

FOUNDATION_EXPORT RxObserversAsyncCompletableSubscriber_Unsubscribed *new_RxObserversAsyncCompletableSubscriber_Unsubscribed_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObserversAsyncCompletableSubscriber_Unsubscribed *create_RxObserversAsyncCompletableSubscriber_Unsubscribed_init();

J2OBJC_TYPE_LITERAL_HEADER(RxObserversAsyncCompletableSubscriber_Unsubscribed)

#endif

#pragma pop_macro("INCLUDE_ALL_RxObserversAsyncCompletableSubscriber")
