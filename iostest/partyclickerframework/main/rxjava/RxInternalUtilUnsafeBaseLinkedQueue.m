//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxInternalUtilAtomicLinkedQueueNode.h"
#include "RxInternalUtilUnsafeBaseLinkedQueue.h"
#include "RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Iterator.h"

@implementation RxInternalUtilUnsafeBaseLinkedQueue

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilUnsafeBaseLinkedQueue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilIterator>)iterator {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)size {
  RxInternalUtilAtomicLinkedQueueNode *chaserNode = [self lvConsumerNode];
  RxInternalUtilAtomicLinkedQueueNode *producerNode = [self lvProducerNode];
  jint size = 0;
  while (chaserNode != producerNode && size < JavaLangInteger_MAX_VALUE) {
    RxInternalUtilAtomicLinkedQueueNode *next;
    while ((next = [((RxInternalUtilAtomicLinkedQueueNode *) nil_chk(chaserNode)) lvNext]) == nil) ;
    chaserNode = next;
    size++;
  }
  return size;
}

- (jboolean)isEmpty {
  return [self lvConsumerNode] == [self lvProducerNode];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x11, -1, -1, -1, 0, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(iterator);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(isEmpty);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "p00_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 1, -1, -1, -1 },
    { "p01_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 2, -1, -1, -1 },
    { "p02_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 3, -1, -1, -1 },
    { "p03_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 4, -1, -1, -1 },
    { "p04_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 5, -1, -1, -1 },
    { "p05_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 6, -1, -1, -1 },
    { "p06_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 7, -1, -1, -1 },
    { "p07_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 8, -1, -1, -1 },
    { "p30_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 9, -1, -1, -1 },
    { "p31_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 10, -1, -1, -1 },
    { "p32_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 11, -1, -1, -1 },
    { "p33_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 12, -1, -1, -1 },
    { "p34_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 13, -1, -1, -1 },
    { "p35_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 14, -1, -1, -1 },
    { "p36_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 15, -1, -1, -1 },
    { "p37_BaseLinkedQueue_", "J", .constantValue.asLong = 0, 0x0, 16, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<TE;>;", "p00", "p01", "p02", "p03", "p04", "p05", "p06", "p07", "p30", "p31", "p32", "p33", "p34", "p35", "p36", "p37", "<E:Ljava/lang/Object;>Lrx/internal/util/unsafe/BaseLinkedQueueConsumerNodeRef<TE;>;" };
  static const J2ObjcClassInfo _RxInternalUtilUnsafeBaseLinkedQueue = { "BaseLinkedQueue", "rx.internal.util.unsafe", ptrTable, methods, fields, 7, 0x400, 4, 16, -1, -1, -1, 17, -1 };
  return &_RxInternalUtilUnsafeBaseLinkedQueue;
}

@end

void RxInternalUtilUnsafeBaseLinkedQueue_init(RxInternalUtilUnsafeBaseLinkedQueue *self) {
  RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilUnsafeBaseLinkedQueue)
