//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONAssert")
#ifdef RESTRICT_OrgSkyscreamerJsonassertJSONAssert
#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONAssert 0
#else
#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONAssert 1
#endif
#undef RESTRICT_OrgSkyscreamerJsonassertJSONAssert

#if !defined (OrgSkyscreamerJsonassertJSONAssert_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertJSONAssert || defined(INCLUDE_OrgSkyscreamerJsonassertJSONAssert))
#define OrgSkyscreamerJsonassertJSONAssert_

@class OrgJsonJSONArray;
@class OrgJsonJSONObject;
@class OrgSkyscreamerJsonassertJSONCompareMode;
@protocol OrgSkyscreamerJsonassertComparatorJSONComparator;

@interface OrgSkyscreamerJsonassertJSONAssert : NSObject

#pragma mark Public

+ (void)assertEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
                    withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
                             withBoolean:(jboolean)strict;

+ (void)assertEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
                    withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;

+ (void)assertEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
                    withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
                              withBoolean:(jboolean)strict;

+ (void)assertEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
                    withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;

+ (void)assertEqualsWithNSString:(NSString *)expectedStr
            withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
                     withBoolean:(jboolean)strict;

+ (void)assertEqualsWithNSString:(NSString *)expectedStr
            withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;

+ (void)assertEqualsWithNSString:(NSString *)expectedStr
           withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
                     withBoolean:(jboolean)strict;

+ (void)assertEqualsWithNSString:(NSString *)expectedStr
           withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;

+ (void)assertEqualsWithNSString:(NSString *)expectedStr
                    withNSString:(NSString *)actualStr
                     withBoolean:(jboolean)strict;

+ (void)assertEqualsWithNSString:(NSString *)expectedStr
                    withNSString:(NSString *)actualStr
withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator;

+ (void)assertEqualsWithNSString:(NSString *)expectedStr
                    withNSString:(NSString *)actualStr
withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;

+ (void)assertNotEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
                       withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
                                withBoolean:(jboolean)strict;

+ (void)assertNotEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
                       withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;

+ (void)assertNotEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
                       withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
                                 withBoolean:(jboolean)strict;

+ (void)assertNotEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
                       withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
 withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;

+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
               withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
                        withBoolean:(jboolean)strict;

+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
               withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;

+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
              withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
                        withBoolean:(jboolean)strict;

+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
              withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;

+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
                       withNSString:(NSString *)actualStr
                        withBoolean:(jboolean)strict;

+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
                       withNSString:(NSString *)actualStr
withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator;

+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
                       withNSString:(NSString *)actualStr
withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertJSONAssert)

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONObject_withBoolean_(NSString *expectedStr, OrgJsonJSONObject *actual, jboolean strict);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONObject_withBoolean_(NSString *expectedStr, OrgJsonJSONObject *actual, jboolean strict);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONArray_withBoolean_(NSString *expectedStr, OrgJsonJSONArray *actual, jboolean strict);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONArray_withBoolean_(NSString *expectedStr, OrgJsonJSONArray *actual, jboolean strict);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withBoolean_(NSString *expectedStr, NSString *actualStr, jboolean strict);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withBoolean_(NSString *expectedStr, NSString *actualStr, jboolean strict);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, NSString *actualStr, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, NSString *actualStr, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(NSString *expectedStr, NSString *actualStr, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(NSString *expectedStr, NSString *actualStr, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withBoolean_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, jboolean strict);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withBoolean_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, jboolean strict);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withBoolean_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, jboolean strict);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withBoolean_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, jboolean strict);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);

FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);

J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertJSONAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONAssert")
