//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsOnErrorNotImplementedException.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsAction2.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxInternalOperatorsOperatorAny.h"
#include "RxInternalUtilInternalObservableUtils.h"
#include "RxInternalUtilUtilityFunctions.h"
#include "RxNotification.h"
#include "RxObservable.h"
#include "RxObservablesConnectableObservable.h"
#include "RxScheduler.h"
#include "java/lang/Boolean.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Void.h"
#include "java/util/List.h"
#include "java/util/concurrent/TimeUnit.h"

__attribute__((unused)) static void RxInternalUtilInternalObservableUtils_initWithNSString_withInt_(RxInternalUtilInternalObservableUtils *self, NSString *__name, jint __ordinal);

@interface RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams () {
 @public
  RxObservable *source_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams, source_, RxObservable *)

@interface RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer () {
 @public
  RxObservable *source_;
  jint bufferSize_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer, source_, RxObservable *)

@interface RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime () {
 @public
  JavaUtilConcurrentTimeUnit *unit_;
  RxObservable *source_;
  jlong time_;
  RxScheduler *scheduler_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime, source_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime, scheduler_, RxScheduler *)

@interface RxInternalUtilInternalObservableUtils_ReplaySupplierTime () {
 @public
  jlong time_;
  JavaUtilConcurrentTimeUnit *unit_;
  RxScheduler *scheduler_;
  jint bufferSize_;
  RxObservable *source_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalUtilInternalObservableUtils_ReplaySupplierTime, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(RxInternalUtilInternalObservableUtils_ReplaySupplierTime, scheduler_, RxScheduler *)
J2OBJC_FIELD_SETTER(RxInternalUtilInternalObservableUtils_ReplaySupplierTime, source_, RxObservable *)

J2OBJC_INITIALIZED_DEFN(RxInternalUtilInternalObservableUtils)

RxInternalUtilInternalObservableUtils_PlusOneLongFunc2 *RxInternalUtilInternalObservableUtils_LONG_COUNTER;
RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2 *RxInternalUtilInternalObservableUtils_OBJECT_EQUALS;
RxInternalUtilInternalObservableUtils_ToArrayFunc1 *RxInternalUtilInternalObservableUtils_TO_ARRAY;
RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1 *RxInternalUtilInternalObservableUtils_RETURNS_VOID;
RxInternalUtilInternalObservableUtils_PlusOneFunc2 *RxInternalUtilInternalObservableUtils_COUNTER;
RxInternalUtilInternalObservableUtils_NotificationErrorExtractor *RxInternalUtilInternalObservableUtils_ERROR_EXTRACTOR;
id<RxFunctionsAction1> RxInternalUtilInternalObservableUtils_ERROR_NOT_IMPLEMENTED;
id<RxObservable_Operator> RxInternalUtilInternalObservableUtils_IS_EMPTY;

RxInternalUtilInternalObservableUtils *RxInternalUtilInternalObservableUtils_values_[0];

@implementation RxInternalUtilInternalObservableUtils

+ (id<RxFunctionsFunc1>)equalsWithWithId:(id)other {
  return RxInternalUtilInternalObservableUtils_equalsWithWithId_(other);
}

+ (id<RxFunctionsFunc1>)isInstanceOfWithIOSClass:(IOSClass *)clazz {
  return RxInternalUtilInternalObservableUtils_isInstanceOfWithIOSClass_(clazz);
}

+ (id<RxFunctionsFunc1>)createRepeatDematerializerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler {
  return RxInternalUtilInternalObservableUtils_createRepeatDematerializerWithRxFunctionsFunc1_(notificationHandler);
}

+ (id<RxFunctionsFunc1>)createReplaySelectorAndObserveOnWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector
                                                             withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalUtilInternalObservableUtils_createReplaySelectorAndObserveOnWithRxFunctionsFunc1_withRxScheduler_(selector, scheduler);
}

+ (id<RxFunctionsFunc1>)createRetryDematerializerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler {
  return RxInternalUtilInternalObservableUtils_createRetryDematerializerWithRxFunctionsFunc1_(notificationHandler);
}

+ (id<RxFunctionsFunc0>)createReplaySupplierWithRxObservable:(RxObservable *)source {
  return RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_(source);
}

+ (id<RxFunctionsFunc0>)createReplaySupplierWithRxObservable:(RxObservable *)source
                                                     withInt:(jint)bufferSize {
  return RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_withInt_(source, bufferSize);
}

+ (id<RxFunctionsFunc0>)createReplaySupplierWithRxObservable:(RxObservable *)source
                                                    withLong:(jlong)time
                              withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                             withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(source, time, unit, scheduler);
}

+ (id<RxFunctionsFunc0>)createReplaySupplierWithRxObservable:(RxObservable *)source
                                                     withInt:(jint)bufferSize
                                                    withLong:(jlong)time
                              withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                             withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(source, bufferSize, time, unit, scheduler);
}

+ (id<RxFunctionsFunc2>)createCollectorCallerWithRxFunctionsAction2:(id<RxFunctionsAction2>)collector {
  return RxInternalUtilInternalObservableUtils_createCollectorCallerWithRxFunctionsAction2_(collector);
}

+ (IOSObjectArray *)values {
  return RxInternalUtilInternalObservableUtils_values();
}

+ (RxInternalUtilInternalObservableUtils *)valueOfWithNSString:(NSString *)name {
  return RxInternalUtilInternalObservableUtils_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxFunctionsFunc1;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, 3, 4, -1, 5, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, 6, 7, -1, 8, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, 9, 10, -1, 11, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, 12, 7, -1, 13, -1, -1 },
    { NULL, "LRxFunctionsFunc0;", 0x9, 14, 15, -1, 16, -1, -1 },
    { NULL, "LRxFunctionsFunc0;", 0x9, 14, 17, -1, 18, -1, -1 },
    { NULL, "LRxFunctionsFunc0;", 0x9, 14, 19, -1, 20, -1, -1 },
    { NULL, "LRxFunctionsFunc0;", 0x9, 14, 21, -1, 22, -1, -1 },
    { NULL, "LRxFunctionsFunc2;", 0x9, 23, 24, -1, 25, -1, -1 },
    { NULL, "[LRxInternalUtilInternalObservableUtils;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxInternalUtilInternalObservableUtils;", 0x9, 26, 27, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(equalsWithWithId:);
  methods[1].selector = @selector(isInstanceOfWithIOSClass:);
  methods[2].selector = @selector(createRepeatDematerializerWithRxFunctionsFunc1:);
  methods[3].selector = @selector(createReplaySelectorAndObserveOnWithRxFunctionsFunc1:withRxScheduler:);
  methods[4].selector = @selector(createRetryDematerializerWithRxFunctionsFunc1:);
  methods[5].selector = @selector(createReplaySupplierWithRxObservable:);
  methods[6].selector = @selector(createReplaySupplierWithRxObservable:withInt:);
  methods[7].selector = @selector(createReplaySupplierWithRxObservable:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[8].selector = @selector(createReplaySupplierWithRxObservable:withInt:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[9].selector = @selector(createCollectorCallerWithRxFunctionsAction2:);
  methods[10].selector = @selector(values);
  methods[11].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LONG_COUNTER", "LRxInternalUtilInternalObservableUtils_PlusOneLongFunc2;", .constantValue.asLong = 0, 0x19, -1, 28, -1, -1 },
    { "OBJECT_EQUALS", "LRxInternalUtilInternalObservableUtils_ObjectEqualsFunc2;", .constantValue.asLong = 0, 0x19, -1, 29, -1, -1 },
    { "TO_ARRAY", "LRxInternalUtilInternalObservableUtils_ToArrayFunc1;", .constantValue.asLong = 0, 0x19, -1, 30, -1, -1 },
    { "RETURNS_VOID", "LRxInternalUtilInternalObservableUtils_ReturnsVoidFunc1;", .constantValue.asLong = 0, 0x18, -1, 31, -1, -1 },
    { "COUNTER", "LRxInternalUtilInternalObservableUtils_PlusOneFunc2;", .constantValue.asLong = 0, 0x19, -1, 32, -1, -1 },
    { "ERROR_EXTRACTOR", "LRxInternalUtilInternalObservableUtils_NotificationErrorExtractor;", .constantValue.asLong = 0, 0x18, -1, 33, -1, -1 },
    { "ERROR_NOT_IMPLEMENTED", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x19, -1, 34, 35, -1 },
    { "IS_EMPTY", "LRxObservable_Operator;", .constantValue.asLong = 0, 0x19, -1, 36, 37, -1 },
  };
  static const void *ptrTable[] = { "equalsWith", "LNSObject;", "(Ljava/lang/Object;)Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Boolean;>;", "isInstanceOf", "LIOSClass;", "(Ljava/lang/Class<*>;)Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Boolean;>;", "createRepeatDematerializer", "LRxFunctionsFunc1;", "(Lrx/functions/Func1<-Lrx/Observable<+Ljava/lang/Void;>;+Lrx/Observable<*>;>;)Lrx/functions/Func1<Lrx/Observable<+Lrx/Notification<*>;>;Lrx/Observable<*>;>;", "createReplaySelectorAndObserveOn", "LRxFunctionsFunc1;LRxScheduler;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;Lrx/Scheduler;)Lrx/functions/Func1<Lrx/Observable<TT;>;Lrx/Observable<TR;>;>;", "createRetryDematerializer", "(Lrx/functions/Func1<-Lrx/Observable<+Ljava/lang/Throwable;>;+Lrx/Observable<*>;>;)Lrx/functions/Func1<Lrx/Observable<+Lrx/Notification<*>;>;Lrx/Observable<*>;>;", "createReplaySupplier", "LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;)Lrx/functions/Func0<Lrx/observables/ConnectableObservable<TT;>;>;", "LRxObservable;I", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;I)Lrx/functions/Func0<Lrx/observables/ConnectableObservable<TT;>;>;", "LRxObservable;JLJavaUtilConcurrentTimeUnit;LRxScheduler;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/functions/Func0<Lrx/observables/ConnectableObservable<TT;>;>;", "LRxObservable;IJLJavaUtilConcurrentTimeUnit;LRxScheduler;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;IJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/functions/Func0<Lrx/observables/ConnectableObservable<TT;>;>;", "createCollectorCaller", "LRxFunctionsAction2;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/functions/Action2<TR;-TT;>;)Lrx/functions/Func2<TR;TT;TR;>;", "valueOf", "LNSString;", &RxInternalUtilInternalObservableUtils_LONG_COUNTER, &RxInternalUtilInternalObservableUtils_OBJECT_EQUALS, &RxInternalUtilInternalObservableUtils_TO_ARRAY, &RxInternalUtilInternalObservableUtils_RETURNS_VOID, &RxInternalUtilInternalObservableUtils_COUNTER, &RxInternalUtilInternalObservableUtils_ERROR_EXTRACTOR, &RxInternalUtilInternalObservableUtils_ERROR_NOT_IMPLEMENTED, "Lrx/functions/Action1<Ljava/lang/Throwable;>;", &RxInternalUtilInternalObservableUtils_IS_EMPTY, "Lrx/Observable$Operator<Ljava/lang/Boolean;Ljava/lang/Object;>;", "LRxInternalUtilInternalObservableUtils_PlusOneFunc2;LRxInternalUtilInternalObservableUtils_PlusOneLongFunc2;LRxInternalUtilInternalObservableUtils_ObjectEqualsFunc2;LRxInternalUtilInternalObservableUtils_ToArrayFunc1;LRxInternalUtilInternalObservableUtils_EqualsWithFunc1;LRxInternalUtilInternalObservableUtils_IsInstanceOfFunc1;LRxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer;LRxInternalUtilInternalObservableUtils_ReturnsVoidFunc1;LRxInternalUtilInternalObservableUtils_SelectorAndObserveOn;LRxInternalUtilInternalObservableUtils_RetryNotificationDematerializer;LRxInternalUtilInternalObservableUtils_NotificationErrorExtractor;LRxInternalUtilInternalObservableUtils_ReplaySupplierNoParams;LRxInternalUtilInternalObservableUtils_ReplaySupplierBuffer;LRxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime;LRxInternalUtilInternalObservableUtils_ReplaySupplierTime;LRxInternalUtilInternalObservableUtils_CollectorCaller;LRxInternalUtilInternalObservableUtils_ErrorNotImplementedAction;", "Ljava/lang/Enum<Lrx/internal/util/InternalObservableUtils;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils = { "InternalObservableUtils", "rx.internal.util", ptrTable, methods, fields, 7, 0x4011, 12, 8, -1, 38, -1, 39, -1 };
  return &_RxInternalUtilInternalObservableUtils;
}

+ (void)initialize {
  if (self == [RxInternalUtilInternalObservableUtils class]) {
    JreStrongAssignAndConsume(&RxInternalUtilInternalObservableUtils_LONG_COUNTER, new_RxInternalUtilInternalObservableUtils_PlusOneLongFunc2_init());
    JreStrongAssignAndConsume(&RxInternalUtilInternalObservableUtils_OBJECT_EQUALS, new_RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2_init());
    JreStrongAssignAndConsume(&RxInternalUtilInternalObservableUtils_TO_ARRAY, new_RxInternalUtilInternalObservableUtils_ToArrayFunc1_init());
    JreStrongAssignAndConsume(&RxInternalUtilInternalObservableUtils_RETURNS_VOID, new_RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1_init());
    JreStrongAssignAndConsume(&RxInternalUtilInternalObservableUtils_COUNTER, new_RxInternalUtilInternalObservableUtils_PlusOneFunc2_init());
    JreStrongAssignAndConsume(&RxInternalUtilInternalObservableUtils_ERROR_EXTRACTOR, new_RxInternalUtilInternalObservableUtils_NotificationErrorExtractor_init());
    JreStrongAssignAndConsume(&RxInternalUtilInternalObservableUtils_ERROR_NOT_IMPLEMENTED, new_RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction_init());
    JreStrongAssignAndConsume(&RxInternalUtilInternalObservableUtils_IS_EMPTY, new_RxInternalOperatorsOperatorAny_initWithRxFunctionsFunc1_withBoolean_(RxInternalUtilUtilityFunctions_alwaysTrue(), true));
    J2OBJC_SET_INITIALIZED(RxInternalUtilInternalObservableUtils)
  }
}

@end

void RxInternalUtilInternalObservableUtils_initWithNSString_withInt_(RxInternalUtilInternalObservableUtils *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

id<RxFunctionsFunc1> RxInternalUtilInternalObservableUtils_equalsWithWithId_(id other) {
  RxInternalUtilInternalObservableUtils_initialize();
  return create_RxInternalUtilInternalObservableUtils_EqualsWithFunc1_initWithId_(other);
}

id<RxFunctionsFunc1> RxInternalUtilInternalObservableUtils_isInstanceOfWithIOSClass_(IOSClass *clazz) {
  RxInternalUtilInternalObservableUtils_initialize();
  return create_RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1_initWithIOSClass_(clazz);
}

id<RxFunctionsFunc1> RxInternalUtilInternalObservableUtils_createRepeatDematerializerWithRxFunctionsFunc1_(id<RxFunctionsFunc1> notificationHandler) {
  RxInternalUtilInternalObservableUtils_initialize();
  return create_RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer_initWithRxFunctionsFunc1_(notificationHandler);
}

id<RxFunctionsFunc1> RxInternalUtilInternalObservableUtils_createReplaySelectorAndObserveOnWithRxFunctionsFunc1_withRxScheduler_(id<RxFunctionsFunc1> selector, RxScheduler *scheduler) {
  RxInternalUtilInternalObservableUtils_initialize();
  return create_RxInternalUtilInternalObservableUtils_SelectorAndObserveOn_initWithRxFunctionsFunc1_withRxScheduler_(selector, scheduler);
}

id<RxFunctionsFunc1> RxInternalUtilInternalObservableUtils_createRetryDematerializerWithRxFunctionsFunc1_(id<RxFunctionsFunc1> notificationHandler) {
  RxInternalUtilInternalObservableUtils_initialize();
  return create_RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer_initWithRxFunctionsFunc1_(notificationHandler);
}

id<RxFunctionsFunc0> RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_(RxObservable *source) {
  RxInternalUtilInternalObservableUtils_initialize();
  return create_RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams_initWithRxObservable_(source);
}

id<RxFunctionsFunc0> RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_withInt_(RxObservable *source, jint bufferSize) {
  RxInternalUtilInternalObservableUtils_initialize();
  return create_RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer_initWithRxObservable_withInt_(source, bufferSize);
}

id<RxFunctionsFunc0> RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  RxInternalUtilInternalObservableUtils_initialize();
  return create_RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(source, time, unit, scheduler);
}

id<RxFunctionsFunc0> RxInternalUtilInternalObservableUtils_createReplaySupplierWithRxObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  RxInternalUtilInternalObservableUtils_initialize();
  return create_RxInternalUtilInternalObservableUtils_ReplaySupplierTime_initWithRxObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(source, bufferSize, time, unit, scheduler);
}

id<RxFunctionsFunc2> RxInternalUtilInternalObservableUtils_createCollectorCallerWithRxFunctionsAction2_(id<RxFunctionsAction2> collector) {
  RxInternalUtilInternalObservableUtils_initialize();
  return create_RxInternalUtilInternalObservableUtils_CollectorCaller_initWithRxFunctionsAction2_(collector);
}

IOSObjectArray *RxInternalUtilInternalObservableUtils_values() {
  RxInternalUtilInternalObservableUtils_initialize();
  return [IOSObjectArray arrayWithObjects:RxInternalUtilInternalObservableUtils_values_ count:0 type:RxInternalUtilInternalObservableUtils_class_()];
}

RxInternalUtilInternalObservableUtils *RxInternalUtilInternalObservableUtils_valueOfWithNSString_(NSString *name) {
  RxInternalUtilInternalObservableUtils_initialize();
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

RxInternalUtilInternalObservableUtils *RxInternalUtilInternalObservableUtils_fromOrdinal(NSUInteger ordinal) {
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils)

@implementation RxInternalUtilInternalObservableUtils_PlusOneFunc2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilInternalObservableUtils_PlusOneFunc2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangInteger *)callWithId:(JavaLangInteger *)count
                         withId:(id)o {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(count)) intValue] + 1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LNSObject;", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Object;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_PlusOneFunc2 = { "PlusOneFunc2", "rx.internal.util", ptrTable, methods, NULL, 7, 0x18, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalUtilInternalObservableUtils_PlusOneFunc2;
}

@end

void RxInternalUtilInternalObservableUtils_PlusOneFunc2_init(RxInternalUtilInternalObservableUtils_PlusOneFunc2 *self) {
  NSObject_init(self);
}

RxInternalUtilInternalObservableUtils_PlusOneFunc2 *new_RxInternalUtilInternalObservableUtils_PlusOneFunc2_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_PlusOneFunc2, init)
}

RxInternalUtilInternalObservableUtils_PlusOneFunc2 *create_RxInternalUtilInternalObservableUtils_PlusOneFunc2_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_PlusOneFunc2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_PlusOneFunc2)

@implementation RxInternalUtilInternalObservableUtils_PlusOneLongFunc2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilInternalObservableUtils_PlusOneLongFunc2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangLong *)callWithId:(JavaLangLong *)count
                      withId:(id)o {
  return JavaLangLong_valueOfWithLong_([((JavaLangLong *) nil_chk(count)) longLongValue] + 1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangLong;LNSObject;", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Long;Ljava/lang/Object;Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_PlusOneLongFunc2 = { "PlusOneLongFunc2", "rx.internal.util", ptrTable, methods, NULL, 7, 0x18, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalUtilInternalObservableUtils_PlusOneLongFunc2;
}

@end

void RxInternalUtilInternalObservableUtils_PlusOneLongFunc2_init(RxInternalUtilInternalObservableUtils_PlusOneLongFunc2 *self) {
  NSObject_init(self);
}

RxInternalUtilInternalObservableUtils_PlusOneLongFunc2 *new_RxInternalUtilInternalObservableUtils_PlusOneLongFunc2_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_PlusOneLongFunc2, init)
}

RxInternalUtilInternalObservableUtils_PlusOneLongFunc2 *create_RxInternalUtilInternalObservableUtils_PlusOneLongFunc2_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_PlusOneLongFunc2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_PlusOneLongFunc2)

@implementation RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangBoolean *)callWithId:(id)first
                         withId:(id)second {
  return JavaLangBoolean_valueOfWithBoolean_(first == second || (first != nil && [first isEqual:second]));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;LNSObject;", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2 = { "ObjectEqualsFunc2", "rx.internal.util", ptrTable, methods, NULL, 7, 0x18, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2;
}

@end

void RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2_init(RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2 *self) {
  NSObject_init(self);
}

RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2 *new_RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2, init)
}

RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2 *create_RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_ObjectEqualsFunc2)

@implementation RxInternalUtilInternalObservableUtils_ToArrayFunc1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilInternalObservableUtils_ToArrayFunc1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSObjectArray *)callWithId:(id<JavaUtilList>)o {
  return [((id<JavaUtilList>) nil_chk(o)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[o size] type:RxObservable_class_()]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaUtilList;", "(Ljava/util/List<+Lrx/Observable<*>;>;)[Lrx/Observable<*>;", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/util/List<+Lrx/Observable<*>;>;[Lrx/Observable<*>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_ToArrayFunc1 = { "ToArrayFunc1", "rx.internal.util", ptrTable, methods, NULL, 7, 0x18, 2, 0, 3, -1, -1, 4, -1 };
  return &_RxInternalUtilInternalObservableUtils_ToArrayFunc1;
}

@end

void RxInternalUtilInternalObservableUtils_ToArrayFunc1_init(RxInternalUtilInternalObservableUtils_ToArrayFunc1 *self) {
  NSObject_init(self);
}

RxInternalUtilInternalObservableUtils_ToArrayFunc1 *new_RxInternalUtilInternalObservableUtils_ToArrayFunc1_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_ToArrayFunc1, init)
}

RxInternalUtilInternalObservableUtils_ToArrayFunc1 *create_RxInternalUtilInternalObservableUtils_ToArrayFunc1_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_ToArrayFunc1, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_ToArrayFunc1)

@implementation RxInternalUtilInternalObservableUtils_EqualsWithFunc1

- (instancetype)initWithId:(id)other {
  RxInternalUtilInternalObservableUtils_EqualsWithFunc1_initWithId_(self, other);
  return self;
}

- (JavaLangBoolean *)callWithId:(id)t {
  return JavaLangBoolean_valueOfWithBoolean_(t == other_ || (t != nil && [t isEqual:other_]));
}

- (void)dealloc {
  RELEASE_(other_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "other_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "call", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_EqualsWithFunc1 = { "EqualsWithFunc1", "rx.internal.util", ptrTable, methods, fields, 7, 0x18, 2, 1, 2, -1, -1, 3, -1 };
  return &_RxInternalUtilInternalObservableUtils_EqualsWithFunc1;
}

@end

void RxInternalUtilInternalObservableUtils_EqualsWithFunc1_initWithId_(RxInternalUtilInternalObservableUtils_EqualsWithFunc1 *self, id other) {
  NSObject_init(self);
  JreStrongAssign(&self->other_, other);
}

RxInternalUtilInternalObservableUtils_EqualsWithFunc1 *new_RxInternalUtilInternalObservableUtils_EqualsWithFunc1_initWithId_(id other) {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_EqualsWithFunc1, initWithId_, other)
}

RxInternalUtilInternalObservableUtils_EqualsWithFunc1 *create_RxInternalUtilInternalObservableUtils_EqualsWithFunc1_initWithId_(id other) {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_EqualsWithFunc1, initWithId_, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_EqualsWithFunc1)

@implementation RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1

- (instancetype)initWithIOSClass:(IOSClass *)other {
  RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1_initWithIOSClass_(self, other);
  return self;
}

- (JavaLangBoolean *)callWithId:(id)t {
  return JavaLangBoolean_valueOfWithBoolean_([((IOSClass *) nil_chk(clazz_)) isInstance:t]);
}

- (void)dealloc {
  RELEASE_(clazz_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "clazz_", "LIOSClass;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "call", "LNSObject;", "Ljava/lang/Class<*>;", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1 = { "IsInstanceOfFunc1", "rx.internal.util", ptrTable, methods, fields, 7, 0x18, 2, 1, 5, -1, -1, 6, -1 };
  return &_RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1;
}

@end

void RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1_initWithIOSClass_(RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1 *self, IOSClass *other) {
  NSObject_init(self);
  JreStrongAssign(&self->clazz_, other);
}

RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1 *new_RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1_initWithIOSClass_(IOSClass *other) {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1, initWithIOSClass_, other)
}

RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1 *create_RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1_initWithIOSClass_(IOSClass *other) {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1, initWithIOSClass_, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_IsInstanceOfFunc1)

@implementation RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler {
  RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer_initWithRxFunctionsFunc1_(self, notificationHandler);
  return self;
}

- (RxObservable *)callWithId:(RxObservable *)notifications {
  return [((id<RxFunctionsFunc1>) nil_chk(notificationHandler_)) callWithId:[((RxObservable *) nil_chk(notifications)) mapWithRxFunctionsFunc1:JreLoadStatic(RxInternalUtilInternalObservableUtils, RETURNS_VOID)]];
}

- (void)dealloc {
  RELEASE_(notificationHandler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxObservable;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc1:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "notificationHandler_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsFunc1;", "(Lrx/functions/Func1<-Lrx/Observable<+Ljava/lang/Void;>;+Lrx/Observable<*>;>;)V", "call", "LRxObservable;", "(Lrx/Observable<+Lrx/Notification<*>;>;)Lrx/Observable<*>;", "Lrx/functions/Func1<-Lrx/Observable<+Ljava/lang/Void;>;+Lrx/Observable<*>;>;", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable<+Lrx/Notification<*>;>;Lrx/Observable<*>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer = { "RepeatNotificationDematerializer", "rx.internal.util", ptrTable, methods, fields, 7, 0x18, 2, 1, 6, -1, -1, 7, -1 };
  return &_RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer;
}

@end

void RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer_initWithRxFunctionsFunc1_(RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer *self, id<RxFunctionsFunc1> notificationHandler) {
  NSObject_init(self);
  JreStrongAssign(&self->notificationHandler_, notificationHandler);
}

RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer *new_RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> notificationHandler) {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer, initWithRxFunctionsFunc1_, notificationHandler)
}

RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer *create_RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> notificationHandler) {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer, initWithRxFunctionsFunc1_, notificationHandler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_RepeatNotificationDematerializer)

@implementation RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangVoid *)callWithId:(id)t {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangVoid;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Void;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1 = { "ReturnsVoidFunc1", "rx.internal.util", ptrTable, methods, NULL, 7, 0x18, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1;
}

@end

void RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1_init(RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1 *self) {
  NSObject_init(self);
}

RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1 *new_RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1, init)
}

RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1 *create_RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_ReturnsVoidFunc1)

@implementation RxInternalUtilInternalObservableUtils_SelectorAndObserveOn

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)selector
                         withRxScheduler:(RxScheduler *)scheduler {
  RxInternalUtilInternalObservableUtils_SelectorAndObserveOn_initWithRxFunctionsFunc1_withRxScheduler_(self, selector, scheduler);
  return self;
}

- (RxObservable *)callWithId:(RxObservable *)t {
  return [((RxObservable *) nil_chk([((id<RxFunctionsFunc1>) nil_chk(selector_)) callWithId:t])) observeOnWithRxScheduler:scheduler_];
}

- (void)dealloc {
  RELEASE_(selector_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxObservable;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc1:withRxScheduler:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "selector_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsFunc1;LRxScheduler;", "(Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;Lrx/Scheduler;)V", "call", "LRxObservable;", "(Lrx/Observable<TT;>;)Lrx/Observable<TR;>;", "Lrx/functions/Func1<-Lrx/Observable<TT;>;+Lrx/Observable<TR;>;>;", "LRxInternalUtilInternalObservableUtils;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable<TT;>;Lrx/Observable<TR;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_SelectorAndObserveOn = { "SelectorAndObserveOn", "rx.internal.util", ptrTable, methods, fields, 7, 0x18, 2, 2, 6, -1, -1, 7, -1 };
  return &_RxInternalUtilInternalObservableUtils_SelectorAndObserveOn;
}

@end

void RxInternalUtilInternalObservableUtils_SelectorAndObserveOn_initWithRxFunctionsFunc1_withRxScheduler_(RxInternalUtilInternalObservableUtils_SelectorAndObserveOn *self, id<RxFunctionsFunc1> selector, RxScheduler *scheduler) {
  NSObject_init(self);
  JreStrongAssign(&self->selector_, selector);
  JreStrongAssign(&self->scheduler_, scheduler);
}

RxInternalUtilInternalObservableUtils_SelectorAndObserveOn *new_RxInternalUtilInternalObservableUtils_SelectorAndObserveOn_initWithRxFunctionsFunc1_withRxScheduler_(id<RxFunctionsFunc1> selector, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_SelectorAndObserveOn, initWithRxFunctionsFunc1_withRxScheduler_, selector, scheduler)
}

RxInternalUtilInternalObservableUtils_SelectorAndObserveOn *create_RxInternalUtilInternalObservableUtils_SelectorAndObserveOn_initWithRxFunctionsFunc1_withRxScheduler_(id<RxFunctionsFunc1> selector, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_SelectorAndObserveOn, initWithRxFunctionsFunc1_withRxScheduler_, selector, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_SelectorAndObserveOn)

@implementation RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler {
  RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer_initWithRxFunctionsFunc1_(self, notificationHandler);
  return self;
}

- (RxObservable *)callWithId:(RxObservable *)notifications {
  return [((id<RxFunctionsFunc1>) nil_chk(notificationHandler_)) callWithId:[((RxObservable *) nil_chk(notifications)) mapWithRxFunctionsFunc1:JreLoadStatic(RxInternalUtilInternalObservableUtils, ERROR_EXTRACTOR)]];
}

- (void)dealloc {
  RELEASE_(notificationHandler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxObservable;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc1:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "notificationHandler_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsFunc1;", "(Lrx/functions/Func1<-Lrx/Observable<+Ljava/lang/Throwable;>;+Lrx/Observable<*>;>;)V", "call", "LRxObservable;", "(Lrx/Observable<+Lrx/Notification<*>;>;)Lrx/Observable<*>;", "Lrx/functions/Func1<-Lrx/Observable<+Ljava/lang/Throwable;>;+Lrx/Observable<*>;>;", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable<+Lrx/Notification<*>;>;Lrx/Observable<*>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer = { "RetryNotificationDematerializer", "rx.internal.util", ptrTable, methods, fields, 7, 0x18, 2, 1, 6, -1, -1, 7, -1 };
  return &_RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer;
}

@end

void RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer_initWithRxFunctionsFunc1_(RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer *self, id<RxFunctionsFunc1> notificationHandler) {
  NSObject_init(self);
  JreStrongAssign(&self->notificationHandler_, notificationHandler);
}

RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer *new_RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> notificationHandler) {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer, initWithRxFunctionsFunc1_, notificationHandler)
}

RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer *create_RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> notificationHandler) {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer, initWithRxFunctionsFunc1_, notificationHandler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_RetryNotificationDematerializer)

@implementation RxInternalUtilInternalObservableUtils_NotificationErrorExtractor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilInternalObservableUtils_NotificationErrorExtractor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSException *)callWithId:(RxNotification *)t {
  return [((RxNotification *) nil_chk(t)) getThrowable];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSException;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxNotification;", "(Lrx/Notification<*>;)Ljava/lang/Throwable;", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Notification<*>;Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_NotificationErrorExtractor = { "NotificationErrorExtractor", "rx.internal.util", ptrTable, methods, NULL, 7, 0x18, 2, 0, 3, -1, -1, 4, -1 };
  return &_RxInternalUtilInternalObservableUtils_NotificationErrorExtractor;
}

@end

void RxInternalUtilInternalObservableUtils_NotificationErrorExtractor_init(RxInternalUtilInternalObservableUtils_NotificationErrorExtractor *self) {
  NSObject_init(self);
}

RxInternalUtilInternalObservableUtils_NotificationErrorExtractor *new_RxInternalUtilInternalObservableUtils_NotificationErrorExtractor_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_NotificationErrorExtractor, init)
}

RxInternalUtilInternalObservableUtils_NotificationErrorExtractor *create_RxInternalUtilInternalObservableUtils_NotificationErrorExtractor_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_NotificationErrorExtractor, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_NotificationErrorExtractor)

@implementation RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams

- (instancetype)initWithRxObservable:(RxObservable *)source {
  RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams_initWithRxObservable_(self, source);
  return self;
}

- (RxObservablesConnectableObservable *)call {
  return [((RxObservable *) nil_chk(source_)) replay];
}

- (void)dealloc {
  RELEASE_(source_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservable:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxObservable;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;", "(Lrx/Observable<TT;>;)V", "()Lrx/observables/ConnectableObservable<TT;>;", "Lrx/Observable<TT;>;", "LRxInternalUtilInternalObservableUtils;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func0<Lrx/observables/ConnectableObservable<TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams = { "ReplaySupplierNoParams", "rx.internal.util", ptrTable, methods, fields, 7, 0x18, 2, 1, 4, -1, -1, 5, -1 };
  return &_RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams;
}

@end

void RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams_initWithRxObservable_(RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams *self, RxObservable *source) {
  NSObject_init(self);
  JreStrongAssign(&self->source_, source);
}

RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams *new_RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams_initWithRxObservable_(RxObservable *source) {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams, initWithRxObservable_, source)
}

RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams *create_RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams_initWithRxObservable_(RxObservable *source) {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams, initWithRxObservable_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_ReplaySupplierNoParams)

@implementation RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer

- (instancetype)initWithRxObservable:(RxObservable *)source
                             withInt:(jint)bufferSize {
  RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer_initWithRxObservable_withInt_(self, source, bufferSize);
  return self;
}

- (RxObservablesConnectableObservable *)call {
  return [((RxObservable *) nil_chk(source_)) replayWithInt:bufferSize_];
}

- (void)dealloc {
  RELEASE_(source_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservable:withInt:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxObservable;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
    { "bufferSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;I", "(Lrx/Observable<TT;>;I)V", "()Lrx/observables/ConnectableObservable<TT;>;", "Lrx/Observable<TT;>;", "LRxInternalUtilInternalObservableUtils;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func0<Lrx/observables/ConnectableObservable<TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer = { "ReplaySupplierBuffer", "rx.internal.util", ptrTable, methods, fields, 7, 0x18, 2, 2, 4, -1, -1, 5, -1 };
  return &_RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer;
}

@end

void RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer_initWithRxObservable_withInt_(RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer *self, RxObservable *source, jint bufferSize) {
  NSObject_init(self);
  JreStrongAssign(&self->source_, source);
  self->bufferSize_ = bufferSize;
}

RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer *new_RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer_initWithRxObservable_withInt_(RxObservable *source, jint bufferSize) {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer, initWithRxObservable_withInt_, source, bufferSize)
}

RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer *create_RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer_initWithRxObservable_withInt_(RxObservable *source, jint bufferSize) {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer, initWithRxObservable_withInt_, source, bufferSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_ReplaySupplierBuffer)

@implementation RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime

- (instancetype)initWithRxObservable:(RxObservable *)source
                            withLong:(jlong)time
      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                     withRxScheduler:(RxScheduler *)scheduler {
  RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, source, time, unit, scheduler);
  return self;
}

- (RxObservablesConnectableObservable *)call {
  return [((RxObservable *) nil_chk(source_)) replayWithLong:time_ withJavaUtilConcurrentTimeUnit:unit_ withRxScheduler:scheduler_];
}

- (void)dealloc {
  RELEASE_(unit_);
  RELEASE_(source_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservable:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "source_", "LRxObservable;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
    { "time_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;JLJavaUtilConcurrentTimeUnit;LRxScheduler;", "(Lrx/Observable<TT;>;JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)V", "()Lrx/observables/ConnectableObservable<TT;>;", "Lrx/Observable<TT;>;", "LRxInternalUtilInternalObservableUtils;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func0<Lrx/observables/ConnectableObservable<TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime = { "ReplaySupplierBufferTime", "rx.internal.util", ptrTable, methods, fields, 7, 0x18, 2, 4, 4, -1, -1, 5, -1 };
  return &_RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime;
}

@end

void RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime *self, RxObservable *source, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  NSObject_init(self);
  JreStrongAssign(&self->unit_, unit);
  JreStrongAssign(&self->source_, source);
  self->time_ = time;
  JreStrongAssign(&self->scheduler_, scheduler);
}

RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime *new_RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime, initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_, source, time, unit, scheduler)
}

RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime *create_RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime, initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_, source, time, unit, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_ReplaySupplierBufferTime)

@implementation RxInternalUtilInternalObservableUtils_ReplaySupplierTime

- (instancetype)initWithRxObservable:(RxObservable *)source
                             withInt:(jint)bufferSize
                            withLong:(jlong)time
      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                     withRxScheduler:(RxScheduler *)scheduler {
  RxInternalUtilInternalObservableUtils_ReplaySupplierTime_initWithRxObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, source, bufferSize, time, unit, scheduler);
  return self;
}

- (RxObservablesConnectableObservable *)call {
  return [((RxObservable *) nil_chk(source_)) replayWithInt:bufferSize_ withLong:time_ withJavaUtilConcurrentTimeUnit:unit_ withRxScheduler:scheduler_];
}

- (void)dealloc {
  RELEASE_(unit_);
  RELEASE_(scheduler_);
  RELEASE_(source_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxObservablesConnectableObservable;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservable:withInt:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "time_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bufferSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "source_", "LRxObservable;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;IJLJavaUtilConcurrentTimeUnit;LRxScheduler;", "(Lrx/Observable<TT;>;IJLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)V", "()Lrx/observables/ConnectableObservable<TT;>;", "Lrx/Observable<TT;>;", "LRxInternalUtilInternalObservableUtils;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func0<Lrx/observables/ConnectableObservable<TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_ReplaySupplierTime = { "ReplaySupplierTime", "rx.internal.util", ptrTable, methods, fields, 7, 0x18, 2, 5, 4, -1, -1, 5, -1 };
  return &_RxInternalUtilInternalObservableUtils_ReplaySupplierTime;
}

@end

void RxInternalUtilInternalObservableUtils_ReplaySupplierTime_initWithRxObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxInternalUtilInternalObservableUtils_ReplaySupplierTime *self, RxObservable *source, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  NSObject_init(self);
  self->time_ = time;
  JreStrongAssign(&self->unit_, unit);
  JreStrongAssign(&self->scheduler_, scheduler);
  self->bufferSize_ = bufferSize;
  JreStrongAssign(&self->source_, source);
}

RxInternalUtilInternalObservableUtils_ReplaySupplierTime *new_RxInternalUtilInternalObservableUtils_ReplaySupplierTime_initWithRxObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_ReplaySupplierTime, initWithRxObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_, source, bufferSize, time, unit, scheduler)
}

RxInternalUtilInternalObservableUtils_ReplaySupplierTime *create_RxInternalUtilInternalObservableUtils_ReplaySupplierTime_initWithRxObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_ReplaySupplierTime, initWithRxObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_, source, bufferSize, time, unit, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_ReplaySupplierTime)

@implementation RxInternalUtilInternalObservableUtils_CollectorCaller

- (instancetype)initWithRxFunctionsAction2:(id<RxFunctionsAction2>)collector {
  RxInternalUtilInternalObservableUtils_CollectorCaller_initWithRxFunctionsAction2_(self, collector);
  return self;
}

- (id)callWithId:(id)state
          withId:(id)value {
  [((id<RxFunctionsAction2>) nil_chk(collector_)) callWithId:state withId:value];
  return state;
}

- (void)dealloc {
  RELEASE_(collector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsAction2:);
  methods[1].selector = @selector(callWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "collector_", "LRxFunctionsAction2;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsAction2;", "(Lrx/functions/Action2<TR;-TT;>;)V", "call", "LNSObject;LNSObject;", "(TR;TT;)TR;", "Lrx/functions/Action2<TR;-TT;>;", "LRxInternalUtilInternalObservableUtils;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func2<TR;TT;TR;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_CollectorCaller = { "CollectorCaller", "rx.internal.util", ptrTable, methods, fields, 7, 0x18, 2, 1, 6, -1, -1, 7, -1 };
  return &_RxInternalUtilInternalObservableUtils_CollectorCaller;
}

@end

void RxInternalUtilInternalObservableUtils_CollectorCaller_initWithRxFunctionsAction2_(RxInternalUtilInternalObservableUtils_CollectorCaller *self, id<RxFunctionsAction2> collector) {
  NSObject_init(self);
  JreStrongAssign(&self->collector_, collector);
}

RxInternalUtilInternalObservableUtils_CollectorCaller *new_RxInternalUtilInternalObservableUtils_CollectorCaller_initWithRxFunctionsAction2_(id<RxFunctionsAction2> collector) {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_CollectorCaller, initWithRxFunctionsAction2_, collector)
}

RxInternalUtilInternalObservableUtils_CollectorCaller *create_RxInternalUtilInternalObservableUtils_CollectorCaller_initWithRxFunctionsAction2_(id<RxFunctionsAction2> collector) {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_CollectorCaller, initWithRxFunctionsAction2_, collector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_CollectorCaller)

@implementation RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)callWithId:(NSException *)t {
  @throw create_RxExceptionsOnErrorNotImplementedException_initWithNSException_(t);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "LRxInternalUtilInternalObservableUtils;", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction = { "ErrorNotImplementedAction", "rx.internal.util", ptrTable, methods, NULL, 7, 0x18, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction;
}

@end

void RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction_init(RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction *self) {
  NSObject_init(self);
}

RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction *new_RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction, init)
}

RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction *create_RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilInternalObservableUtils_ErrorNotImplementedAction)
