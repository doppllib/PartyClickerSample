//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComKgalliganPartyclickerDataDataProvider.h"
#include "ComKgalliganPartyclickerDataModPersonTask.h"
#include "ComKgalliganPartyclickerDataParty.h"
#include "ComKgalliganPartyclickerDataPartyPresenter.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/ExecutorService.h"
#include "java/util/concurrent/Executors.h"
#include "javax/inject/Inject.h"

@interface ComKgalliganPartyclickerDataPartyPresenter () {
 @public
  jint partyId_;
  ComKgalliganPartyclickerDataParty *party_;
  jint partyCount_;
  id<JavaUtilConcurrentExecutorService> executorService_;
}

@end

J2OBJC_FIELD_SETTER(ComKgalliganPartyclickerDataPartyPresenter, party_, ComKgalliganPartyclickerDataParty *)
J2OBJC_FIELD_SETTER(ComKgalliganPartyclickerDataPartyPresenter, executorService_, id<JavaUtilConcurrentExecutorService>)

__attribute__((unused)) static IOSObjectArray *ComKgalliganPartyclickerDataPartyPresenter__Annotations$0();

@implementation ComKgalliganPartyclickerDataPartyPresenter

- (instancetype)initWithInt:(jint)partyId {
  ComKgalliganPartyclickerDataPartyPresenter_initWithInt_(self, partyId);
  return self;
}

- (void)init__ {
  JreStrongAssign(&party_, [((id<ComKgalliganPartyclickerDataDataProvider>) nil_chk(databaseHelper_)) loadPartyWithInt:partyId_]);
  partyCount_ = [((id<ComKgalliganPartyclickerDataDataProvider>) nil_chk(databaseHelper_)) countCurrentPartyWithInt:partyId_];
}

- (void)addPerson {
  partyCount_++;
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(executorService_)) executeWithJavaLangRunnable:create_ComKgalliganPartyclickerDataModPersonTask_initWithComKgalliganPartyclickerDataParty_withBoolean_withComKgalliganPartyclickerDataDataProvider_(party_, true, databaseHelper_)];
}

- (void)removePerson {
  if (partyCount_ > 0) {
    partyCount_--;
    [((id<JavaUtilConcurrentExecutorService>) nil_chk(executorService_)) executeWithJavaLangRunnable:create_ComKgalliganPartyclickerDataModPersonTask_initWithComKgalliganPartyclickerDataParty_withBoolean_withComKgalliganPartyclickerDataDataProvider_(party_, false, databaseHelper_)];
  }
}

- (jint)getPartyCount {
  return partyCount_;
}

- (ComKgalliganPartyclickerDataParty *)getParty {
  return party_;
}

- (void)dealloc {
  RELEASE_(party_);
  RELEASE_(executorService_);
  RELEASE_(databaseHelper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComKgalliganPartyclickerDataParty;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(init__);
  methods[2].selector = @selector(addPerson);
  methods[3].selector = @selector(removePerson);
  methods[4].selector = @selector(getPartyCount);
  methods[5].selector = @selector(getParty);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "partyId_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "party_", "LComKgalliganPartyclickerDataParty;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "partyCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "executorService_", "LJavaUtilConcurrentExecutorService;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "databaseHelper_", "LComKgalliganPartyclickerDataDataProvider;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
  };
  static const void *ptrTable[] = { "I", "init", (void *)&ComKgalliganPartyclickerDataPartyPresenter__Annotations$0 };
  static const J2ObjcClassInfo _ComKgalliganPartyclickerDataPartyPresenter = { "PartyPresenter", "com.kgalligan.partyclicker.data", ptrTable, methods, fields, 7, 0x1, 6, 5, -1, -1, -1, -1, -1 };
  return &_ComKgalliganPartyclickerDataPartyPresenter;
}

@end

void ComKgalliganPartyclickerDataPartyPresenter_initWithInt_(ComKgalliganPartyclickerDataPartyPresenter *self, jint partyId) {
  NSObject_init(self);
  JreStrongAssign(&self->executorService_, JavaUtilConcurrentExecutors_newSingleThreadExecutor());
  self->partyId_ = partyId;
}

ComKgalliganPartyclickerDataPartyPresenter *new_ComKgalliganPartyclickerDataPartyPresenter_initWithInt_(jint partyId) {
  J2OBJC_NEW_IMPL(ComKgalliganPartyclickerDataPartyPresenter, initWithInt_, partyId)
}

ComKgalliganPartyclickerDataPartyPresenter *create_ComKgalliganPartyclickerDataPartyPresenter_initWithInt_(jint partyId) {
  J2OBJC_CREATE_IMPL(ComKgalliganPartyclickerDataPartyPresenter, initWithInt_, partyId)
}

IOSObjectArray *ComKgalliganPartyclickerDataPartyPresenter__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxInjectInject() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComKgalliganPartyclickerDataPartyPresenter)
