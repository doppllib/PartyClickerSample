//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxExceptionsCompositeException")
#ifdef RESTRICT_RxExceptionsCompositeException
#define INCLUDE_ALL_RxExceptionsCompositeException 0
#else
#define INCLUDE_ALL_RxExceptionsCompositeException 1
#endif
#undef RESTRICT_RxExceptionsCompositeException
#ifdef INCLUDE_RxExceptionsCompositeException_WrappedPrintWriter
#define INCLUDE_RxExceptionsCompositeException_PrintStreamOrWriter 1
#endif
#ifdef INCLUDE_RxExceptionsCompositeException_WrappedPrintStream
#define INCLUDE_RxExceptionsCompositeException_PrintStreamOrWriter 1
#endif

#if !defined (RxExceptionsCompositeException_) && (INCLUDE_ALL_RxExceptionsCompositeException || defined(INCLUDE_RxExceptionsCompositeException))
#define RxExceptionsCompositeException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class IOSObjectArray;
@class JavaIoPrintStream;
@class JavaIoPrintWriter;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface RxExceptionsCompositeException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)errors;

- (instancetype)initWithNSString:(NSString *)messagePrefix
          withJavaUtilCollection:(id<JavaUtilCollection>)errors;

- (instancetype)initWithNSExceptionArray:(IOSObjectArray *)errors;

- (NSException *)getCause;

- (id<JavaUtilList>)getExceptions;

- (NSString *)getMessage;

- (void)printStackTrace;

- (void)printStackTraceWithJavaIoPrintStream:(JavaIoPrintStream *)s;

- (void)printStackTraceWithJavaIoPrintWriter:(JavaIoPrintWriter *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsCompositeException)

FOUNDATION_EXPORT void RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(RxExceptionsCompositeException *self, NSString *messagePrefix, id<JavaUtilCollection> errors);

FOUNDATION_EXPORT RxExceptionsCompositeException *new_RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(NSString *messagePrefix, id<JavaUtilCollection> errors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsCompositeException *create_RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(NSString *messagePrefix, id<JavaUtilCollection> errors);

FOUNDATION_EXPORT void RxExceptionsCompositeException_initWithJavaUtilCollection_(RxExceptionsCompositeException *self, id<JavaUtilCollection> errors);

FOUNDATION_EXPORT RxExceptionsCompositeException *new_RxExceptionsCompositeException_initWithJavaUtilCollection_(id<JavaUtilCollection> errors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsCompositeException *create_RxExceptionsCompositeException_initWithJavaUtilCollection_(id<JavaUtilCollection> errors);

FOUNDATION_EXPORT void RxExceptionsCompositeException_initWithNSExceptionArray_(RxExceptionsCompositeException *self, IOSObjectArray *errors);

FOUNDATION_EXPORT RxExceptionsCompositeException *new_RxExceptionsCompositeException_initWithNSExceptionArray_(IOSObjectArray *errors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsCompositeException *create_RxExceptionsCompositeException_initWithNSExceptionArray_(IOSObjectArray *errors);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsCompositeException)

#endif

#if !defined (RxExceptionsCompositeException_PrintStreamOrWriter_) && (INCLUDE_ALL_RxExceptionsCompositeException || defined(INCLUDE_RxExceptionsCompositeException_PrintStreamOrWriter))
#define RxExceptionsCompositeException_PrintStreamOrWriter_

@interface RxExceptionsCompositeException_PrintStreamOrWriter : NSObject

#pragma mark Package-Private

- (instancetype)init;

- (id)lock;

- (void)printlnWithId:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsCompositeException_PrintStreamOrWriter)

FOUNDATION_EXPORT void RxExceptionsCompositeException_PrintStreamOrWriter_init(RxExceptionsCompositeException_PrintStreamOrWriter *self);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsCompositeException_PrintStreamOrWriter)

#endif

#if !defined (RxExceptionsCompositeException_WrappedPrintStream_) && (INCLUDE_ALL_RxExceptionsCompositeException || defined(INCLUDE_RxExceptionsCompositeException_WrappedPrintStream))
#define RxExceptionsCompositeException_WrappedPrintStream_

@class JavaIoPrintStream;

@interface RxExceptionsCompositeException_WrappedPrintStream : RxExceptionsCompositeException_PrintStreamOrWriter

#pragma mark Package-Private

- (instancetype)initWithJavaIoPrintStream:(JavaIoPrintStream *)printStream;

- (id)lock;

- (void)printlnWithId:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsCompositeException_WrappedPrintStream)

FOUNDATION_EXPORT void RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(RxExceptionsCompositeException_WrappedPrintStream *self, JavaIoPrintStream *printStream);

FOUNDATION_EXPORT RxExceptionsCompositeException_WrappedPrintStream *new_RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(JavaIoPrintStream *printStream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsCompositeException_WrappedPrintStream *create_RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(JavaIoPrintStream *printStream);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsCompositeException_WrappedPrintStream)

#endif

#if !defined (RxExceptionsCompositeException_WrappedPrintWriter_) && (INCLUDE_ALL_RxExceptionsCompositeException || defined(INCLUDE_RxExceptionsCompositeException_WrappedPrintWriter))
#define RxExceptionsCompositeException_WrappedPrintWriter_

@class JavaIoPrintWriter;

@interface RxExceptionsCompositeException_WrappedPrintWriter : RxExceptionsCompositeException_PrintStreamOrWriter

#pragma mark Package-Private

- (instancetype)initWithJavaIoPrintWriter:(JavaIoPrintWriter *)printWriter;

- (id)lock;

- (void)printlnWithId:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsCompositeException_WrappedPrintWriter)

FOUNDATION_EXPORT void RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(RxExceptionsCompositeException_WrappedPrintWriter *self, JavaIoPrintWriter *printWriter);

FOUNDATION_EXPORT RxExceptionsCompositeException_WrappedPrintWriter *new_RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(JavaIoPrintWriter *printWriter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsCompositeException_WrappedPrintWriter *create_RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(JavaIoPrintWriter *printWriter);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsCompositeException_WrappedPrintWriter)

#endif

#if !defined (RxExceptionsCompositeException_CompositeExceptionCausalChain_) && (INCLUDE_ALL_RxExceptionsCompositeException || defined(INCLUDE_RxExceptionsCompositeException_CompositeExceptionCausalChain))
#define RxExceptionsCompositeException_CompositeExceptionCausalChain_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@interface RxExceptionsCompositeException_CompositeExceptionCausalChain : JavaLangRuntimeException

#pragma mark Public

- (NSString *)getMessage;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsCompositeException_CompositeExceptionCausalChain)

inline NSString *RxExceptionsCompositeException_CompositeExceptionCausalChain_get_MESSAGE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *RxExceptionsCompositeException_CompositeExceptionCausalChain_MESSAGE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxExceptionsCompositeException_CompositeExceptionCausalChain, MESSAGE, NSString *)

FOUNDATION_EXPORT void RxExceptionsCompositeException_CompositeExceptionCausalChain_init(RxExceptionsCompositeException_CompositeExceptionCausalChain *self);

FOUNDATION_EXPORT RxExceptionsCompositeException_CompositeExceptionCausalChain *new_RxExceptionsCompositeException_CompositeExceptionCausalChain_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxExceptionsCompositeException_CompositeExceptionCausalChain *create_RxExceptionsCompositeException_CompositeExceptionCausalChain_init();

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsCompositeException_CompositeExceptionCausalChain)

#endif

#pragma pop_macro("INCLUDE_ALL_RxExceptionsCompositeException")
