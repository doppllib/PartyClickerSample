//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsCompletableFromEmitter")
#ifdef RESTRICT_RxInternalOperatorsCompletableFromEmitter
#define INCLUDE_ALL_RxInternalOperatorsCompletableFromEmitter 0
#else
#define INCLUDE_ALL_RxInternalOperatorsCompletableFromEmitter 1
#endif
#undef RESTRICT_RxInternalOperatorsCompletableFromEmitter

#if !defined (RxInternalOperatorsCompletableFromEmitter_) && (INCLUDE_ALL_RxInternalOperatorsCompletableFromEmitter || defined(INCLUDE_RxInternalOperatorsCompletableFromEmitter))
#define RxInternalOperatorsCompletableFromEmitter_

#define RESTRICT_RxCompletable 1
#define INCLUDE_RxCompletable_OnSubscribe 1
#include "RxCompletable.h"

@protocol RxCompletableSubscriber;
@protocol RxFunctionsAction1;

@interface RxInternalOperatorsCompletableFromEmitter : NSObject < RxCompletable_OnSubscribe > {
 @public
  id<RxFunctionsAction1> producer_;
}

#pragma mark Public

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)producer;

- (void)callWithId:(id<RxCompletableSubscriber>)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableFromEmitter)

J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableFromEmitter, producer_, id<RxFunctionsAction1>)

FOUNDATION_EXPORT void RxInternalOperatorsCompletableFromEmitter_initWithRxFunctionsAction1_(RxInternalOperatorsCompletableFromEmitter *self, id<RxFunctionsAction1> producer);

FOUNDATION_EXPORT RxInternalOperatorsCompletableFromEmitter *new_RxInternalOperatorsCompletableFromEmitter_initWithRxFunctionsAction1_(id<RxFunctionsAction1> producer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsCompletableFromEmitter *create_RxInternalOperatorsCompletableFromEmitter_initWithRxFunctionsAction1_(id<RxFunctionsAction1> producer);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableFromEmitter)

#endif

#if !defined (RxInternalOperatorsCompletableFromEmitter_FromEmitter_) && (INCLUDE_ALL_RxInternalOperatorsCompletableFromEmitter || defined(INCLUDE_RxInternalOperatorsCompletableFromEmitter_FromEmitter))
#define RxInternalOperatorsCompletableFromEmitter_FromEmitter_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicBoolean 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicBoolean 1
#include "java/util/concurrent/atomic/AtomicBoolean.h"

#define RESTRICT_RxCompletableEmitter 1
#define INCLUDE_RxCompletableEmitter 1
#include "RxCompletableEmitter.h"

#define RESTRICT_RxSubscription 1
#define INCLUDE_RxSubscription 1
#include "RxSubscription.h"

@class RxInternalSubscriptionsSequentialSubscription;
@protocol RxAsyncEmitter_Cancellable;
@protocol RxCompletableSubscriber;

@interface RxInternalOperatorsCompletableFromEmitter_FromEmitter : JavaUtilConcurrentAtomicAtomicBoolean < RxCompletableEmitter, RxSubscription > {
 @public
  id<RxCompletableSubscriber> actual_;
  RxInternalSubscriptionsSequentialSubscription *resource_;
}

#pragma mark Public

- (instancetype)initWithRxCompletableSubscriber:(id<RxCompletableSubscriber>)actual;

- (jboolean)isUnsubscribed;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)t;

- (void)setCancellationWithRxAsyncEmitter_Cancellable:(id<RxAsyncEmitter_Cancellable>)c;

- (void)setSubscriptionWithRxSubscription:(id<RxSubscription>)s;

- (void)unsubscribe;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableFromEmitter_FromEmitter)

J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableFromEmitter_FromEmitter, actual_, id<RxCompletableSubscriber>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableFromEmitter_FromEmitter, resource_, RxInternalSubscriptionsSequentialSubscription *)

FOUNDATION_EXPORT void RxInternalOperatorsCompletableFromEmitter_FromEmitter_initWithRxCompletableSubscriber_(RxInternalOperatorsCompletableFromEmitter_FromEmitter *self, id<RxCompletableSubscriber> actual);

FOUNDATION_EXPORT RxInternalOperatorsCompletableFromEmitter_FromEmitter *new_RxInternalOperatorsCompletableFromEmitter_FromEmitter_initWithRxCompletableSubscriber_(id<RxCompletableSubscriber> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsCompletableFromEmitter_FromEmitter *create_RxInternalOperatorsCompletableFromEmitter_FromEmitter_initWithRxCompletableSubscriber_(id<RxCompletableSubscriber> actual);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableFromEmitter_FromEmitter)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsCompletableFromEmitter")
