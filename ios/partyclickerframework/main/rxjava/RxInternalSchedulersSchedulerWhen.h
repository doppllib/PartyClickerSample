//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalSchedulersSchedulerWhen")
#ifdef RESTRICT_RxInternalSchedulersSchedulerWhen
#define INCLUDE_ALL_RxInternalSchedulersSchedulerWhen 0
#else
#define INCLUDE_ALL_RxInternalSchedulersSchedulerWhen 1
#endif
#undef RESTRICT_RxInternalSchedulersSchedulerWhen

#if !defined (RxInternalSchedulersSchedulerWhen_) && (INCLUDE_ALL_RxInternalSchedulersSchedulerWhen || defined(INCLUDE_RxInternalSchedulersSchedulerWhen))
#define RxInternalSchedulersSchedulerWhen_

#define RESTRICT_RxScheduler 1
#define INCLUDE_RxScheduler 1
#include "RxScheduler.h"

#define RESTRICT_RxSubscription 1
#define INCLUDE_RxSubscription 1
#include "RxSubscription.h"

@class RxScheduler_Worker;
@protocol RxFunctionsFunc1;

@interface RxInternalSchedulersSchedulerWhen : RxScheduler < RxSubscription >

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)combine
                         withRxScheduler:(RxScheduler *)actualScheduler;

- (RxScheduler_Worker *)createWorker;

- (jboolean)isUnsubscribed;

- (void)unsubscribe;

@end

J2OBJC_STATIC_INIT(RxInternalSchedulersSchedulerWhen)

inline id<RxSubscription> RxInternalSchedulersSchedulerWhen_get_SUBSCRIBED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<RxSubscription> RxInternalSchedulersSchedulerWhen_SUBSCRIBED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalSchedulersSchedulerWhen, SUBSCRIBED, id<RxSubscription>)

inline id<RxSubscription> RxInternalSchedulersSchedulerWhen_get_UNSUBSCRIBED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<RxSubscription> RxInternalSchedulersSchedulerWhen_UNSUBSCRIBED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalSchedulersSchedulerWhen, UNSUBSCRIBED, id<RxSubscription>)

FOUNDATION_EXPORT void RxInternalSchedulersSchedulerWhen_initWithRxFunctionsFunc1_withRxScheduler_(RxInternalSchedulersSchedulerWhen *self, id<RxFunctionsFunc1> combine, RxScheduler *actualScheduler);

FOUNDATION_EXPORT RxInternalSchedulersSchedulerWhen *new_RxInternalSchedulersSchedulerWhen_initWithRxFunctionsFunc1_withRxScheduler_(id<RxFunctionsFunc1> combine, RxScheduler *actualScheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalSchedulersSchedulerWhen *create_RxInternalSchedulersSchedulerWhen_initWithRxFunctionsFunc1_withRxScheduler_(id<RxFunctionsFunc1> combine, RxScheduler *actualScheduler);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalSchedulersSchedulerWhen)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalSchedulersSchedulerWhen")
