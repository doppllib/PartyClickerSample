//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/query/src/main/java/co/touchlab/squeaky/stmt/query/BaseComparison.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyStmtQueryBaseComparison")
#ifdef RESTRICT_CoTouchlabSqueakyStmtQueryBaseComparison
#define INCLUDE_ALL_CoTouchlabSqueakyStmtQueryBaseComparison 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyStmtQueryBaseComparison 1
#endif
#undef RESTRICT_CoTouchlabSqueakyStmtQueryBaseComparison

#if !defined (CoTouchlabSqueakyStmtQueryBaseComparison_) && (INCLUDE_ALL_CoTouchlabSqueakyStmtQueryBaseComparison || defined(INCLUDE_CoTouchlabSqueakyStmtQueryBaseComparison))
#define CoTouchlabSqueakyStmtQueryBaseComparison_

#define RESTRICT_CoTouchlabSqueakyStmtQueryComparison 1
#define INCLUDE_CoTouchlabSqueakyStmtQueryComparison 1
#include "CoTouchlabSqueakyStmtQueryComparison.h"

@class CoTouchlabSqueakyDaoSqueakyContext;
@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyStmtJoinAlias;
@class JavaLangStringBuilder;
@protocol JavaUtilList;

@interface CoTouchlabSqueakyStmtQueryBaseComparison : NSObject < CoTouchlabSqueakyStmtQueryComparison > {
 @public
  CoTouchlabSqueakyFieldFieldType *fieldType_;
}

#pragma mark Public

- (void)appendSqlWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)squeakyContext
                              withJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                            withBoolean:(jboolean)joinsAllowed;

- (void)appendValueWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)squeakyContext
                                         withJavaUtilList:(id<JavaUtilList>)params;

- (NSString *)getOperation;

- (NSString *)description;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                                 withId:(id)value
                                            withBoolean:(jboolean)isComparison
                     withCoTouchlabSqueakyStmtJoinAlias:(CoTouchlabSqueakyStmtJoinAlias *)joinAlias;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyStmtQueryBaseComparison)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyStmtQueryBaseComparison, fieldType_, CoTouchlabSqueakyFieldFieldType *)

FOUNDATION_EXPORT void CoTouchlabSqueakyStmtQueryBaseComparison_initWithCoTouchlabSqueakyFieldFieldType_withId_withBoolean_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyStmtQueryBaseComparison *self, CoTouchlabSqueakyFieldFieldType *fieldType, id value, jboolean isComparison, CoTouchlabSqueakyStmtJoinAlias *joinAlias);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyStmtQueryBaseComparison)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyStmtQueryBaseComparison")
