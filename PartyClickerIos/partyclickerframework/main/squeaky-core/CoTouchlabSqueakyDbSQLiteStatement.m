//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/core/src/main/java/co/touchlab/squeaky/db/SQLiteStatement.java
//

#include "CoTouchlabSqueakyDbSQLiteStatement.h"
#include "J2ObjC_source.h"

@interface CoTouchlabSqueakyDbSQLiteStatement : NSObject

@end

@implementation CoTouchlabSqueakyDbSQLiteStatement

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x401, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(close);
  methods[1].selector = @selector(executeInsert);
  methods[2].selector = @selector(executeUpdateDelete);
  methods[3].selector = @selector(bindBlobWithInt:withByteArray:);
  methods[4].selector = @selector(bindDoubleWithInt:withDouble:);
  methods[5].selector = @selector(bindLongWithInt:withLong:);
  methods[6].selector = @selector(bindNullWithInt:);
  methods[7].selector = @selector(bindStringWithInt:withNSString:);
  methods[8].selector = @selector(clearBindings);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteException;", "bindBlob", "I[B", "bindDouble", "ID", "bindLong", "IJ", "bindNull", "I", "bindString", "ILNSString;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDbSQLiteStatement = { "SQLiteStatement", "co.touchlab.squeaky.db", ptrTable, methods, NULL, 7, 0x609, 9, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabSqueakyDbSQLiteStatement;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDbSQLiteStatement)
