//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyStmtQueryBetween")
#ifdef RESTRICT_CoTouchlabSqueakyStmtQueryBetween
#define INCLUDE_ALL_CoTouchlabSqueakyStmtQueryBetween 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyStmtQueryBetween 1
#endif
#undef RESTRICT_CoTouchlabSqueakyStmtQueryBetween

#if !defined (CoTouchlabSqueakyStmtQueryBetween_) && (INCLUDE_ALL_CoTouchlabSqueakyStmtQueryBetween || defined(INCLUDE_CoTouchlabSqueakyStmtQueryBetween))
#define CoTouchlabSqueakyStmtQueryBetween_

#define RESTRICT_CoTouchlabSqueakyStmtQueryBaseComparison 1
#define INCLUDE_CoTouchlabSqueakyStmtQueryBaseComparison 1
#include "CoTouchlabSqueakyStmtQueryBaseComparison.h"

@class CoTouchlabSqueakyDaoSqueakyContext;
@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyStmtJoinAlias;
@protocol JavaUtilList;

@interface CoTouchlabSqueakyStmtQueryBetween : CoTouchlabSqueakyStmtQueryBaseComparison

#pragma mark Public

- (instancetype)initWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                                 withId:(id)low
                                                 withId:(id)high
                     withCoTouchlabSqueakyStmtJoinAlias:(CoTouchlabSqueakyStmtJoinAlias *)joinAlias;

- (void)appendValueWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)squeakyContext
                                         withJavaUtilList:(id<JavaUtilList>)params;

- (NSString *)getOperation;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyStmtQueryBetween)

FOUNDATION_EXPORT void CoTouchlabSqueakyStmtQueryBetween_initWithCoTouchlabSqueakyFieldFieldType_withId_withId_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyStmtQueryBetween *self, CoTouchlabSqueakyFieldFieldType *fieldType, id low, id high, CoTouchlabSqueakyStmtJoinAlias *joinAlias);

FOUNDATION_EXPORT CoTouchlabSqueakyStmtQueryBetween *new_CoTouchlabSqueakyStmtQueryBetween_initWithCoTouchlabSqueakyFieldFieldType_withId_withId_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyFieldFieldType *fieldType, id low, id high, CoTouchlabSqueakyStmtJoinAlias *joinAlias) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyStmtQueryBetween *create_CoTouchlabSqueakyStmtQueryBetween_initWithCoTouchlabSqueakyFieldFieldType_withId_withId_withCoTouchlabSqueakyStmtJoinAlias_(CoTouchlabSqueakyFieldFieldType *fieldType, id low, id high, CoTouchlabSqueakyStmtJoinAlias *joinAlias);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyStmtQueryBetween)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyStmtQueryBetween")
