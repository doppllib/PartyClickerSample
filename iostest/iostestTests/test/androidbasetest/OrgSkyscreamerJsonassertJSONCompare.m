//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "OrgSkyscreamerJsonassertComparatorDefaultComparator.h"
#include "OrgSkyscreamerJsonassertComparatorJSONComparator.h"
#include "OrgSkyscreamerJsonassertJSONCompare.h"
#include "OrgSkyscreamerJsonassertJSONCompareMode.h"
#include "OrgSkyscreamerJsonassertJSONCompareResult.h"
#include "OrgSkyscreamerJsonassertJSONParser.h"
#include "org/json/JSONArray.h"
#include "org/json/JSONObject.h"

@interface OrgSkyscreamerJsonassertJSONCompare ()

- (instancetype)init;

+ (id<OrgSkyscreamerJsonassertComparatorJSONComparator>)getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode;

@end

__attribute__((unused)) static void OrgSkyscreamerJsonassertJSONCompare_init(OrgSkyscreamerJsonassertJSONCompare *self);

__attribute__((unused)) static OrgSkyscreamerJsonassertJSONCompare *new_OrgSkyscreamerJsonassertJSONCompare_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSkyscreamerJsonassertJSONCompare *create_OrgSkyscreamerJsonassertJSONCompare_init();

__attribute__((unused)) static id<OrgSkyscreamerJsonassertComparatorJSONComparator> OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode);

@implementation OrgSkyscreamerJsonassertJSONCompare

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSkyscreamerJsonassertJSONCompare_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<OrgSkyscreamerJsonassertComparatorJSONComparator>)getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode {
  return OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(mode);
}

+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithNSString:(NSString *)expectedStr
                                                          withNSString:(NSString *)actualStr
                  withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator {
  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expectedStr, actualStr, comparator);
}

+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
                                                          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
                           withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator {
  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expected, actual, comparator);
}

+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
                                                          withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
                          withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator {
  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expected, actual, comparator);
}

+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithNSString:(NSString *)expectedStr
                                                          withNSString:(NSString *)actualStr
                           withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode {
  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actualStr, mode);
}

+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
                                                          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
                                    withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode {
  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, mode);
}

+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
                                                          withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
                                   withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode {
  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, mode);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSkyscreamerJsonassertComparatorJSONComparator;", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 3, 4, -1, -1, -1 },
    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 5, 4, -1, -1, -1 },
    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 6, 4, -1, -1, -1 },
    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 7, 4, -1, -1, -1 },
    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 8, 4, -1, -1, -1 },
    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 9, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode:);
  methods[2].selector = @selector(compareJSONWithNSString:withNSString:withOrgSkyscreamerJsonassertComparatorJSONComparator:);
  methods[3].selector = @selector(compareJSONWithOrgJsonJSONObject:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertComparatorJSONComparator:);
  methods[4].selector = @selector(compareJSONWithOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertComparatorJSONComparator:);
  methods[5].selector = @selector(compareJSONWithNSString:withNSString:withOrgSkyscreamerJsonassertJSONCompareMode:);
  methods[6].selector = @selector(compareJSONWithOrgJsonJSONObject:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertJSONCompareMode:);
  methods[7].selector = @selector(compareJSONWithOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareMode:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getComparatorForMode", "LOrgSkyscreamerJsonassertJSONCompareMode;", "compareJSON", "LNSString;LNSString;LOrgSkyscreamerJsonassertComparatorJSONComparator;", "LOrgJsonJSONException;", "LOrgJsonJSONObject;LOrgJsonJSONObject;LOrgSkyscreamerJsonassertComparatorJSONComparator;", "LOrgJsonJSONArray;LOrgJsonJSONArray;LOrgSkyscreamerJsonassertComparatorJSONComparator;", "LNSString;LNSString;LOrgSkyscreamerJsonassertJSONCompareMode;", "LOrgJsonJSONObject;LOrgJsonJSONObject;LOrgSkyscreamerJsonassertJSONCompareMode;", "LOrgJsonJSONArray;LOrgJsonJSONArray;LOrgSkyscreamerJsonassertJSONCompareMode;" };
  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertJSONCompare = { "JSONCompare", "org.skyscreamer.jsonassert", ptrTable, methods, NULL, 7, 0x11, 8, 0, -1, -1, -1, -1, -1 };
  return &_OrgSkyscreamerJsonassertJSONCompare;
}

@end

void OrgSkyscreamerJsonassertJSONCompare_init(OrgSkyscreamerJsonassertJSONCompare *self) {
  NSObject_init(self);
}

OrgSkyscreamerJsonassertJSONCompare *new_OrgSkyscreamerJsonassertJSONCompare_init() {
  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertJSONCompare, init)
}

OrgSkyscreamerJsonassertJSONCompare *create_OrgSkyscreamerJsonassertJSONCompare_init() {
  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertJSONCompare, init)
}

id<OrgSkyscreamerJsonassertComparatorJSONComparator> OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode) {
  OrgSkyscreamerJsonassertJSONCompare_initialize();
  return create_OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(mode);
}

OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(NSString *expectedStr, NSString *actualStr, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
  OrgSkyscreamerJsonassertJSONCompare_initialize();
  id expected = OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(expectedStr);
  id actual = OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(actualStr);
  if (([expected isKindOfClass:[OrgJsonJSONObject class]]) && ([actual isKindOfClass:[OrgJsonJSONObject class]])) {
    return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertComparatorJSONComparator_((OrgJsonJSONObject *) cast_chk(expected, [OrgJsonJSONObject class]), (OrgJsonJSONObject *) cast_chk(actual, [OrgJsonJSONObject class]), comparator);
  }
  else if (([expected isKindOfClass:[OrgJsonJSONArray class]]) && ([actual isKindOfClass:[OrgJsonJSONArray class]])) {
    return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertComparatorJSONComparator_((OrgJsonJSONArray *) cast_chk(expected, [OrgJsonJSONArray class]), (OrgJsonJSONArray *) cast_chk(actual, [OrgJsonJSONArray class]), comparator);
  }
  else if ([expected isKindOfClass:[OrgJsonJSONObject class]]) {
    return [create_OrgSkyscreamerJsonassertJSONCompareResult_init() failWithNSString:@"" withId:expected withId:actual];
  }
  else {
    return [create_OrgSkyscreamerJsonassertJSONCompareResult_init() failWithNSString:@"" withId:expected withId:actual];
  }
}

OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertComparatorJSONComparator_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
  OrgSkyscreamerJsonassertJSONCompare_initialize();
  return [((id<OrgSkyscreamerJsonassertComparatorJSONComparator>) nil_chk(comparator)) compareJSONWithOrgJsonJSONObject:expected withOrgJsonJSONObject:actual];
}

OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertComparatorJSONComparator_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
  OrgSkyscreamerJsonassertJSONCompare_initialize();
  return [((id<OrgSkyscreamerJsonassertComparatorJSONComparator>) nil_chk(comparator)) compareJSONWithOrgJsonJSONArray:expected withOrgJsonJSONArray:actual];
}

OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, NSString *actualStr, OrgSkyscreamerJsonassertJSONCompareMode *mode) {
  OrgSkyscreamerJsonassertJSONCompare_initialize();
  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expectedStr, actualStr, OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(mode));
}

OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *mode) {
  OrgSkyscreamerJsonassertJSONCompare_initialize();
  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expected, actual, OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(mode));
}

OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *mode) {
  OrgSkyscreamerJsonassertJSONCompare_initialize();
  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expected, actual, OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(mode));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertJSONCompare)
