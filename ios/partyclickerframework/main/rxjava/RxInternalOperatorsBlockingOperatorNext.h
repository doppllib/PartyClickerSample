//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsBlockingOperatorNext")
#ifdef RESTRICT_RxInternalOperatorsBlockingOperatorNext
#define INCLUDE_ALL_RxInternalOperatorsBlockingOperatorNext 0
#else
#define INCLUDE_ALL_RxInternalOperatorsBlockingOperatorNext 1
#endif
#undef RESTRICT_RxInternalOperatorsBlockingOperatorNext

#if !defined (RxInternalOperatorsBlockingOperatorNext_) && (INCLUDE_ALL_RxInternalOperatorsBlockingOperatorNext || defined(INCLUDE_RxInternalOperatorsBlockingOperatorNext))
#define RxInternalOperatorsBlockingOperatorNext_

@class RxObservable;
@protocol JavaLangIterable;

@interface RxInternalOperatorsBlockingOperatorNext : NSObject

#pragma mark Public

+ (id<JavaLangIterable>)nextWithRxObservable:(RxObservable *)items;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsBlockingOperatorNext)

FOUNDATION_EXPORT id<JavaLangIterable> RxInternalOperatorsBlockingOperatorNext_nextWithRxObservable_(RxObservable *items);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsBlockingOperatorNext)

#endif

#if !defined (RxInternalOperatorsBlockingOperatorNext_NextIterator_) && (INCLUDE_ALL_RxInternalOperatorsBlockingOperatorNext || defined(INCLUDE_RxInternalOperatorsBlockingOperatorNext_NextIterator))
#define RxInternalOperatorsBlockingOperatorNext_NextIterator_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class RxInternalOperatorsBlockingOperatorNext_NextObserver;
@class RxObservable;
@protocol JavaUtilFunctionConsumer;

@interface RxInternalOperatorsBlockingOperatorNext_NextIterator : NSObject < JavaUtilIterator >

#pragma mark Public

- (jboolean)hasNext;

- (id)next;

- (void)remove;

#pragma mark Package-Private

- (instancetype)initWithRxObservable:(RxObservable *)items
withRxInternalOperatorsBlockingOperatorNext_NextObserver:(RxInternalOperatorsBlockingOperatorNext_NextObserver *)observer;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsBlockingOperatorNext_NextIterator)

FOUNDATION_EXPORT void RxInternalOperatorsBlockingOperatorNext_NextIterator_initWithRxObservable_withRxInternalOperatorsBlockingOperatorNext_NextObserver_(RxInternalOperatorsBlockingOperatorNext_NextIterator *self, RxObservable *items, RxInternalOperatorsBlockingOperatorNext_NextObserver *observer);

FOUNDATION_EXPORT RxInternalOperatorsBlockingOperatorNext_NextIterator *new_RxInternalOperatorsBlockingOperatorNext_NextIterator_initWithRxObservable_withRxInternalOperatorsBlockingOperatorNext_NextObserver_(RxObservable *items, RxInternalOperatorsBlockingOperatorNext_NextObserver *observer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsBlockingOperatorNext_NextIterator *create_RxInternalOperatorsBlockingOperatorNext_NextIterator_initWithRxObservable_withRxInternalOperatorsBlockingOperatorNext_NextObserver_(RxObservable *items, RxInternalOperatorsBlockingOperatorNext_NextObserver *observer);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsBlockingOperatorNext_NextIterator)

#endif

#if !defined (RxInternalOperatorsBlockingOperatorNext_NextObserver_) && (INCLUDE_ALL_RxInternalOperatorsBlockingOperatorNext || defined(INCLUDE_RxInternalOperatorsBlockingOperatorNext_NextObserver))
#define RxInternalOperatorsBlockingOperatorNext_NextObserver_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "RxSubscriber.h"

@class JavaUtilConcurrentAtomicAtomicInteger;
@class RxNotification;

@interface RxInternalOperatorsBlockingOperatorNext_NextObserver : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *waiting_;
}

#pragma mark Public

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(RxNotification *)args;

- (RxNotification *)takeNext;

#pragma mark Package-Private

- (instancetype)init;

- (void)setWaitingWithInt:(jint)value;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsBlockingOperatorNext_NextObserver)

J2OBJC_FIELD_SETTER(RxInternalOperatorsBlockingOperatorNext_NextObserver, waiting_, JavaUtilConcurrentAtomicAtomicInteger *)

FOUNDATION_EXPORT void RxInternalOperatorsBlockingOperatorNext_NextObserver_init(RxInternalOperatorsBlockingOperatorNext_NextObserver *self);

FOUNDATION_EXPORT RxInternalOperatorsBlockingOperatorNext_NextObserver *new_RxInternalOperatorsBlockingOperatorNext_NextObserver_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsBlockingOperatorNext_NextObserver *create_RxInternalOperatorsBlockingOperatorNext_NextObserver_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsBlockingOperatorNext_NextObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsBlockingOperatorNext")
