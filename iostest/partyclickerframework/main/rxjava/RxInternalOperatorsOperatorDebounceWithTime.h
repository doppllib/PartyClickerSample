//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithTime")
#ifdef RESTRICT_RxInternalOperatorsOperatorDebounceWithTime
#define INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithTime 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithTime 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorDebounceWithTime

#if !defined (RxInternalOperatorsOperatorDebounceWithTime_) && (INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithTime || defined(INCLUDE_RxInternalOperatorsOperatorDebounceWithTime))
#define RxInternalOperatorsOperatorDebounceWithTime_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "RxObservable.h"

@class JavaUtilConcurrentTimeUnit;
@class RxScheduler;
@class RxSubscriber;

@interface RxInternalOperatorsOperatorDebounceWithTime : NSObject < RxObservable_Operator > {
 @public
  jlong timeout_;
  JavaUtilConcurrentTimeUnit *unit_;
  RxScheduler *scheduler_;
}

#pragma mark Public

- (instancetype)initWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
             withRxScheduler:(RxScheduler *)scheduler;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDebounceWithTime)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDebounceWithTime, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDebounceWithTime, scheduler_, RxScheduler *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorDebounceWithTime_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxInternalOperatorsOperatorDebounceWithTime *self, jlong timeout, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

FOUNDATION_EXPORT RxInternalOperatorsOperatorDebounceWithTime *new_RxInternalOperatorsOperatorDebounceWithTime_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong timeout, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorDebounceWithTime *create_RxInternalOperatorsOperatorDebounceWithTime_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong timeout, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorDebounceWithTime)

#endif

#if !defined (RxInternalOperatorsOperatorDebounceWithTime_DebounceState_) && (INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithTime || defined(INCLUDE_RxInternalOperatorsOperatorDebounceWithTime_DebounceState))
#define RxInternalOperatorsOperatorDebounceWithTime_DebounceState_

@class RxSubscriber;

@interface RxInternalOperatorsOperatorDebounceWithTime_DebounceState : NSObject {
 @public
  jint index_;
  id value_;
  jboolean hasValue_;
  jboolean terminate_;
  jboolean emitting_;
}

#pragma mark Public

- (void)clear;

- (void)emitWithInt:(jint)index
   withRxSubscriber:(RxSubscriber *)onNextAndComplete
   withRxSubscriber:(RxSubscriber *)onError;

- (void)emitAndCompleteWithRxSubscriber:(RxSubscriber *)onNextAndComplete
                       withRxSubscriber:(RxSubscriber *)onError;

- (jint)nextWithId:(id)value;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDebounceWithTime_DebounceState)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDebounceWithTime_DebounceState, value_, id)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorDebounceWithTime_DebounceState_init(RxInternalOperatorsOperatorDebounceWithTime_DebounceState *self);

FOUNDATION_EXPORT RxInternalOperatorsOperatorDebounceWithTime_DebounceState *new_RxInternalOperatorsOperatorDebounceWithTime_DebounceState_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorDebounceWithTime_DebounceState *create_RxInternalOperatorsOperatorDebounceWithTime_DebounceState_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorDebounceWithTime_DebounceState)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorDebounceWithTime")
