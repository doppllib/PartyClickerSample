//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxInternalOperatorsNotificationLite.h"
#include "RxInternalOperatorsOperatorSkipLast.h"
#include "RxSubscriber.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/util/ArrayDeque.h"
#include "java/util/Deque.h"

@interface RxInternalOperatorsOperatorSkipLast_1 : RxSubscriber {
 @public
  RxInternalOperatorsOperatorSkipLast *this$0_;
  RxSubscriber *val$subscriber_;
  id<JavaUtilDeque> deque_;
}

- (instancetype)initWithRxInternalOperatorsOperatorSkipLast:(RxInternalOperatorsOperatorSkipLast *)outer$
                                           withRxSubscriber:(RxSubscriber *)capture$0
                                           withRxSubscriber:(RxSubscriber *)subscriber;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSkipLast_1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSkipLast_1, deque_, id<JavaUtilDeque>)

__attribute__((unused)) static void RxInternalOperatorsOperatorSkipLast_1_initWithRxInternalOperatorsOperatorSkipLast_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkipLast_1 *self, RxInternalOperatorsOperatorSkipLast *outer$, RxSubscriber *capture$0, RxSubscriber *subscriber);

__attribute__((unused)) static RxInternalOperatorsOperatorSkipLast_1 *new_RxInternalOperatorsOperatorSkipLast_1_initWithRxInternalOperatorsOperatorSkipLast_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkipLast *outer$, RxSubscriber *capture$0, RxSubscriber *subscriber) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSkipLast_1 *create_RxInternalOperatorsOperatorSkipLast_1_initWithRxInternalOperatorsOperatorSkipLast_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkipLast *outer$, RxSubscriber *capture$0, RxSubscriber *subscriber);

@implementation RxInternalOperatorsOperatorSkipLast

- (instancetype)initWithInt:(jint)count {
  RxInternalOperatorsOperatorSkipLast_initWithInt_(self, count);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)subscriber {
  return create_RxInternalOperatorsOperatorSkipLast_1_initWithRxInternalOperatorsOperatorSkipLast_withRxSubscriber_withRxSubscriber_(self, subscriber, subscriber);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LRxSubscriber;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "count_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<-TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSkipLast = { "OperatorSkipLast", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, 4, -1 };
  return &_RxInternalOperatorsOperatorSkipLast;
}

@end

void RxInternalOperatorsOperatorSkipLast_initWithInt_(RxInternalOperatorsOperatorSkipLast *self, jint count) {
  NSObject_init(self);
  if (count < 0) {
    @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(@"count could not be negative");
  }
  self->count_ = count;
}

RxInternalOperatorsOperatorSkipLast *new_RxInternalOperatorsOperatorSkipLast_initWithInt_(jint count) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSkipLast, initWithInt_, count)
}

RxInternalOperatorsOperatorSkipLast *create_RxInternalOperatorsOperatorSkipLast_initWithInt_(jint count) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSkipLast, initWithInt_, count)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSkipLast)

@implementation RxInternalOperatorsOperatorSkipLast_1

- (instancetype)initWithRxInternalOperatorsOperatorSkipLast:(RxInternalOperatorsOperatorSkipLast *)outer$
                                           withRxSubscriber:(RxSubscriber *)capture$0
                                           withRxSubscriber:(RxSubscriber *)subscriber {
  RxInternalOperatorsOperatorSkipLast_1_initWithRxInternalOperatorsOperatorSkipLast_withRxSubscriber_withRxSubscriber_(self, outer$, capture$0, subscriber);
  return self;
}

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(val$subscriber_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(val$subscriber_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)value {
  if (this$0_->count_ == 0) {
    [((RxSubscriber *) nil_chk(val$subscriber_)) onNextWithId:value];
    return;
  }
  if ([((id<JavaUtilDeque>) nil_chk(deque_)) size] == this$0_->count_) {
    [((RxSubscriber *) nil_chk(val$subscriber_)) onNextWithId:RxInternalOperatorsNotificationLite_getValueWithId_([deque_ removeFirst])];
  }
  else {
    [self requestWithLong:1];
  }
  [deque_ offerLastWithId:RxInternalOperatorsNotificationLite_nextWithId_(value)];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$subscriber_);
  RELEASE_(deque_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOperatorSkipLast:withRxSubscriber:withRxSubscriber:);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSkipLast;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$subscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
    { "deque_", "LJavaUtilDeque;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<*>;)V", "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "Lrx/internal/operators/OperatorSkipLast<TT;>;", "Lrx/Subscriber<-TT;>;", "Ljava/util/Deque<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorSkipLast;", "callWithId:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSkipLast_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 4, 3, 10, -1, 11, 12, -1 };
  return &_RxInternalOperatorsOperatorSkipLast_1;
}

@end

void RxInternalOperatorsOperatorSkipLast_1_initWithRxInternalOperatorsOperatorSkipLast_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkipLast_1 *self, RxInternalOperatorsOperatorSkipLast *outer$, RxSubscriber *capture$0, RxSubscriber *subscriber) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$subscriber_, capture$0);
  RxSubscriber_initWithRxSubscriber_(self, subscriber);
  JreStrongAssignAndConsume(&self->deque_, new_JavaUtilArrayDeque_init());
}

RxInternalOperatorsOperatorSkipLast_1 *new_RxInternalOperatorsOperatorSkipLast_1_initWithRxInternalOperatorsOperatorSkipLast_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkipLast *outer$, RxSubscriber *capture$0, RxSubscriber *subscriber) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSkipLast_1, initWithRxInternalOperatorsOperatorSkipLast_withRxSubscriber_withRxSubscriber_, outer$, capture$0, subscriber)
}

RxInternalOperatorsOperatorSkipLast_1 *create_RxInternalOperatorsOperatorSkipLast_1_initWithRxInternalOperatorsOperatorSkipLast_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkipLast *outer$, RxSubscriber *capture$0, RxSubscriber *subscriber) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSkipLast_1, initWithRxInternalOperatorsOperatorSkipLast_withRxSubscriber_withRxSubscriber_, outer$, capture$0, subscriber)
}
