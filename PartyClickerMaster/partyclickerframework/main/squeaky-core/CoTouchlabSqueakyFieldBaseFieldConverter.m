//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/core/src/main/java/co/touchlab/squeaky/field/BaseFieldConverter.java
//

#include "CoTouchlabSqueakyFieldBaseFieldConverter.h"
#include "CoTouchlabSqueakyFieldFieldType.h"
#include "J2ObjC_source.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation CoTouchlabSqueakyFieldBaseFieldConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldBaseFieldConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)javaObject {
  return javaObject;
}

- (id)sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)sqlArg
                                              withInt:(jint)columnPos {
  return sqlArg;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:withId:);
  methods[2].selector = @selector(sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:withId:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "javaToSqlArg", "LCoTouchlabSqueakyFieldFieldType;LNSObject;", "LJavaSqlSQLException;", "sqlArgToJava", "LCoTouchlabSqueakyFieldFieldType;LNSObject;I" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldBaseFieldConverter = { "BaseFieldConverter", "co.touchlab.squeaky.field", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabSqueakyFieldBaseFieldConverter;
}

@end

void CoTouchlabSqueakyFieldBaseFieldConverter_init(CoTouchlabSqueakyFieldBaseFieldConverter *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldBaseFieldConverter)
