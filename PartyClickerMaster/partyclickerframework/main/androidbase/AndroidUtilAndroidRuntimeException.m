//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/core-doppl/androidbase/src/main/java/android/util/AndroidRuntimeException.java
//

#include "AndroidUtilAndroidRuntimeException.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"

@implementation AndroidUtilAndroidRuntimeException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidUtilAndroidRuntimeException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)name {
  AndroidUtilAndroidRuntimeException_initWithNSString_(self, name);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                 withNSException:(NSException *)cause {
  AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(self, name, cause);
  return self;
}

- (instancetype)initWithJavaLangException:(JavaLangException *)cause {
  AndroidUtilAndroidRuntimeException_initWithJavaLangException_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSString:withNSException:);
  methods[3].selector = @selector(initWithJavaLangException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LNSString;LNSException;", "LJavaLangException;" };
  static const J2ObjcClassInfo _AndroidUtilAndroidRuntimeException = { "AndroidRuntimeException", "android.util", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_AndroidUtilAndroidRuntimeException;
}

@end

void AndroidUtilAndroidRuntimeException_init(AndroidUtilAndroidRuntimeException *self) {
  JavaLangRuntimeException_init(self);
}

AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_init() {
  J2OBJC_NEW_IMPL(AndroidUtilAndroidRuntimeException, init)
}

AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_init() {
  J2OBJC_CREATE_IMPL(AndroidUtilAndroidRuntimeException, init)
}

void AndroidUtilAndroidRuntimeException_initWithNSString_(AndroidUtilAndroidRuntimeException *self, NSString *name) {
  JavaLangRuntimeException_initWithNSString_(self, name);
}

AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_initWithNSString_(NSString *name) {
  J2OBJC_NEW_IMPL(AndroidUtilAndroidRuntimeException, initWithNSString_, name)
}

AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_initWithNSString_(NSString *name) {
  J2OBJC_CREATE_IMPL(AndroidUtilAndroidRuntimeException, initWithNSString_, name)
}

void AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(AndroidUtilAndroidRuntimeException *self, NSString *name, NSException *cause) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, name, cause);
}

AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(NSString *name, NSException *cause) {
  J2OBJC_NEW_IMPL(AndroidUtilAndroidRuntimeException, initWithNSString_withNSException_, name, cause)
}

AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(NSString *name, NSException *cause) {
  J2OBJC_CREATE_IMPL(AndroidUtilAndroidRuntimeException, initWithNSString_withNSException_, name, cause)
}

void AndroidUtilAndroidRuntimeException_initWithJavaLangException_(AndroidUtilAndroidRuntimeException *self, JavaLangException *cause) {
  JavaLangRuntimeException_initWithNSException_(self, cause);
}

AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_initWithJavaLangException_(JavaLangException *cause) {
  J2OBJC_NEW_IMPL(AndroidUtilAndroidRuntimeException, initWithJavaLangException_, cause)
}

AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_initWithJavaLangException_(JavaLangException *cause) {
  J2OBJC_CREATE_IMPL(AndroidUtilAndroidRuntimeException, initWithJavaLangException_, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilAndroidRuntimeException)
