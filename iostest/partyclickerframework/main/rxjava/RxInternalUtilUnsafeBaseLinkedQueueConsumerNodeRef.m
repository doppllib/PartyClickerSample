//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "RxInternalUtilAtomicLinkedQueueNode.h"
#include "RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef.h"
#include "RxInternalUtilUnsafeBaseLinkedQueueProducerNodeRef.h"
#include "RxInternalUtilUnsafeUnsafeAccess.h"
#include "sun/misc/Unsafe.h"

@implementation RxInternalUtilUnsafeBaseLinkedQueuePad1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilUnsafeBaseLinkedQueuePad1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "p00_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 0, -1, -1, -1 },
    { "p01_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 1, -1, -1, -1 },
    { "p02_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 2, -1, -1, -1 },
    { "p03_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 3, -1, -1, -1 },
    { "p04_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 4, -1, -1, -1 },
    { "p05_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 5, -1, -1, -1 },
    { "p06_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 6, -1, -1, -1 },
    { "p07_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 7, -1, -1, -1 },
    { "p30_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 8, -1, -1, -1 },
    { "p31_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 9, -1, -1, -1 },
    { "p32_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 10, -1, -1, -1 },
    { "p33_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 11, -1, -1, -1 },
    { "p34_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 12, -1, -1, -1 },
    { "p35_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 13, -1, -1, -1 },
    { "p36_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 14, -1, -1, -1 },
    { "p37_BaseLinkedQueuePad1_", "J", .constantValue.asLong = 0, 0x0, 15, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "p00", "p01", "p02", "p03", "p04", "p05", "p06", "p07", "p30", "p31", "p32", "p33", "p34", "p35", "p36", "p37", "<E:Ljava/lang/Object;>Lrx/internal/util/unsafe/BaseLinkedQueueProducerNodeRef<TE;>;" };
  static const J2ObjcClassInfo _RxInternalUtilUnsafeBaseLinkedQueuePad1 = { "BaseLinkedQueuePad1", "rx.internal.util.unsafe", ptrTable, methods, fields, 7, 0x400, 1, 16, -1, -1, -1, 16, -1 };
  return &_RxInternalUtilUnsafeBaseLinkedQueuePad1;
}

@end

void RxInternalUtilUnsafeBaseLinkedQueuePad1_init(RxInternalUtilUnsafeBaseLinkedQueuePad1 *self) {
  RxInternalUtilUnsafeBaseLinkedQueueProducerNodeRef_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilUnsafeBaseLinkedQueuePad1)

J2OBJC_INITIALIZED_DEFN(RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef)

jlong RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef_C_NODE_OFFSET;

@implementation RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)spConsumerNodeWithRxInternalUtilAtomicLinkedQueueNode:(RxInternalUtilAtomicLinkedQueueNode *)node {
  JreStrongAssign(&consumerNode_, node);
}

- (RxInternalUtilAtomicLinkedQueueNode *)lvConsumerNode {
  return (RxInternalUtilAtomicLinkedQueueNode *) cast_chk([((SunMiscUnsafe *) nil_chk(JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE))) getObjectVolatileWithId:self withLong:RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef_C_NODE_OFFSET], [RxInternalUtilAtomicLinkedQueueNode class]);
}

- (RxInternalUtilAtomicLinkedQueueNode *)lpConsumerNode {
  return consumerNode_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(consumerNode_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x14, 0, 1, -1, 2, -1, -1 },
    { NULL, "LRxInternalUtilAtomicLinkedQueueNode;", 0x14, -1, -1, -1, 3, -1, -1 },
    { NULL, "LRxInternalUtilAtomicLinkedQueueNode;", 0x14, -1, -1, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(spConsumerNodeWithRxInternalUtilAtomicLinkedQueueNode:);
  methods[2].selector = @selector(lvConsumerNode);
  methods[3].selector = @selector(lpConsumerNode);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "C_NODE_OFFSET", "J", .constantValue.asLong = 0, 0x1c, -1, 4, -1, -1 },
    { "consumerNode_", "LRxInternalUtilAtomicLinkedQueueNode;", .constantValue.asLong = 0, 0x4, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "spConsumerNode", "LRxInternalUtilAtomicLinkedQueueNode;", "(Lrx/internal/util/atomic/LinkedQueueNode<TE;>;)V", "()Lrx/internal/util/atomic/LinkedQueueNode<TE;>;", &RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef_C_NODE_OFFSET, "Lrx/internal/util/atomic/LinkedQueueNode<TE;>;", "<E:Ljava/lang/Object;>Lrx/internal/util/unsafe/BaseLinkedQueuePad1<TE;>;" };
  static const J2ObjcClassInfo _RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef = { "BaseLinkedQueueConsumerNodeRef", "rx.internal.util.unsafe", ptrTable, methods, fields, 7, 0x401, 4, 2, -1, -1, -1, 6, -1 };
  return &_RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef;
}

+ (void)initialize {
  if (self == [RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef class]) {
    RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef_C_NODE_OFFSET = RxInternalUtilUnsafeUnsafeAccess_addressOfWithIOSClass_withNSString_(RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef_class_(), @"consumerNode");
    J2OBJC_SET_INITIALIZED(RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef)
  }
}

@end

void RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef_init(RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef *self) {
  RxInternalUtilUnsafeBaseLinkedQueuePad1_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilUnsafeBaseLinkedQueueConsumerNodeRef)
