//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilSingle")
#ifdef RESTRICT_RxInternalOperatorsSingleTakeUntilSingle
#define INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilSingle 0
#else
#define INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilSingle 1
#endif
#undef RESTRICT_RxInternalOperatorsSingleTakeUntilSingle

#if !defined (RxInternalOperatorsSingleTakeUntilSingle_) && (INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilSingle || defined(INCLUDE_RxInternalOperatorsSingleTakeUntilSingle))
#define RxInternalOperatorsSingleTakeUntilSingle_

#define RESTRICT_RxSingle 1
#define INCLUDE_RxSingle_OnSubscribe 1
#include "RxSingle.h"

@class RxSingle;
@class RxSingleSubscriber;

@interface RxInternalOperatorsSingleTakeUntilSingle : NSObject < RxSingle_OnSubscribe > {
 @public
  id<RxSingle_OnSubscribe> source_;
  RxSingle *other_;
}

#pragma mark Public

- (instancetype)initWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)source
                                withRxSingle:(RxSingle *)other;

- (void)callWithId:(RxSingleSubscriber *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleTakeUntilSingle)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleTakeUntilSingle, source_, id<RxSingle_OnSubscribe>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleTakeUntilSingle, other_, RxSingle *)

FOUNDATION_EXPORT void RxInternalOperatorsSingleTakeUntilSingle_initWithRxSingle_OnSubscribe_withRxSingle_(RxInternalOperatorsSingleTakeUntilSingle *self, id<RxSingle_OnSubscribe> source, RxSingle *other);

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilSingle *new_RxInternalOperatorsSingleTakeUntilSingle_initWithRxSingle_OnSubscribe_withRxSingle_(id<RxSingle_OnSubscribe> source, RxSingle *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilSingle *create_RxInternalOperatorsSingleTakeUntilSingle_initWithRxSingle_OnSubscribe_withRxSingle_(id<RxSingle_OnSubscribe> source, RxSingle *other);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleTakeUntilSingle)

#endif

#if !defined (RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilSingle || defined(INCLUDE_RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber))
#define RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_

#define RESTRICT_RxSingleSubscriber 1
#define INCLUDE_RxSingleSubscriber 1
#include "RxSingleSubscriber.h"

@class JavaUtilConcurrentAtomicAtomicBoolean;

@interface RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber : RxSingleSubscriber {
 @public
  RxSingleSubscriber *actual_;
  JavaUtilConcurrentAtomicAtomicBoolean *once_;
  RxSingleSubscriber *other_;
}

#pragma mark Public

- (void)onErrorWithNSException:(NSException *)error;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithRxSingleSubscriber:(RxSingleSubscriber *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber, actual_, RxSingleSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber, once_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber, other_, RxSingleSubscriber *)

FOUNDATION_EXPORT void RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_initWithRxSingleSubscriber_(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber *self, RxSingleSubscriber *actual);

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber *new_RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_initWithRxSingleSubscriber_(RxSingleSubscriber *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber *create_RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_initWithRxSingleSubscriber_(RxSingleSubscriber *actual);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber)

#endif

#if !defined (RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilSingle || defined(INCLUDE_RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber))
#define RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber_

#define RESTRICT_RxSingleSubscriber 1
#define INCLUDE_RxSingleSubscriber 1
#include "RxSingleSubscriber.h"

@class RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber;

@interface RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber : RxSingleSubscriber

#pragma mark Public

- (void)onErrorWithNSException:(NSException *)error;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithRxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber:(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber)

FOUNDATION_EXPORT void RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber_initWithRxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber *self, RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber *outer$);

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber *new_RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber_initWithRxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber *create_RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber_initWithRxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleTakeUntilSingle_TakeUntilSourceSubscriber_OtherSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsSingleTakeUntilSingle")
