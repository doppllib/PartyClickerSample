//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContentValues.h"
#include "AndroidDatabaseCursor.h"
#include "AndroidDatabaseSqliteSQLiteException.h"
#include "CoTouchlabSqueakyConfig.h"
#include "CoTouchlabSqueakyDaoCloseableIterator.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyDaoDaoHelper.h"
#include "CoTouchlabSqueakyDaoModelDao.h"
#include "CoTouchlabSqueakyDaoQuery.h"
#include "CoTouchlabSqueakyDaoSelectIterator.h"
#include "CoTouchlabSqueakyDaoSqueakyContext.h"
#include "CoTouchlabSqueakyDbSQLiteDatabase.h"
#include "CoTouchlabSqueakyDbSQLiteStatement.h"
#include "CoTouchlabSqueakyFieldFieldType.h"
#include "CoTouchlabSqueakyFieldForeignCollectionInfo.h"
#include "CoTouchlabSqueakySqlSqlHelper.h"
#include "CoTouchlabSqueakyTableGeneratedTableMapper.h"
#include "CoTouchlabSqueakyTableTableInfo.h"
#include "CoTouchlabSqueakyTableTableUtils.h"
#include "CoTouchlabSqueakyTableTransientCache.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "android/text/TextUtils.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/ThreadLocal.h"
#include "java/sql/SQLException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/concurrent/ConcurrentHashMap.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface CoTouchlabSqueakyDaoModelDao () {
 @public
  IOSClass *entityClass_;
  id<CoTouchlabSqueakyTableGeneratedTableMapper> generatedTableMapper_;
  id<JavaUtilSet> daoObserverSet_;
  IOSObjectArray *tableCols_;
  CoTouchlabSqueakyDaoSqueakyContext *squeakyContext_;
  CoTouchlabSqueakyFieldFieldType *idFieldType_;
  id<JavaUtilList> statementList_;
  JavaLangThreadLocal *createStatement_;
  JavaLangThreadLocal *updateStatement_;
}

- (IOSObjectArray *)buildSelect;

- (NSString *)createDefaultFrom;

- (id<JavaUtilList>)makeCursorResultsWithNSString:(NSString *)from
                                     withNSString:(NSString *)where
                                withNSStringArray:(IOSObjectArray *)args
                                     withNSString:(NSString *)orderBy
                              withJavaLangInteger:(JavaLangInteger *)limit
                              withJavaLangInteger:(JavaLangInteger *)offset
  withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap;

- (id<AndroidDatabaseCursor>)makeCursorWithNSString:(NSString *)from
                                       withNSString:(NSString *)where
                                  withNSStringArray:(IOSObjectArray *)args
                                       withNSString:(NSString *)orderBy
                                withJavaLangInteger:(JavaLangInteger *)limit
                                withJavaLangInteger:(JavaLangInteger *)offset;

- (id<CoTouchlabSqueakyDbSQLiteStatement>)makeCreateStatement;

- (void)fillContentValWithAndroidContentContentValues:(AndroidContentContentValues *)values
                  withCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)val;

- (id<CoTouchlabSqueakyDbSQLiteStatement>)makeUpdateStatement;

- (IOSObjectArray *)generateDefaultForeignRefreshMap;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, entityClass_, IOSClass *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, generatedTableMapper_, id<CoTouchlabSqueakyTableGeneratedTableMapper>)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, daoObserverSet_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, tableCols_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, squeakyContext_, CoTouchlabSqueakyDaoSqueakyContext *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, idFieldType_, CoTouchlabSqueakyFieldFieldType *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, statementList_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, createStatement_, JavaLangThreadLocal *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, updateStatement_, JavaLangThreadLocal *)

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoModelDao_buildSelect(CoTouchlabSqueakyDaoModelDao *self);

__attribute__((unused)) static NSString *CoTouchlabSqueakyDaoModelDao_createDefaultFrom(CoTouchlabSqueakyDaoModelDao *self);

__attribute__((unused)) static id<JavaUtilList> CoTouchlabSqueakyDaoModelDao_makeCursorResultsWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyDaoModelDao *self, NSString *from, NSString *where, IOSObjectArray *args, NSString *orderBy, JavaLangInteger *limit, JavaLangInteger *offset, IOSObjectArray *foreignRefreshMap);

__attribute__((unused)) static id<AndroidDatabaseCursor> CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(CoTouchlabSqueakyDaoModelDao *self, NSString *from, NSString *where, IOSObjectArray *args, NSString *orderBy, JavaLangInteger *limit, JavaLangInteger *offset);

__attribute__((unused)) static id<CoTouchlabSqueakyDbSQLiteStatement> CoTouchlabSqueakyDaoModelDao_makeCreateStatement(CoTouchlabSqueakyDaoModelDao *self);

__attribute__((unused)) static void CoTouchlabSqueakyDaoModelDao_fillContentValWithAndroidContentContentValues_withCoTouchlabSqueakyFieldFieldType_withId_(CoTouchlabSqueakyDaoModelDao *self, AndroidContentContentValues *values, CoTouchlabSqueakyFieldFieldType *fieldType, id val);

__attribute__((unused)) static id<CoTouchlabSqueakyDbSQLiteStatement> CoTouchlabSqueakyDaoModelDao_makeUpdateStatement(CoTouchlabSqueakyDaoModelDao *self);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(CoTouchlabSqueakyDaoModelDao *self);

@interface CoTouchlabSqueakyDaoModelDao_1 : JavaLangThreadLocal {
 @public
  CoTouchlabSqueakyDaoModelDao *this$0_;
}

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$;

- (id<CoTouchlabSqueakyDbSQLiteStatement>)initialValue OBJC_METHOD_FAMILY_NONE;

- (id<CoTouchlabSqueakyDbSQLiteStatement>)get;

- (id<CoTouchlabSqueakyDbSQLiteStatement>)childValueWithId:(id<CoTouchlabSqueakyDbSQLiteStatement>)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoModelDao_1)

__attribute__((unused)) static void CoTouchlabSqueakyDaoModelDao_1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_1 *self, CoTouchlabSqueakyDaoModelDao *outer$);

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_1 *new_CoTouchlabSqueakyDaoModelDao_1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_1 *create_CoTouchlabSqueakyDaoModelDao_1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$);

@interface CoTouchlabSqueakyDaoModelDao_2 : JavaLangThreadLocal {
 @public
  CoTouchlabSqueakyDaoModelDao *this$0_;
}

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$;

- (id<CoTouchlabSqueakyDbSQLiteStatement>)initialValue OBJC_METHOD_FAMILY_NONE;

- (id<CoTouchlabSqueakyDbSQLiteStatement>)get;

- (id<CoTouchlabSqueakyDbSQLiteStatement>)childValueWithId:(id<CoTouchlabSqueakyDbSQLiteStatement>)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoModelDao_2)

__attribute__((unused)) static void CoTouchlabSqueakyDaoModelDao_2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_2 *self, CoTouchlabSqueakyDaoModelDao *outer$);

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_2 *new_CoTouchlabSqueakyDaoModelDao_2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_2 *create_CoTouchlabSqueakyDaoModelDao_2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$);

@interface CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl () {
 @public
  CoTouchlabSqueakyDaoModelDao *this$0_;
  NSString *from_;
  NSString *where_;
  IOSObjectArray *args_;
  NSString *orderBy_;
  JavaLangInteger *limit_;
  JavaLangInteger *offset_;
  IOSObjectArray *foreignRefreshMap_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, from_, NSString *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, where_, NSString *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, args_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, orderBy_, NSString *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, limit_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, offset_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, foreignRefreshMap_, IOSObjectArray *)

@interface CoTouchlabSqueakyDaoModelDao_3 : NSObject < CoTouchlabSqueakyDaoQuery > {
 @public
  CoTouchlabSqueakyDaoModelDao *this$0_;
  JavaLangStringBuilder *val$sb_;
}

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$
                           withJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0;

- (NSString *)getWhereStatementWithBoolean:(jboolean)joinsAllowed;

- (IOSObjectArray *)getParameters;

- (NSString *)getFromStatementWithBoolean:(jboolean)joinsAllowed;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoModelDao_3)

__attribute__((unused)) static void CoTouchlabSqueakyDaoModelDao_3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao_3 *self, CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0);

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_3 *new_CoTouchlabSqueakyDaoModelDao_3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_3 *create_CoTouchlabSqueakyDaoModelDao_3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0);

@interface CoTouchlabSqueakyDaoModelDao_4 : NSObject < CoTouchlabSqueakyDaoQuery > {
 @public
  CoTouchlabSqueakyDaoModelDao *this$0_;
}

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$;

- (NSString *)getFromStatementWithBoolean:(jboolean)joinsAllowed;

- (NSString *)getWhereStatementWithBoolean:(jboolean)joinsAllowed;

- (IOSObjectArray *)getParameters;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoModelDao_4)

__attribute__((unused)) static void CoTouchlabSqueakyDaoModelDao_4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_4 *self, CoTouchlabSqueakyDaoModelDao *outer$);

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_4 *new_CoTouchlabSqueakyDaoModelDao_4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_4 *create_CoTouchlabSqueakyDaoModelDao_4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$);

NSString *CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX = @"t";
NSString *CoTouchlabSqueakyDaoModelDao_EQ_OPERATION = @"= ?";

@implementation CoTouchlabSqueakyDaoModelDao

- (instancetype)initWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)openHelper
                                              withIOSClass:(IOSClass *)entityClass
            withCoTouchlabSqueakyTableGeneratedTableMapper:(id<CoTouchlabSqueakyTableGeneratedTableMapper>)generatedTableMapper {
  CoTouchlabSqueakyDaoModelDao_initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_(self, openHelper, entityClass, generatedTableMapper);
  return self;
}

- (void)cleanUp {
  for (id<CoTouchlabSqueakyDbSQLiteStatement> __strong sqLiteStatement in nil_chk(statementList_)) {
    [((id<CoTouchlabSqueakyDbSQLiteStatement>) nil_chk(sqLiteStatement)) close];
  }
}

- (IOSObjectArray *)buildSelect {
  return CoTouchlabSqueakyDaoModelDao_buildSelect(self);
}

- (id)queryForIdWithId:(id)id_ {
  id<JavaUtilList> tList = [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([self queryForEqWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(idFieldType_)) getColumnName] withId:id_])) list];
  return [((id<JavaUtilList>) nil_chk(tList)) size] == 0 ? nil : [tList getWithInt:0];
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)queryForAll {
  return create_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), nil, nil);
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)queryForEqWithNSString:(NSString *)fieldName
                                                              withId:(id)value {
  id<JavaUtilList> params = create_JavaUtilArrayList_init();
  IOSClass *dataClass = ((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig]))->dataClass_;
  CoTouchlabSqueakyFieldFieldType *fieldType = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) findFieldTypeWithIOSClass:dataClass withNSString:fieldName];
  CoTouchlabSqueakySqlSqlHelper_appendArgOrValueWithCoTouchlabSqueakyDaoSqueakyContext_withCoTouchlabSqueakyFieldFieldType_withJavaUtilList_withId_(squeakyContext_, fieldType, params, value);
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  CoTouchlabSqueakySqlSqlHelper_appendWhereClauseBodyWithJavaLangStringBuilder_withNSString_withNSString_withCoTouchlabSqueakyFieldFieldType_(sb, CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX, CoTouchlabSqueakyDaoModelDao_EQ_OPERATION, fieldType);
  return create_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), [sb description], [params toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[params size] type:NSString_class_()]]);
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)queryForFieldValuesWithJavaUtilMap:(id<JavaUtilMap>)fieldValues {
  JavaLangStringBuilder *query = create_JavaLangStringBuilder_init();
  id<JavaUtilList> params = create_JavaUtilArrayList_init();
  for (NSString * __strong field in nil_chk([((id<JavaUtilMap>) nil_chk(fieldValues)) keySet])) {
    if ([query java_length] > 0) [query appendWithNSString:@" and "];
    IOSClass *dataClass = ((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig]))->dataClass_;
    CoTouchlabSqueakyFieldFieldType *fieldType = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) findFieldTypeWithIOSClass:dataClass withNSString:field];
    CoTouchlabSqueakySqlSqlHelper_appendWhereClauseBodyWithJavaLangStringBuilder_withNSString_withNSString_withCoTouchlabSqueakyFieldFieldType_(query, CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX, CoTouchlabSqueakyDaoModelDao_EQ_OPERATION, fieldType);
    CoTouchlabSqueakySqlSqlHelper_appendArgOrValueWithCoTouchlabSqueakyDaoSqueakyContext_withCoTouchlabSqueakyFieldFieldType_withJavaUtilList_withId_(squeakyContext_, fieldType, params, [fieldValues getWithId:field]);
  }
  return create_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), [query description], [params toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[params size] type:NSString_class_()]]);
}

- (NSString *)createDefaultFrom {
  return CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self);
}

- (id<JavaUtilList>)makeCursorResultsWithNSString:(NSString *)from
                                     withNSString:(NSString *)where
                                withNSStringArray:(IOSObjectArray *)args
                                     withNSString:(NSString *)orderBy
                              withJavaLangInteger:(JavaLangInteger *)limit
                              withJavaLangInteger:(JavaLangInteger *)offset
  withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap {
  return CoTouchlabSqueakyDaoModelDao_makeCursorResultsWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, from, where, args, orderBy, limit, offset, foreignRefreshMap);
}

- (id<AndroidDatabaseCursor>)makeCursorWithNSString:(NSString *)from
                                       withNSString:(NSString *)where
                                  withNSStringArray:(IOSObjectArray *)args
                                       withNSString:(NSString *)orderBy
                                withJavaLangInteger:(JavaLangInteger *)limit
                                withJavaLangInteger:(JavaLangInteger *)offset {
  return CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(self, from, where, args, orderBy, limit, offset);
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)queryWithNSString:(NSString *)where
                                              withNSStringArray:(IOSObjectArray *)args {
  return create_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), where, args);
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)queryWithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where {
  return create_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, [((id<CoTouchlabSqueakyDaoQuery>) nil_chk(where)) getFromStatementWithBoolean:true], [where getWhereStatementWithBoolean:true], [where getParameters]);
}

- (void)createWithId:(id)data {
  id<CoTouchlabSqueakyDbSQLiteStatement> sqLiteStatement = [((JavaLangThreadLocal *) nil_chk(createStatement_)) get];
  [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) bindCreateValsWithCoTouchlabSqueakyDbSQLiteStatement:sqLiteStatement withId:data];
  @try {
    jlong newRowId = [((id<CoTouchlabSqueakyDbSQLiteStatement>) nil_chk(sqLiteStatement)) executeInsert];
    if (idFieldType_ != nil && [idFieldType_ isGeneratedId]) {
      [generatedTableMapper_ assignIdWithId:data withId:JavaLangLong_valueOfWithLong_(newRowId)];
    }
    [self notifyChanges];
  }
  @catch (AndroidDatabaseSqliteSQLiteException *e) {
    @throw create_JavaSqlSQLException_initWithNSString_withNSException_(@"create failed", e);
  }
}

- (id<CoTouchlabSqueakyDbSQLiteStatement>)makeCreateStatement {
  return CoTouchlabSqueakyDaoModelDao_makeCreateStatement(self);
}

- (void)fillContentValWithAndroidContentContentValues:(AndroidContentContentValues *)values
                  withCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)val {
  CoTouchlabSqueakyDaoModelDao_fillContentValWithAndroidContentContentValues_withCoTouchlabSqueakyFieldFieldType_withId_(self, values, fieldType, val);
}

- (id)createIfNotExistsWithId:(id)data {
  if (data == nil) {
    return nil;
  }
  id existing = [self queryForIdWithId:[((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) extractIdWithId:data]];
  if (existing == nil) {
    [self createWithId:data];
    return data;
  }
  else {
    return existing;
  }
}

- (void)createOrUpdateWithId:(id)data {
  id id_ = [self extractIdWithId:data];
  if (id_ == nil || ![self idExistsWithId:id_]) {
    [self createWithId:data];
  }
  else {
    [self updateWithId:data];
  }
}

- (void)updateWithId:(id)data {
  id<CoTouchlabSqueakyDbSQLiteStatement> us = [((JavaLangThreadLocal *) nil_chk(updateStatement_)) get];
  [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) bindValsWithCoTouchlabSqueakyDbSQLiteStatement:us withId:data];
  [((id<CoTouchlabSqueakyDbSQLiteStatement>) nil_chk(us)) executeUpdateDelete];
  [self notifyChanges];
}

- (id<CoTouchlabSqueakyDbSQLiteStatement>)makeUpdateStatement {
  return CoTouchlabSqueakyDaoModelDao_makeUpdateStatement(self);
}

- (jint)updateIdWithId:(id)data
                withId:(id)newId {
  id<CoTouchlabSqueakyDbSQLiteDatabase> db = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase];
  AndroidContentContentValues *values = create_AndroidContentContentValues_init();
  CoTouchlabSqueakyDaoModelDao_fillContentValWithAndroidContentContentValues_withCoTouchlabSqueakyFieldFieldType_withId_(self, values, idFieldType_, newId);
  jint result = [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk(db)) updateWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig])) getTableName] withAndroidContentContentValues:values withNSString:JreStrcat("$$", [((CoTouchlabSqueakyFieldFieldType *) nil_chk(idFieldType_)) getColumnName], @" = ?") withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [nil_chk([generatedTableMapper_ extractIdWithId:data]) description] } count:1 type:NSString_class_()]];
  [self notifyChanges];
  return result;
}

- (jint)updateWithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where
                            withJavaUtilMap:(id<JavaUtilMap>)valueMap {
  id<CoTouchlabSqueakyDbSQLiteDatabase> db = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase];
  AndroidContentContentValues *values = create_AndroidContentContentValues_init();
  for (NSString * __strong fieldKey in nil_chk([((id<JavaUtilMap>) nil_chk(valueMap)) keySet])) {
    CoTouchlabSqueakyFieldFieldType *fieldType = [squeakyContext_ findFieldTypeWithIOSClass:((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig]))->dataClass_ withNSString:fieldKey];
    CoTouchlabSqueakyDaoModelDao_fillContentValWithAndroidContentContentValues_withCoTouchlabSqueakyFieldFieldType_withId_(self, values, fieldType, CoTouchlabSqueakySqlSqlHelper_pullArgOrValueWithCoTouchlabSqueakyDaoSqueakyContext_withCoTouchlabSqueakyFieldFieldType_withId_(squeakyContext_, fieldType, [valueMap getWithId:fieldKey]));
  }
  jint result = [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk(db)) updateWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig])) getTableName] withAndroidContentContentValues:values withNSString:[((id<CoTouchlabSqueakyDaoQuery>) nil_chk(where)) getWhereStatementWithBoolean:false] withNSStringArray:[where getParameters]];
  [self notifyChanges];
  return result;
}

- (void)refreshWithId:(id)data {
  [self refreshWithId:data withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(self)];
}

- (void)refreshWithId:(id)data
withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap {
  id<AndroidDatabaseCursor> cursor = CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), JreStrcat("$$", [((CoTouchlabSqueakyFieldFieldType *) nil_chk(idFieldType_)) getColumnName], @" = ?"), [IOSObjectArray arrayWithObjects:(id[]){ [nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) extractIdWithId:data]) description] } count:1 type:NSString_class_()], nil, nil, nil);
  @try {
    if ([((id<AndroidDatabaseCursor>) nil_chk(cursor)) moveToFirst]) {
      do {
        [generatedTableMapper_ fillRowWithId:data withAndroidDatabaseCursor:cursor withCoTouchlabSqueakyDaoModelDao:self withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:foreignRefreshMap withCoTouchlabSqueakyTableTransientCache:nil];
      }
      while ([cursor moveToNext]);
    }
  }
  @finally {
    [cursor close];
  }
}

- (jint)delete__WithId:(id)data {
  return data == nil ? 0 : [self deleteByIdWithId:[((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) extractIdWithId:data]];
}

- (jint)deleteByIdWithId:(id)id_ {
  jint result = [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase])) delete__WithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig])) getTableName] withNSString:JreStrcat("$$", [((CoTouchlabSqueakyFieldFieldType *) nil_chk(idFieldType_)) getColumnName], @"= ?") withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ [nil_chk(id_) description] } count:1 type:NSString_class_()]];
  [self notifyChanges];
  return result;
}

- (jint)delete__WithJavaUtilCollection:(id<JavaUtilCollection>)datas {
  id<JavaUtilList> ids = create_JavaUtilArrayList_initWithInt_([((id<JavaUtilCollection>) nil_chk(datas)) size]);
  for (id __strong data in datas) {
    [ids addWithId:[((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) extractIdWithId:data]];
  }
  return [self deleteIdsWithJavaUtilCollection:ids];
}

- (jint)deleteIdsWithJavaUtilCollection:(id<JavaUtilCollection>)ids {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(idFieldType_)) getColumnName]])) appendWithNSString:@" in ("];
  jboolean first = true;
  for (id __strong id_ in nil_chk(ids)) {
    if (first) first = false;
    else [sb appendWithChar:','];
    if ([idFieldType_ isEscapedValue]) CoTouchlabSqueakyTableTableUtils_appendEscapedWordWithJavaLangStringBuilder_withNSString_(sb, [nil_chk(id_) description]);
    else [sb appendWithNSString:[nil_chk(id_) description]];
  }
  [sb appendWithNSString:@")"];
  return [self delete__WithCoTouchlabSqueakyDaoQuery:create_CoTouchlabSqueakyDaoModelDao_3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(self, sb)];
}

- (jint)delete__WithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where {
  jlong result = [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase])) delete__WithNSString:[((id<CoTouchlabSqueakyDaoQuery>) nil_chk(where)) getFromStatementWithBoolean:false] withNSString:[where getWhereStatementWithBoolean:false] withNSStringArray:[where getParameters]];
  [self notifyChanges];
  return (jint) result;
}

- (id<CoTouchlabSqueakyDaoCloseableIterator>)iterator {
  return create_CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), nil, nil, nil, nil, nil), self, CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(self));
}

- (IOSObjectArray *)generateDefaultForeignRefreshMap {
  return CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(self);
}

- (id<CoTouchlabSqueakyDaoCloseableIterator>)iteratorWithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where {
  return create_CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(self, [((id<CoTouchlabSqueakyDaoQuery>) nil_chk(where)) getFromStatementWithBoolean:true], [where getWhereStatementWithBoolean:true], [where getParameters], nil, nil, nil), self, CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(self));
}

- (jlong)queryRawValueWithNSString:(NSString *)query
                 withNSStringArray:(IOSObjectArray *)arguments {
  return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase])) longForQueryWithNSString:query withNSStringArray:arguments];
}

- (NSString *)objectToStringWithId:(id)data {
  return [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) objectToStringWithId:data];
}

- (jboolean)objectsEqualWithId:(id)data1
                        withId:(id)data2 {
  return [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) objectsEqualWithId:data1 withId:data2];
}

- (id)extractIdWithId:(id)data {
  return [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) extractIdWithId:data];
}

- (void)fillForeignCollectionWithId:(id)data
                       withNSString:(NSString *)fieldName {
  [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) fillForeignCollectionWithId:data withCoTouchlabSqueakyDaoModelDao:self withNSString:fieldName];
}

- (IOSClass *)getDataClass {
  return entityClass_;
}

- (jboolean)isUpdatable {
  return true;
}

- (jlong)countOf {
  return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase])) countOfWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig])) getTableName]];
}

- (jlong)countOfWithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where {
  return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase])) countOfWithCoTouchlabSqueakyDaoQuery:where];
}

- (jboolean)idExistsWithId:(id)id_ {
  return [self queryForIdWithId:id_] != nil;
}

- (void)registerObserverWithCoTouchlabSqueakyDaoDao_DaoObserver:(id<CoTouchlabSqueakyDaoDao_DaoObserver>)observer {
  [((id<JavaUtilSet>) nil_chk(daoObserverSet_)) addWithId:observer];
}

- (void)unregisterObserverWithCoTouchlabSqueakyDaoDao_DaoObserver:(id<CoTouchlabSqueakyDaoDao_DaoObserver>)observer {
  [((id<JavaUtilSet>) nil_chk(daoObserverSet_)) removeWithId:observer];
}

- (void)notifyChanges {
  for (id<CoTouchlabSqueakyDaoDao_DaoObserver> __strong next in nil_chk(daoObserverSet_)) {
    [((id<CoTouchlabSqueakyDaoDao_DaoObserver>) nil_chk(next)) onChange];
  }
}

- (id<CoTouchlabSqueakyDaoQuery>)all {
  return create_CoTouchlabSqueakyDaoModelDao_4_initWithCoTouchlabSqueakyDaoModelDao_(self);
}

- (id<CoTouchlabSqueakyTableGeneratedTableMapper>)getGeneratedTableMapper {
  return generatedTableMapper_;
}

- (CoTouchlabSqueakyDaoSqueakyContext *)getOpenHelper {
  return squeakyContext_;
}

- (CoTouchlabSqueakyFieldForeignCollectionInfo *)findForeignCollectionInfoWithNSString:(NSString *)name {
  {
    IOSObjectArray *a__ = [((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig])) getForeignCollections];
    CoTouchlabSqueakyFieldForeignCollectionInfo * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    CoTouchlabSqueakyFieldForeignCollectionInfo * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      CoTouchlabSqueakyFieldForeignCollectionInfo *foreignCollectionInfo = *b__++;
      if ([((NSString *) nil_chk(name)) isEqual:((CoTouchlabSqueakyFieldForeignCollectionInfo *) nil_chk(foreignCollectionInfo))->variableName_]) return foreignCollectionInfo;
    }
  }
  @throw create_JavaSqlSQLException_initWithNSString_(@"Couldn't find foreign collection children");
}

- (void)dealloc {
  RELEASE_(entityClass_);
  RELEASE_(generatedTableMapper_);
  RELEASE_(daoObserverSet_);
  RELEASE_(tableCols_);
  RELEASE_(squeakyContext_);
  RELEASE_(idFieldType_);
  RELEASE_(statementList_);
  RELEASE_(createStatement_);
  RELEASE_(updateStatement_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x2, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, 2, 5, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao_QueryModifiers;", 0x1, -1, -1, 2, 6, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao_QueryModifiers;", 0x1, 7, 8, 2, 9, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao_QueryModifiers;", 0x1, 10, 11, 2, 12, -1, -1 },
    { NULL, "LNSString;", 0x2, -1, -1, 2, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 13, 14, 2, 15, -1, -1 },
    { NULL, "LAndroidDatabaseCursor;", 0x2, 16, 17, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao_QueryModifiers;", 0x1, 18, 19, 2, 20, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao_QueryModifiers;", 0x1, 18, 21, 2, 22, -1, -1 },
    { NULL, "V", 0x1, 23, 4, 2, 24, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDbSQLiteStatement;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 25, 26, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 27, 4, 2, 28, -1, -1 },
    { NULL, "V", 0x1, 29, 4, 2, 24, -1, -1 },
    { NULL, "V", 0x1, 30, 4, 2, 24, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDbSQLiteStatement;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 31, 32, 2, 33, -1, -1 },
    { NULL, "I", 0x1, 30, 34, 2, 35, -1, -1 },
    { NULL, "V", 0x1, 36, 4, 2, 24, -1, -1 },
    { NULL, "V", 0x1, 36, 37, 2, 38, -1, -1 },
    { NULL, "I", 0x1, 39, 4, 2, 40, -1, -1 },
    { NULL, "I", 0x1, 41, 4, 2, -1, -1, -1 },
    { NULL, "I", 0x1, 39, 42, 2, 43, -1, -1 },
    { NULL, "I", 0x1, 44, 42, 2, 45, -1, -1 },
    { NULL, "I", 0x1, 39, 21, 2, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoCloseableIterator;", 0x1, -1, -1, 2, 46, -1, -1 },
    { NULL, "[LCoTouchlabSqueakyDaoDao_ForeignRefresh;", 0x2, -1, -1, 2, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoCloseableIterator;", 0x1, 47, 21, 2, 48, -1, -1 },
    { NULL, "J", 0x81, 49, 19, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 50, 4, 2, 51, -1, -1 },
    { NULL, "Z", 0x1, 52, 32, 2, 53, -1, -1 },
    { NULL, "LNSObject;", 0x1, 54, 4, 2, 55, -1, -1 },
    { NULL, "V", 0x1, 56, 57, 2, 58, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 59, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "J", 0x1, 60, 21, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, 61, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 62, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 64, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyTableGeneratedTableMapper;", 0x1, -1, -1, -1, 65, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoSqueakyContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyFieldForeignCollectionInfo;", 0x1, 66, 67, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabSqueakyDaoSqueakyContext:withIOSClass:withCoTouchlabSqueakyTableGeneratedTableMapper:);
  methods[1].selector = @selector(cleanUp);
  methods[2].selector = @selector(buildSelect);
  methods[3].selector = @selector(queryForIdWithId:);
  methods[4].selector = @selector(queryForAll);
  methods[5].selector = @selector(queryForEqWithNSString:withId:);
  methods[6].selector = @selector(queryForFieldValuesWithJavaUtilMap:);
  methods[7].selector = @selector(createDefaultFrom);
  methods[8].selector = @selector(makeCursorResultsWithNSString:withNSString:withNSStringArray:withNSString:withJavaLangInteger:withJavaLangInteger:withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:);
  methods[9].selector = @selector(makeCursorWithNSString:withNSString:withNSStringArray:withNSString:withJavaLangInteger:withJavaLangInteger:);
  methods[10].selector = @selector(queryWithNSString:withNSStringArray:);
  methods[11].selector = @selector(queryWithCoTouchlabSqueakyDaoQuery:);
  methods[12].selector = @selector(createWithId:);
  methods[13].selector = @selector(makeCreateStatement);
  methods[14].selector = @selector(fillContentValWithAndroidContentContentValues:withCoTouchlabSqueakyFieldFieldType:withId:);
  methods[15].selector = @selector(createIfNotExistsWithId:);
  methods[16].selector = @selector(createOrUpdateWithId:);
  methods[17].selector = @selector(updateWithId:);
  methods[18].selector = @selector(makeUpdateStatement);
  methods[19].selector = @selector(updateIdWithId:withId:);
  methods[20].selector = @selector(updateWithCoTouchlabSqueakyDaoQuery:withJavaUtilMap:);
  methods[21].selector = @selector(refreshWithId:);
  methods[22].selector = @selector(refreshWithId:withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:);
  methods[23].selector = @selector(delete__WithId:);
  methods[24].selector = @selector(deleteByIdWithId:);
  methods[25].selector = @selector(delete__WithJavaUtilCollection:);
  methods[26].selector = @selector(deleteIdsWithJavaUtilCollection:);
  methods[27].selector = @selector(delete__WithCoTouchlabSqueakyDaoQuery:);
  methods[28].selector = @selector(iterator);
  methods[29].selector = @selector(generateDefaultForeignRefreshMap);
  methods[30].selector = @selector(iteratorWithCoTouchlabSqueakyDaoQuery:);
  methods[31].selector = @selector(queryRawValueWithNSString:withNSStringArray:);
  methods[32].selector = @selector(objectToStringWithId:);
  methods[33].selector = @selector(objectsEqualWithId:withId:);
  methods[34].selector = @selector(extractIdWithId:);
  methods[35].selector = @selector(fillForeignCollectionWithId:withNSString:);
  methods[36].selector = @selector(getDataClass);
  methods[37].selector = @selector(isUpdatable);
  methods[38].selector = @selector(countOf);
  methods[39].selector = @selector(countOfWithCoTouchlabSqueakyDaoQuery:);
  methods[40].selector = @selector(idExistsWithId:);
  methods[41].selector = @selector(registerObserverWithCoTouchlabSqueakyDaoDao_DaoObserver:);
  methods[42].selector = @selector(unregisterObserverWithCoTouchlabSqueakyDaoDao_DaoObserver:);
  methods[43].selector = @selector(notifyChanges);
  methods[44].selector = @selector(all);
  methods[45].selector = @selector(getGeneratedTableMapper);
  methods[46].selector = @selector(getOpenHelper);
  methods[47].selector = @selector(findForeignCollectionInfoWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_TABLE_PREFIX", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 68, -1, -1 },
    { "EQ_OPERATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 69, -1, -1 },
    { "entityClass_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 70, -1 },
    { "generatedTableMapper_", "LCoTouchlabSqueakyTableGeneratedTableMapper;", .constantValue.asLong = 0, 0x12, -1, -1, 71, -1 },
    { "daoObserverSet_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 72, -1 },
    { "tableCols_", "[LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "squeakyContext_", "LCoTouchlabSqueakyDaoSqueakyContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "idFieldType_", "LCoTouchlabSqueakyFieldFieldType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "statementList_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 73, -1 },
    { "createStatement_", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x2, -1, -1, 74, -1 },
    { "updateStatement_", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x2, -1, -1, 74, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabSqueakyDaoSqueakyContext;LIOSClass;LCoTouchlabSqueakyTableGeneratedTableMapper;", "(Lco/touchlab/squeaky/dao/SqueakyContext;Ljava/lang/Class<TT;>;Lco/touchlab/squeaky/table/GeneratedTableMapper<TT;>;)V", "LJavaSqlSQLException;", "queryForId", "LNSObject;", "(Ljava/lang/Object;)TT;", "()Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;", "queryForEq", "LNSString;LNSObject;", "(Ljava/lang/String;Ljava/lang/Object;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;", "queryForFieldValues", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;", "makeCursorResults", "LNSString;LNSString;[LNSString;LNSString;LJavaLangInteger;LJavaLangInteger;[LCoTouchlabSqueakyDaoDao_ForeignRefresh;", "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;[Lco/touchlab/squeaky/dao/Dao$ForeignRefresh;)Ljava/util/List<TT;>;", "makeCursor", "LNSString;LNSString;[LNSString;LNSString;LJavaLangInteger;LJavaLangInteger;", "query", "LNSString;[LNSString;", "(Ljava/lang/String;[Ljava/lang/String;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;", "LCoTouchlabSqueakyDaoQuery;", "(Lco/touchlab/squeaky/dao/Query;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;", "create", "(TT;)V", "fillContentVal", "LAndroidContentContentValues;LCoTouchlabSqueakyFieldFieldType;LNSObject;", "createIfNotExists", "(TT;)TT;", "createOrUpdate", "update", "updateId", "LNSObject;LNSObject;", "(TT;Ljava/lang/Object;)I", "LCoTouchlabSqueakyDaoQuery;LJavaUtilMap;", "(Lco/touchlab/squeaky/dao/Query;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)I", "refresh", "LNSObject;[LCoTouchlabSqueakyDaoDao_ForeignRefresh;", "(TT;[Lco/touchlab/squeaky/dao/Dao$ForeignRefresh;)V", "delete", "(TT;)I", "deleteById", "LJavaUtilCollection;", "(Ljava/util/Collection<TT;>;)I", "deleteIds", "(Ljava/util/Collection<Ljava/lang/Object;>;)I", "()Lco/touchlab/squeaky/dao/CloseableIterator<TT;>;", "iterator", "(Lco/touchlab/squeaky/dao/Query;)Lco/touchlab/squeaky/dao/CloseableIterator<TT;>;", "queryRawValue", "objectToString", "(TT;)Ljava/lang/String;", "objectsEqual", "(TT;TT;)Z", "extractId", "(TT;)Ljava/lang/Object;", "fillForeignCollection", "LNSObject;LNSString;", "(TT;Ljava/lang/String;)V", "()Ljava/lang/Class<TT;>;", "countOf", "idExists", "registerObserver", "LCoTouchlabSqueakyDaoDao_DaoObserver;", "unregisterObserver", "()Lco/touchlab/squeaky/table/GeneratedTableMapper<TT;>;", "findForeignCollectionInfo", "LNSString;", &CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX, &CoTouchlabSqueakyDaoModelDao_EQ_OPERATION, "Ljava/lang/Class<TT;>;", "Lco/touchlab/squeaky/table/GeneratedTableMapper<TT;>;", "Ljava/util/Set<Lco/touchlab/squeaky/dao/Dao$DaoObserver;>;", "Ljava/util/List<Lco/touchlab/squeaky/db/SQLiteStatement;>;", "Ljava/lang/ThreadLocal<Lco/touchlab/squeaky/db/SQLiteStatement;>;", "LCoTouchlabSqueakyDaoModelDao_QueryModifiersImpl;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lco/touchlab/squeaky/dao/Dao<TT;>;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao = { "ModelDao", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0x1, 48, 11, -1, 75, -1, 76, -1 };
  return &_CoTouchlabSqueakyDaoModelDao;
}

@end

void CoTouchlabSqueakyDaoModelDao_initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_(CoTouchlabSqueakyDaoModelDao *self, CoTouchlabSqueakyDaoSqueakyContext *openHelper, IOSClass *entityClass, id<CoTouchlabSqueakyTableGeneratedTableMapper> generatedTableMapper) {
  NSObject_init(self);
  JreStrongAssign(&self->daoObserverSet_, JavaUtilCollections_newSetFromMapWithJavaUtilMap_(create_JavaUtilConcurrentConcurrentHashMap_init()));
  JreStrongAssign(&self->statementList_, JavaUtilCollections_synchronizedListWithJavaUtilList_(create_JavaUtilArrayList_init()));
  JreStrongAssignAndConsume(&self->createStatement_, new_CoTouchlabSqueakyDaoModelDao_1_initWithCoTouchlabSqueakyDaoModelDao_(self));
  JreStrongAssignAndConsume(&self->updateStatement_, new_CoTouchlabSqueakyDaoModelDao_2_initWithCoTouchlabSqueakyDaoModelDao_(self));
  JreStrongAssign(&self->squeakyContext_, openHelper);
  JreStrongAssign(&self->entityClass_, entityClass);
  @try {
    JreStrongAssign(&self->generatedTableMapper_, generatedTableMapper);
    CoTouchlabSqueakyFieldFieldType *idField = nil;
    IOSObjectArray *fieldTypes = [((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper)) getTableConfig])) getFieldTypes];
    {
      IOSObjectArray *a__ = fieldTypes;
      CoTouchlabSqueakyFieldFieldType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      CoTouchlabSqueakyFieldFieldType * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        CoTouchlabSqueakyFieldFieldType *fieldType = *b__++;
        if ([((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) isId] || [fieldType isGeneratedId]) {
          idField = fieldType;
          break;
        }
      }
    }
    JreStrongAssign(&self->idFieldType_, idField);
    JreStrongAssign(&self->tableCols_, CoTouchlabSqueakyDaoModelDao_buildSelect(self));
  }
  @catch (JavaLangException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

CoTouchlabSqueakyDaoModelDao *new_CoTouchlabSqueakyDaoModelDao_initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_(CoTouchlabSqueakyDaoSqueakyContext *openHelper, IOSClass *entityClass, id<CoTouchlabSqueakyTableGeneratedTableMapper> generatedTableMapper) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoModelDao, initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_, openHelper, entityClass, generatedTableMapper)
}

CoTouchlabSqueakyDaoModelDao *create_CoTouchlabSqueakyDaoModelDao_initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_(CoTouchlabSqueakyDaoSqueakyContext *openHelper, IOSClass *entityClass, id<CoTouchlabSqueakyTableGeneratedTableMapper> generatedTableMapper) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoModelDao, initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_, openHelper, entityClass, generatedTableMapper)
}

IOSObjectArray *CoTouchlabSqueakyDaoModelDao_buildSelect(CoTouchlabSqueakyDaoModelDao *self) {
  IOSObjectArray *fieldTypes = [((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) getTableConfig])) getFieldTypes];
  IOSObjectArray *selectList = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(fieldTypes))->size_ type:NSString_class_()];
  for (jint i = 0; i < fieldTypes->size_; i++) {
    IOSObjectArray_Set(selectList, i, JreStrcat("$C$", CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX, '.', [((CoTouchlabSqueakyFieldFieldType *) nil_chk(IOSObjectArray_Get(fieldTypes, i))) getColumnName]));
  }
  return selectList;
}

NSString *CoTouchlabSqueakyDaoModelDao_createDefaultFrom(CoTouchlabSqueakyDaoModelDao *self) {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) getTableConfig])) getTableName]];
  [sb appendWithChar:' '];
  [sb appendWithNSString:CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX];
  return [sb description];
}

id<JavaUtilList> CoTouchlabSqueakyDaoModelDao_makeCursorResultsWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyDaoModelDao *self, NSString *from, NSString *where, IOSObjectArray *args, NSString *orderBy, JavaLangInteger *limit, JavaLangInteger *offset, IOSObjectArray *foreignRefreshMap) {
  id<JavaUtilList> results = create_JavaUtilArrayList_init();
  CoTouchlabSqueakyTableTransientCache *objectCache = create_CoTouchlabSqueakyTableTransientCache_init();
  id<AndroidDatabaseCursor> cursor = CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(self, from, where, args, orderBy, limit, offset);
  @try {
    if ([((id<AndroidDatabaseCursor>) nil_chk(cursor)) moveToFirst]) {
      do {
        id object = [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) createObjectWithAndroidDatabaseCursor:cursor];
        [self->generatedTableMapper_ fillRowWithId:object withAndroidDatabaseCursor:cursor withCoTouchlabSqueakyDaoModelDao:self withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:foreignRefreshMap withCoTouchlabSqueakyTableTransientCache:objectCache];
        [results addWithId:object];
      }
      while ([cursor moveToNext]);
    }
  }
  @finally {
    [cursor close];
  }
  return results;
}

id<AndroidDatabaseCursor> CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(CoTouchlabSqueakyDaoModelDao *self, NSString *from, NSString *where, IOSObjectArray *args, NSString *orderBy, JavaLangInteger *limit, JavaLangInteger *offset) {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"select "])) appendWithNSString:AndroidTextTextUtils_joinWithJavaLangCharSequence_withNSObjectArray_(@",", self->tableCols_)])) appendWithNSString:@" from "])) appendWithNSString:from];
  if (!AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(where)) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" where "])) appendWithNSString:where];
  if (!AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(orderBy)) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" order by "])) appendWithNSString:orderBy];
  if (limit != nil) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" limit "])) appendWithId:limit];
  if (offset != nil) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" offset "])) appendWithId:offset];
  NSString *sql = [sb description];
  return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(self->squeakyContext_)) getDatabase])) rawQueryWithNSString:sql withNSStringArray:args];
}

id<CoTouchlabSqueakyDbSQLiteStatement> CoTouchlabSqueakyDaoModelDao_makeCreateStatement(CoTouchlabSqueakyDaoModelDao *self) {
  @try {
    id<CoTouchlabSqueakyDbSQLiteDatabase> db = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(self->squeakyContext_)) getDatabase];
    CoTouchlabSqueakyTableTableInfo *tableConfig = [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) getTableConfig];
    JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
    [sb appendWithNSString:@"insert into "];
    [sb appendWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk(tableConfig)) getTableName]];
    [sb appendWithNSString:@"("];
    jboolean first = true;
    JavaLangStringBuilder *args = create_JavaLangStringBuilder_init();
    {
      IOSObjectArray *a__ = [((CoTouchlabSqueakyTableTableInfo *) nil_chk([self->generatedTableMapper_ getTableConfig])) getFieldTypes];
      CoTouchlabSqueakyFieldFieldType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      CoTouchlabSqueakyFieldFieldType * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        CoTouchlabSqueakyFieldFieldType *fieldType = *b__++;
        if (![((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) isGeneratedId]) {
          if (!first) {
            [sb appendWithNSString:@","];
            [args appendWithNSString:@","];
          }
          [sb appendWithNSString:[fieldType getColumnName]];
          [args appendWithNSString:@"?"];
          first = false;
        }
      }
    }
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@")values("])) appendWithNSString:[args description]])) appendWithNSString:@")"];
    return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk(db)) compileStatementWithNSString:[sb description]];
  }
  @catch (JavaSqlSQLException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void CoTouchlabSqueakyDaoModelDao_fillContentValWithAndroidContentContentValues_withCoTouchlabSqueakyFieldFieldType_withId_(CoTouchlabSqueakyDaoModelDao *self, AndroidContentContentValues *values, CoTouchlabSqueakyFieldFieldType *fieldType, id val) {
  if ([val isKindOfClass:[NSString class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withNSString:(NSString *) cast_chk(val, [NSString class])];
  else if ([val isKindOfClass:[JavaLangInteger class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangInteger:(JavaLangInteger *) cast_chk(val, [JavaLangInteger class])];
  else if ([val isKindOfClass:[JavaLangLong class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangLong:(JavaLangLong *) cast_chk(val, [JavaLangLong class])];
  else if ([val isKindOfClass:[JavaLangByte class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangByte:(JavaLangByte *) cast_chk(val, [JavaLangByte class])];
  else if ([val isKindOfClass:[JavaLangShort class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangShort:(JavaLangShort *) cast_chk(val, [JavaLangShort class])];
  else if ([val isKindOfClass:[JavaLangFloat class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangFloat:(JavaLangFloat *) cast_chk(val, [JavaLangFloat class])];
  else if ([val isKindOfClass:[JavaLangDouble class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangDouble:(JavaLangDouble *) cast_chk(val, [JavaLangDouble class])];
  else if ([val isKindOfClass:[JavaLangBoolean class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangBoolean:(JavaLangBoolean *) cast_chk(val, [JavaLangBoolean class])];
  else if ([val isKindOfClass:[IOSByteArray class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withByteArray:(IOSByteArray *) cast_chk(val, [IOSByteArray class])];
  else @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Don't recognize type for: ", val));
}

id<CoTouchlabSqueakyDbSQLiteStatement> CoTouchlabSqueakyDaoModelDao_makeUpdateStatement(CoTouchlabSqueakyDaoModelDao *self) {
  @try {
    id<CoTouchlabSqueakyDbSQLiteDatabase> db = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(self->squeakyContext_)) getDatabase];
    CoTouchlabSqueakyTableTableInfo *tableConfig = [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) getTableConfig];
    JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"update "])) appendWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk(tableConfig)) getTableName]])) appendWithNSString:@" set "];
    jboolean first = true;
    {
      IOSObjectArray *a__ = [((CoTouchlabSqueakyTableTableInfo *) nil_chk([self->generatedTableMapper_ getTableConfig])) getFieldTypes];
      CoTouchlabSqueakyFieldFieldType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      CoTouchlabSqueakyFieldFieldType * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        CoTouchlabSqueakyFieldFieldType *fieldType = *b__++;
        if (![((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) isGeneratedId] && ![fieldType isId]) {
          if (!first) {
            [sb appendWithNSString:@","];
          }
          [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:[fieldType getColumnName]])) appendWithNSString:@" = ?"];
          first = false;
        }
      }
    }
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" where "])) appendWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(((CoTouchlabSqueakyTableTableInfo *) nil_chk([self->generatedTableMapper_ getTableConfig]))->idField_)) getColumnName]])) appendWithNSString:@" = ?"];
    return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk(db)) compileStatementWithNSString:[sb description]];
  }
  @catch (JavaSqlSQLException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

IOSObjectArray *CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(CoTouchlabSqueakyDaoModelDao *self) {
  return CoTouchlabSqueakyDaoDaoHelper_fillForeignRefreshMapWithCoTouchlabSqueakyDaoSqueakyContext_withCoTouchlabSqueakyFieldFieldTypeArray_withInt_(self->squeakyContext_, [((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) getTableConfig])) getFieldTypes], CoTouchlabSqueakyConfig_MAX_AUTO_REFRESH);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoModelDao)

@implementation CoTouchlabSqueakyDaoModelDao_1

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$ {
  CoTouchlabSqueakyDaoModelDao_1_initWithCoTouchlabSqueakyDaoModelDao_(self, outer$);
  return self;
}

- (id<CoTouchlabSqueakyDbSQLiteStatement>)initialValue {
  id<CoTouchlabSqueakyDbSQLiteStatement> sqLiteStatement = CoTouchlabSqueakyDaoModelDao_makeCreateStatement(this$0_);
  [((id<JavaUtilList>) nil_chk(this$0_->statementList_)) addWithId:sqLiteStatement];
  return sqLiteStatement;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDbSQLiteStatement;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabSqueakyDaoModelDao:);
  methods[1].selector = @selector(initialValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabSqueakyDaoModelDao;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Lco/touchlab/squeaky/dao/ModelDao<TT;>;", "LCoTouchlabSqueakyDaoModelDao;", "Ljava/lang/ThreadLocal<Lco/touchlab/squeaky/db/SQLiteStatement;>;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao_1 = { "", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, -1, 2, -1 };
  return &_CoTouchlabSqueakyDaoModelDao_1;
}

@end

void CoTouchlabSqueakyDaoModelDao_1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_1 *self, CoTouchlabSqueakyDaoModelDao *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaLangThreadLocal_init(self);
}

CoTouchlabSqueakyDaoModelDao_1 *new_CoTouchlabSqueakyDaoModelDao_1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoModelDao_1, initWithCoTouchlabSqueakyDaoModelDao_, outer$)
}

CoTouchlabSqueakyDaoModelDao_1 *create_CoTouchlabSqueakyDaoModelDao_1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoModelDao_1, initWithCoTouchlabSqueakyDaoModelDao_, outer$)
}

@implementation CoTouchlabSqueakyDaoModelDao_2

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$ {
  CoTouchlabSqueakyDaoModelDao_2_initWithCoTouchlabSqueakyDaoModelDao_(self, outer$);
  return self;
}

- (id<CoTouchlabSqueakyDbSQLiteStatement>)initialValue {
  id<CoTouchlabSqueakyDbSQLiteStatement> sqLiteStatement = CoTouchlabSqueakyDaoModelDao_makeUpdateStatement(this$0_);
  [((id<JavaUtilList>) nil_chk(this$0_->statementList_)) addWithId:sqLiteStatement];
  return sqLiteStatement;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDbSQLiteStatement;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabSqueakyDaoModelDao:);
  methods[1].selector = @selector(initialValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabSqueakyDaoModelDao;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Lco/touchlab/squeaky/dao/ModelDao<TT;>;", "LCoTouchlabSqueakyDaoModelDao;", "Ljava/lang/ThreadLocal<Lco/touchlab/squeaky/db/SQLiteStatement;>;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao_2 = { "", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, -1, 2, -1 };
  return &_CoTouchlabSqueakyDaoModelDao_2;
}

@end

void CoTouchlabSqueakyDaoModelDao_2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_2 *self, CoTouchlabSqueakyDaoModelDao *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaLangThreadLocal_init(self);
}

CoTouchlabSqueakyDaoModelDao_2 *new_CoTouchlabSqueakyDaoModelDao_2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoModelDao_2, initWithCoTouchlabSqueakyDaoModelDao_, outer$)
}

CoTouchlabSqueakyDaoModelDao_2 *create_CoTouchlabSqueakyDaoModelDao_2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoModelDao_2, initWithCoTouchlabSqueakyDaoModelDao_, outer$)
}

@implementation CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$
                                        withNSString:(NSString *)from
                                        withNSString:(NSString *)where
                                   withNSStringArray:(IOSObjectArray *)args {
  CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, outer$, from, where, args);
  return self;
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)orderByWithNSString:(NSString *)s {
  JreStrongAssign(&orderBy_, s);
  return self;
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)limitWithJavaLangInteger:(JavaLangInteger *)i {
  JreStrongAssign(&limit_, i);
  return self;
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)offsetWithJavaLangInteger:(JavaLangInteger *)i {
  JreStrongAssign(&offset_, i);
  return self;
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)foreignRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap {
  JreStrongAssign(&self->foreignRefreshMap_, foreignRefreshMap);
  return self;
}

- (id<JavaUtilList>)list {
  return CoTouchlabSqueakyDaoModelDao_makeCursorResultsWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(this$0_, from_, where_, args_, orderBy_, limit_, offset_, foreignRefreshMap_ == nil ? CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(this$0_) : foreignRefreshMap_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(from_);
  RELEASE_(where_);
  RELEASE_(args_);
  RELEASE_(orderBy_);
  RELEASE_(limit_);
  RELEASE_(offset_);
  RELEASE_(foreignRefreshMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao_QueryModifiers;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao_QueryModifiers;", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao_QueryModifiers;", 0x1, 7, 5, -1, 6, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao_QueryModifiers;", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, 11, 12, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabSqueakyDaoModelDao:withNSString:withNSString:withNSStringArray:);
  methods[1].selector = @selector(orderByWithNSString:);
  methods[2].selector = @selector(limitWithJavaLangInteger:);
  methods[3].selector = @selector(offsetWithJavaLangInteger:);
  methods[4].selector = @selector(foreignRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray:);
  methods[5].selector = @selector(list);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabSqueakyDaoModelDao;", .constantValue.asLong = 0, 0x1012, -1, -1, 13, -1 },
    { "from_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "where_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "args_", "[LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "orderBy_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "limit_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "offset_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "foreignRefreshMap_", "[LCoTouchlabSqueakyDaoDao_ForeignRefresh;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;[LNSString;", "orderBy", "LNSString;", "(Ljava/lang/String;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;", "limit", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;", "offset", "foreignRefreshMap", "[LCoTouchlabSqueakyDaoDao_ForeignRefresh;", "([Lco/touchlab/squeaky/dao/Dao$ForeignRefresh;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;", "LJavaSqlSQLException;", "()Ljava/util/List<TT;>;", "Lco/touchlab/squeaky/dao/ModelDao<TT;>;", "LCoTouchlabSqueakyDaoModelDao;", "Ljava/lang/Object;Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl = { "QueryModifiersImpl", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0x0, 6, 8, 14, -1, -1, 15, -1 };
  return &_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl;
}

@end

void CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl *self, CoTouchlabSqueakyDaoModelDao *outer$, NSString *from, NSString *where, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->from_, from);
  JreStrongAssign(&self->where_, where);
  JreStrongAssign(&self->args_, args);
}

CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl *new_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(CoTouchlabSqueakyDaoModelDao *outer$, NSString *from, NSString *where, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_, outer$, from, where, args)
}

CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl *create_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(CoTouchlabSqueakyDaoModelDao *outer$, NSString *from, NSString *where, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_, outer$, from, where, args)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl)

@implementation CoTouchlabSqueakyDaoModelDao_3

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$
                           withJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0 {
  CoTouchlabSqueakyDaoModelDao_3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(self, outer$, capture$0);
  return self;
}

- (NSString *)getWhereStatementWithBoolean:(jboolean)joinsAllowed {
  return [((JavaLangStringBuilder *) nil_chk(val$sb_)) description];
}

- (IOSObjectArray *)getParameters {
  return nil;
}

- (NSString *)getFromStatementWithBoolean:(jboolean)joinsAllowed {
  return [((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(this$0_->generatedTableMapper_)) getTableConfig])) getTableName];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$sb_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabSqueakyDaoModelDao:withJavaLangStringBuilder:);
  methods[1].selector = @selector(getWhereStatementWithBoolean:);
  methods[2].selector = @selector(getParameters);
  methods[3].selector = @selector(getFromStatementWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabSqueakyDaoModelDao;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$sb_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getWhereStatement", "Z", "LJavaSqlSQLException;", "getFromStatement", "Lco/touchlab/squeaky/dao/ModelDao<TT;>;", "LCoTouchlabSqueakyDaoModelDao;", "deleteIdsWithJavaUtilCollection:" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao_3 = { "", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0x8018, 4, 2, 5, -1, 6, -1, -1 };
  return &_CoTouchlabSqueakyDaoModelDao_3;
}

@end

void CoTouchlabSqueakyDaoModelDao_3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao_3 *self, CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$sb_, capture$0);
  NSObject_init(self);
}

CoTouchlabSqueakyDaoModelDao_3 *new_CoTouchlabSqueakyDaoModelDao_3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoModelDao_3, initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_, outer$, capture$0)
}

CoTouchlabSqueakyDaoModelDao_3 *create_CoTouchlabSqueakyDaoModelDao_3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoModelDao_3, initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_, outer$, capture$0)
}

@implementation CoTouchlabSqueakyDaoModelDao_4

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$ {
  CoTouchlabSqueakyDaoModelDao_4_initWithCoTouchlabSqueakyDaoModelDao_(self, outer$);
  return self;
}

- (NSString *)getFromStatementWithBoolean:(jboolean)joinsAllowed {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(this$0_->generatedTableMapper_)) getTableConfig])) getTableName]];
  if (joinsAllowed) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" "])) appendWithNSString:CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX];
  return [sb description];
}

- (NSString *)getWhereStatementWithBoolean:(jboolean)joinsAllowed {
  return nil;
}

- (IOSObjectArray *)getParameters {
  return nil;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 1, 2, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabSqueakyDaoModelDao:);
  methods[1].selector = @selector(getFromStatementWithBoolean:);
  methods[2].selector = @selector(getWhereStatementWithBoolean:);
  methods[3].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabSqueakyDaoModelDao;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "getFromStatement", "Z", "LJavaSqlSQLException;", "getWhereStatement", "Lco/touchlab/squeaky/dao/ModelDao<TT;>;", "LCoTouchlabSqueakyDaoModelDao;", "all" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao_4 = { "", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0x8018, 4, 1, 5, -1, 6, -1, -1 };
  return &_CoTouchlabSqueakyDaoModelDao_4;
}

@end

void CoTouchlabSqueakyDaoModelDao_4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_4 *self, CoTouchlabSqueakyDaoModelDao *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CoTouchlabSqueakyDaoModelDao_4 *new_CoTouchlabSqueakyDaoModelDao_4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoModelDao_4, initWithCoTouchlabSqueakyDaoModelDao_, outer$)
}

CoTouchlabSqueakyDaoModelDao_4 *create_CoTouchlabSqueakyDaoModelDao_4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoModelDao_4, initWithCoTouchlabSqueakyDaoModelDao_, outer$)
}
