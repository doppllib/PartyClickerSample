//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/core/src/main/java/co/touchlab/squeaky/field/types/EnumIntegerType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerType")
#ifdef RESTRICT_CoTouchlabSqueakyFieldTypesEnumIntegerType
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerType 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerType 1
#endif
#undef RESTRICT_CoTouchlabSqueakyFieldTypesEnumIntegerType

#if !defined (CoTouchlabSqueakyFieldTypesEnumIntegerType_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerType || defined(INCLUDE_CoTouchlabSqueakyFieldTypesEnumIntegerType))
#define CoTouchlabSqueakyFieldTypesEnumIntegerType_

#define RESTRICT_CoTouchlabSqueakyFieldTypesBaseEnumType 1
#define INCLUDE_CoTouchlabSqueakyFieldTypesBaseEnumType 1
#include "CoTouchlabSqueakyFieldTypesBaseEnumType.h"

@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;
@protocol AndroidDatabaseCursor;

@interface CoTouchlabSqueakyFieldTypesEnumIntegerType : CoTouchlabSqueakyFieldTypesBaseEnumType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesEnumIntegerType *)getSingleton;

- (jboolean)isEscapedValue;

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)obj;

- (id)makeConfigObjectWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType;

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr;

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos;

- (id)sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)sqlArg
                                              withInt:(jint)columnPos;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesEnumIntegerType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesEnumIntegerType *CoTouchlabSqueakyFieldTypesEnumIntegerType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesEnumIntegerType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesEnumIntegerType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesEnumIntegerType *new_CoTouchlabSqueakyFieldTypesEnumIntegerType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesEnumIntegerType *create_CoTouchlabSqueakyFieldTypesEnumIntegerType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesEnumIntegerType)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerType")
