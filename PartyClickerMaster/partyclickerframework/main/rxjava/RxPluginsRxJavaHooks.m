//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxCompletable.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxInternalOperatorsOnSubscribeOnAssembly.h"
#include "RxInternalOperatorsOnSubscribeOnAssemblyCompletable.h"
#include "RxInternalOperatorsOnSubscribeOnAssemblySingle.h"
#include "RxInternalOperatorsSingleFromObservable.h"
#include "RxInternalOperatorsSingleToObservable.h"
#include "RxObservable.h"
#include "RxPluginsRxJavaCompletableExecutionHook.h"
#include "RxPluginsRxJavaErrorHandler.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxPluginsRxJavaObservableExecutionHook.h"
#include "RxPluginsRxJavaPlugins.h"
#include "RxPluginsRxJavaSchedulersHook.h"
#include "RxPluginsRxJavaSingleExecutionHook.h"
#include "RxPluginsRxJavaSingleExecutionHookDefault.h"
#include "RxScheduler.h"
#include "RxSingle.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"

@interface RxPluginsRxJavaHooks ()

- (instancetype)init;

@end

__attribute__((unused)) static void RxPluginsRxJavaHooks_init(RxPluginsRxJavaHooks *self);

__attribute__((unused)) static RxPluginsRxJavaHooks *new_RxPluginsRxJavaHooks_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks *create_RxPluginsRxJavaHooks_init();

@interface RxPluginsRxJavaHooks_1 : NSObject < RxFunctionsAction1 >

- (instancetype)init;

- (void)callWithId:(NSException *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_1)

__attribute__((unused)) static void RxPluginsRxJavaHooks_1_init(RxPluginsRxJavaHooks_1 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_1 *new_RxPluginsRxJavaHooks_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_1 *create_RxPluginsRxJavaHooks_1_init();

@interface RxPluginsRxJavaHooks_2 : NSObject < RxFunctionsFunc2 >

- (instancetype)init;

- (id<RxObservable_OnSubscribe>)callWithId:(RxObservable *)t1
                                    withId:(id<RxObservable_OnSubscribe>)t2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_2)

__attribute__((unused)) static void RxPluginsRxJavaHooks_2_init(RxPluginsRxJavaHooks_2 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_2 *new_RxPluginsRxJavaHooks_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_2 *create_RxPluginsRxJavaHooks_2_init();

@interface RxPluginsRxJavaHooks_3 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxSubscription>)callWithId:(id<RxSubscription>)f;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_3)

__attribute__((unused)) static void RxPluginsRxJavaHooks_3_init(RxPluginsRxJavaHooks_3 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_3 *new_RxPluginsRxJavaHooks_3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_3 *create_RxPluginsRxJavaHooks_3_init();

@interface RxPluginsRxJavaHooks_4 : NSObject < RxFunctionsFunc2 >

- (instancetype)init;

- (id<RxSingle_OnSubscribe>)callWithId:(RxSingle *)t1
                                withId:(id<RxSingle_OnSubscribe>)t2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_4)

__attribute__((unused)) static void RxPluginsRxJavaHooks_4_init(RxPluginsRxJavaHooks_4 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_4 *new_RxPluginsRxJavaHooks_4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_4 *create_RxPluginsRxJavaHooks_4_init();

@interface RxPluginsRxJavaHooks_5 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxSubscription>)callWithId:(id<RxSubscription>)f;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_5)

__attribute__((unused)) static void RxPluginsRxJavaHooks_5_init(RxPluginsRxJavaHooks_5 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_5 *new_RxPluginsRxJavaHooks_5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_5 *create_RxPluginsRxJavaHooks_5_init();

@interface RxPluginsRxJavaHooks_6 : NSObject < RxFunctionsFunc2 >

- (instancetype)init;

- (id<RxCompletable_OnSubscribe>)callWithId:(RxCompletable *)t1
                                     withId:(id<RxCompletable_OnSubscribe>)t2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_6)

__attribute__((unused)) static void RxPluginsRxJavaHooks_6_init(RxPluginsRxJavaHooks_6 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_6 *new_RxPluginsRxJavaHooks_6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_6 *create_RxPluginsRxJavaHooks_6_init();

@interface RxPluginsRxJavaHooks_7 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxFunctionsAction0>)callWithId:(id<RxFunctionsAction0>)a;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_7)

__attribute__((unused)) static void RxPluginsRxJavaHooks_7_init(RxPluginsRxJavaHooks_7 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_7 *new_RxPluginsRxJavaHooks_7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_7 *create_RxPluginsRxJavaHooks_7_init();

@interface RxPluginsRxJavaHooks_8 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (NSException *)callWithId:(NSException *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_8)

__attribute__((unused)) static void RxPluginsRxJavaHooks_8_init(RxPluginsRxJavaHooks_8 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_8 *new_RxPluginsRxJavaHooks_8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_8 *create_RxPluginsRxJavaHooks_8_init();

@interface RxPluginsRxJavaHooks_9 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxObservable_Operator>)callWithId:(id<RxObservable_Operator>)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_9)

__attribute__((unused)) static void RxPluginsRxJavaHooks_9_init(RxPluginsRxJavaHooks_9 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_9 *new_RxPluginsRxJavaHooks_9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_9 *create_RxPluginsRxJavaHooks_9_init();

@interface RxPluginsRxJavaHooks_10 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (NSException *)callWithId:(NSException *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_10)

__attribute__((unused)) static void RxPluginsRxJavaHooks_10_init(RxPluginsRxJavaHooks_10 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_10 *new_RxPluginsRxJavaHooks_10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_10 *create_RxPluginsRxJavaHooks_10_init();

@interface RxPluginsRxJavaHooks_11 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxObservable_Operator>)callWithId:(id<RxObservable_Operator>)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_11)

__attribute__((unused)) static void RxPluginsRxJavaHooks_11_init(RxPluginsRxJavaHooks_11 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_11 *new_RxPluginsRxJavaHooks_11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_11 *create_RxPluginsRxJavaHooks_11_init();

@interface RxPluginsRxJavaHooks_12 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (NSException *)callWithId:(NSException *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_12)

__attribute__((unused)) static void RxPluginsRxJavaHooks_12_init(RxPluginsRxJavaHooks_12 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_12 *new_RxPluginsRxJavaHooks_12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_12 *create_RxPluginsRxJavaHooks_12_init();

@interface RxPluginsRxJavaHooks_13 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxCompletable_Operator>)callWithId:(id<RxCompletable_Operator>)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_13)

__attribute__((unused)) static void RxPluginsRxJavaHooks_13_init(RxPluginsRxJavaHooks_13 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_13 *new_RxPluginsRxJavaHooks_13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_13 *create_RxPluginsRxJavaHooks_13_init();

@interface RxPluginsRxJavaHooks_14 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxObservable_OnSubscribe>)callWithId:(id<RxObservable_OnSubscribe>)f;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_14)

__attribute__((unused)) static void RxPluginsRxJavaHooks_14_init(RxPluginsRxJavaHooks_14 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_14 *new_RxPluginsRxJavaHooks_14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_14 *create_RxPluginsRxJavaHooks_14_init();

@interface RxPluginsRxJavaHooks_15 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxSingle_OnSubscribe>)callWithId:(id<RxSingle_OnSubscribe>)f;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_15)

__attribute__((unused)) static void RxPluginsRxJavaHooks_15_init(RxPluginsRxJavaHooks_15 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_15 *new_RxPluginsRxJavaHooks_15_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_15 *create_RxPluginsRxJavaHooks_15_init();

@interface RxPluginsRxJavaHooks_16 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxCompletable_OnSubscribe>)callWithId:(id<RxCompletable_OnSubscribe>)f;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_16)

__attribute__((unused)) static void RxPluginsRxJavaHooks_16_init(RxPluginsRxJavaHooks_16 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_16 *new_RxPluginsRxJavaHooks_16_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_16 *create_RxPluginsRxJavaHooks_16_init();

@interface RxPluginsRxJavaHooks_17 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxObservable_OnSubscribe>)callWithId:(id<RxObservable_OnSubscribe>)f;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_17)

__attribute__((unused)) static void RxPluginsRxJavaHooks_17_init(RxPluginsRxJavaHooks_17 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_17 *new_RxPluginsRxJavaHooks_17_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_17 *create_RxPluginsRxJavaHooks_17_init();

@interface RxPluginsRxJavaHooks_18 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxSingle_OnSubscribe>)callWithId:(id<RxSingle_OnSubscribe>)f;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_18)

__attribute__((unused)) static void RxPluginsRxJavaHooks_18_init(RxPluginsRxJavaHooks_18 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_18 *new_RxPluginsRxJavaHooks_18_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_18 *create_RxPluginsRxJavaHooks_18_init();

@interface RxPluginsRxJavaHooks_19 : NSObject < RxFunctionsFunc1 >

- (instancetype)init;

- (id<RxCompletable_OnSubscribe>)callWithId:(id<RxCompletable_OnSubscribe>)f;

@end

J2OBJC_EMPTY_STATIC_INIT(RxPluginsRxJavaHooks_19)

__attribute__((unused)) static void RxPluginsRxJavaHooks_19_init(RxPluginsRxJavaHooks_19 *self);

__attribute__((unused)) static RxPluginsRxJavaHooks_19 *new_RxPluginsRxJavaHooks_19_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxPluginsRxJavaHooks_19 *create_RxPluginsRxJavaHooks_19_init();

J2OBJC_INITIALIZED_DEFN(RxPluginsRxJavaHooks)

volatile_jboolean RxPluginsRxJavaHooks_lockdown_;
volatile_id RxPluginsRxJavaHooks_onError;
volatile_id RxPluginsRxJavaHooks_onObservableCreate;
volatile_id RxPluginsRxJavaHooks_onSingleCreate;
volatile_id RxPluginsRxJavaHooks_onCompletableCreate;
volatile_id RxPluginsRxJavaHooks_onObservableStart;
volatile_id RxPluginsRxJavaHooks_onSingleStart;
volatile_id RxPluginsRxJavaHooks_onCompletableStart;
volatile_id RxPluginsRxJavaHooks_onComputationScheduler;
volatile_id RxPluginsRxJavaHooks_onIOScheduler;
volatile_id RxPluginsRxJavaHooks_onNewThreadScheduler;
volatile_id RxPluginsRxJavaHooks_onScheduleAction;
volatile_id RxPluginsRxJavaHooks_onObservableReturn;
volatile_id RxPluginsRxJavaHooks_onSingleReturn;
volatile_id RxPluginsRxJavaHooks_onGenericScheduledExecutorService;
volatile_id RxPluginsRxJavaHooks_onObservableSubscribeError;
volatile_id RxPluginsRxJavaHooks_onSingleSubscribeError;
volatile_id RxPluginsRxJavaHooks_onCompletableSubscribeError;
volatile_id RxPluginsRxJavaHooks_onObservableLift;
volatile_id RxPluginsRxJavaHooks_onSingleLift;
volatile_id RxPluginsRxJavaHooks_onCompletableLift;

@implementation RxPluginsRxJavaHooks

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)init__ {
  RxPluginsRxJavaHooks_init__();
}

+ (void)initCreate {
  RxPluginsRxJavaHooks_initCreate();
}

+ (void)reset {
  RxPluginsRxJavaHooks_reset();
}

+ (void)clear {
  RxPluginsRxJavaHooks_clear();
}

+ (void)lockdown {
  RxPluginsRxJavaHooks_lockdown();
}

+ (jboolean)isLockdown {
  return RxPluginsRxJavaHooks_isLockdown();
}

+ (void)onErrorWithNSException:(NSException *)ex {
  RxPluginsRxJavaHooks_onErrorWithNSException_(ex);
}

+ (void)signalUncaughtWithNSException:(NSException *)ex {
  RxPluginsRxJavaHooks_signalUncaughtWithNSException_(ex);
}

+ (id<RxObservable_OnSubscribe>)onCreateWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe {
  return RxPluginsRxJavaHooks_onCreateWithRxObservable_OnSubscribe_(onSubscribe);
}

+ (id<RxSingle_OnSubscribe>)onCreateWithRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)onSubscribe {
  return RxPluginsRxJavaHooks_onCreateWithRxSingle_OnSubscribe_(onSubscribe);
}

+ (id<RxCompletable_OnSubscribe>)onCreateWithRxCompletable_OnSubscribe:(id<RxCompletable_OnSubscribe>)onSubscribe {
  return RxPluginsRxJavaHooks_onCreateWithRxCompletable_OnSubscribe_(onSubscribe);
}

+ (RxScheduler *)onComputationSchedulerWithRxScheduler:(RxScheduler *)scheduler {
  return RxPluginsRxJavaHooks_onComputationSchedulerWithRxScheduler_(scheduler);
}

+ (RxScheduler *)onIOSchedulerWithRxScheduler:(RxScheduler *)scheduler {
  return RxPluginsRxJavaHooks_onIOSchedulerWithRxScheduler_(scheduler);
}

+ (RxScheduler *)onNewThreadSchedulerWithRxScheduler:(RxScheduler *)scheduler {
  return RxPluginsRxJavaHooks_onNewThreadSchedulerWithRxScheduler_(scheduler);
}

+ (id<RxFunctionsAction0>)onScheduledActionWithRxFunctionsAction0:(id<RxFunctionsAction0>)action {
  return RxPluginsRxJavaHooks_onScheduledActionWithRxFunctionsAction0_(action);
}

+ (id<RxObservable_OnSubscribe>)onObservableStartWithRxObservable:(RxObservable *)instance
                                     withRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe {
  return RxPluginsRxJavaHooks_onObservableStartWithRxObservable_withRxObservable_OnSubscribe_(instance, onSubscribe);
}

+ (id<RxSubscription>)onObservableReturnWithRxSubscription:(id<RxSubscription>)subscription {
  return RxPluginsRxJavaHooks_onObservableReturnWithRxSubscription_(subscription);
}

+ (NSException *)onObservableErrorWithNSException:(NSException *)error {
  return RxPluginsRxJavaHooks_onObservableErrorWithNSException_(error);
}

+ (id<RxObservable_Operator>)onObservableLiftWithRxObservable_Operator:(id<RxObservable_Operator>)operator_ {
  return RxPluginsRxJavaHooks_onObservableLiftWithRxObservable_Operator_(operator_);
}

+ (id<RxSingle_OnSubscribe>)onSingleStartWithRxSingle:(RxSingle *)instance
                             withRxSingle_OnSubscribe:(id<RxSingle_OnSubscribe>)onSubscribe {
  return RxPluginsRxJavaHooks_onSingleStartWithRxSingle_withRxSingle_OnSubscribe_(instance, onSubscribe);
}

+ (id<RxSubscription>)onSingleReturnWithRxSubscription:(id<RxSubscription>)subscription {
  return RxPluginsRxJavaHooks_onSingleReturnWithRxSubscription_(subscription);
}

+ (NSException *)onSingleErrorWithNSException:(NSException *)error {
  return RxPluginsRxJavaHooks_onSingleErrorWithNSException_(error);
}

+ (id<RxObservable_Operator>)onSingleLiftWithRxObservable_Operator:(id<RxObservable_Operator>)operator_ {
  return RxPluginsRxJavaHooks_onSingleLiftWithRxObservable_Operator_(operator_);
}

+ (id<RxCompletable_OnSubscribe>)onCompletableStartWithRxCompletable:(RxCompletable *)instance
                                       withRxCompletable_OnSubscribe:(id<RxCompletable_OnSubscribe>)onSubscribe {
  return RxPluginsRxJavaHooks_onCompletableStartWithRxCompletable_withRxCompletable_OnSubscribe_(instance, onSubscribe);
}

+ (NSException *)onCompletableErrorWithNSException:(NSException *)error {
  return RxPluginsRxJavaHooks_onCompletableErrorWithNSException_(error);
}

+ (id<RxCompletable_Operator>)onCompletableLiftWithRxCompletable_Operator:(id<RxCompletable_Operator>)operator_ {
  return RxPluginsRxJavaHooks_onCompletableLiftWithRxCompletable_Operator_(operator_);
}

+ (void)setOnErrorWithRxFunctionsAction1:(id<RxFunctionsAction1>)onError {
  RxPluginsRxJavaHooks_setOnErrorWithRxFunctionsAction1_(onError);
}

+ (void)setOnCompletableCreateWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onCompletableCreate {
  RxPluginsRxJavaHooks_setOnCompletableCreateWithRxFunctionsFunc1_(onCompletableCreate);
}

+ (void)setOnObservableCreateWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onObservableCreate {
  RxPluginsRxJavaHooks_setOnObservableCreateWithRxFunctionsFunc1_(onObservableCreate);
}

+ (void)setOnSingleCreateWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onSingleCreate {
  RxPluginsRxJavaHooks_setOnSingleCreateWithRxFunctionsFunc1_(onSingleCreate);
}

+ (void)setOnComputationSchedulerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onComputationScheduler {
  RxPluginsRxJavaHooks_setOnComputationSchedulerWithRxFunctionsFunc1_(onComputationScheduler);
}

+ (void)setOnIOSchedulerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onIOScheduler {
  RxPluginsRxJavaHooks_setOnIOSchedulerWithRxFunctionsFunc1_(onIOScheduler);
}

+ (void)setOnNewThreadSchedulerWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onNewThreadScheduler {
  RxPluginsRxJavaHooks_setOnNewThreadSchedulerWithRxFunctionsFunc1_(onNewThreadScheduler);
}

+ (void)setOnScheduleActionWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onScheduleAction {
  RxPluginsRxJavaHooks_setOnScheduleActionWithRxFunctionsFunc1_(onScheduleAction);
}

+ (void)setOnCompletableStartWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)onCompletableStart {
  RxPluginsRxJavaHooks_setOnCompletableStartWithRxFunctionsFunc2_(onCompletableStart);
}

+ (void)setOnObservableStartWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)onObservableStart {
  RxPluginsRxJavaHooks_setOnObservableStartWithRxFunctionsFunc2_(onObservableStart);
}

+ (void)setOnSingleStartWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)onSingleStart {
  RxPluginsRxJavaHooks_setOnSingleStartWithRxFunctionsFunc2_(onSingleStart);
}

+ (void)setOnObservableReturnWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onObservableReturn {
  RxPluginsRxJavaHooks_setOnObservableReturnWithRxFunctionsFunc1_(onObservableReturn);
}

+ (void)setOnSingleReturnWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onSingleReturn {
  RxPluginsRxJavaHooks_setOnSingleReturnWithRxFunctionsFunc1_(onSingleReturn);
}

+ (void)setOnSingleSubscribeErrorWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onSingleSubscribeError {
  RxPluginsRxJavaHooks_setOnSingleSubscribeErrorWithRxFunctionsFunc1_(onSingleSubscribeError);
}

+ (id<RxFunctionsFunc1>)getOnSingleSubscribeError {
  return RxPluginsRxJavaHooks_getOnSingleSubscribeError();
}

+ (void)setOnCompletableSubscribeErrorWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onCompletableSubscribeError {
  RxPluginsRxJavaHooks_setOnCompletableSubscribeErrorWithRxFunctionsFunc1_(onCompletableSubscribeError);
}

+ (id<RxFunctionsFunc1>)getOnCompletableSubscribeError {
  return RxPluginsRxJavaHooks_getOnCompletableSubscribeError();
}

+ (void)setOnObservableSubscribeErrorWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onObservableSubscribeError {
  RxPluginsRxJavaHooks_setOnObservableSubscribeErrorWithRxFunctionsFunc1_(onObservableSubscribeError);
}

+ (id<RxFunctionsFunc1>)getOnObservableSubscribeError {
  return RxPluginsRxJavaHooks_getOnObservableSubscribeError();
}

+ (void)setOnObservableLiftWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onObservableLift {
  RxPluginsRxJavaHooks_setOnObservableLiftWithRxFunctionsFunc1_(onObservableLift);
}

+ (id<RxFunctionsFunc1>)getOnObservableLift {
  return RxPluginsRxJavaHooks_getOnObservableLift();
}

+ (void)setOnSingleLiftWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onSingleLift {
  RxPluginsRxJavaHooks_setOnSingleLiftWithRxFunctionsFunc1_(onSingleLift);
}

+ (id<RxFunctionsFunc1>)getOnSingleLift {
  return RxPluginsRxJavaHooks_getOnSingleLift();
}

+ (void)setOnCompletableLiftWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onCompletableLift {
  RxPluginsRxJavaHooks_setOnCompletableLiftWithRxFunctionsFunc1_(onCompletableLift);
}

+ (id<RxFunctionsFunc1>)getOnCompletableLift {
  return RxPluginsRxJavaHooks_getOnCompletableLift();
}

+ (id<RxFunctionsFunc1>)getOnComputationScheduler {
  return RxPluginsRxJavaHooks_getOnComputationScheduler();
}

+ (id<RxFunctionsAction1>)getOnError {
  return RxPluginsRxJavaHooks_getOnError();
}

+ (id<RxFunctionsFunc1>)getOnIOScheduler {
  return RxPluginsRxJavaHooks_getOnIOScheduler();
}

+ (id<RxFunctionsFunc1>)getOnNewThreadScheduler {
  return RxPluginsRxJavaHooks_getOnNewThreadScheduler();
}

+ (id<RxFunctionsFunc1>)getOnObservableCreate {
  return RxPluginsRxJavaHooks_getOnObservableCreate();
}

+ (id<RxFunctionsFunc1>)getOnScheduleAction {
  return RxPluginsRxJavaHooks_getOnScheduleAction();
}

+ (id<RxFunctionsFunc1>)getOnSingleCreate {
  return RxPluginsRxJavaHooks_getOnSingleCreate();
}

+ (id<RxFunctionsFunc1>)getOnCompletableCreate {
  return RxPluginsRxJavaHooks_getOnCompletableCreate();
}

+ (id<RxFunctionsFunc2>)getOnCompletableStart {
  return RxPluginsRxJavaHooks_getOnCompletableStart();
}

+ (id<RxFunctionsFunc2>)getOnObservableStart {
  return RxPluginsRxJavaHooks_getOnObservableStart();
}

+ (id<RxFunctionsFunc2>)getOnSingleStart {
  return RxPluginsRxJavaHooks_getOnSingleStart();
}

+ (id<RxFunctionsFunc1>)getOnObservableReturn {
  return RxPluginsRxJavaHooks_getOnObservableReturn();
}

+ (id<RxFunctionsFunc1>)getOnSingleReturn {
  return RxPluginsRxJavaHooks_getOnSingleReturn();
}

+ (void)resetAssemblyTracking {
  RxPluginsRxJavaHooks_resetAssemblyTracking();
}

+ (void)clearAssemblyTracking {
  RxPluginsRxJavaHooks_clearAssemblyTracking();
}

+ (void)enableAssemblyTracking {
  RxPluginsRxJavaHooks_enableAssemblyTracking();
}

+ (void)setOnGenericScheduledExecutorServiceWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)factory {
  RxPluginsRxJavaHooks_setOnGenericScheduledExecutorServiceWithRxFunctionsFunc0_(factory);
}

+ (id<RxFunctionsFunc0>)getOnGenericScheduledExecutorService {
  return RxPluginsRxJavaHooks_getOnGenericScheduledExecutorService();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 0, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 3, 2, -1, -1, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 4, 5, -1, 6, -1, -1 },
    { NULL, "LRxSingle_OnSubscribe;", 0x9, 4, 7, -1, 8, -1, -1 },
    { NULL, "LRxCompletable_OnSubscribe;", 0x9, 4, 9, -1, -1, -1, -1 },
    { NULL, "LRxScheduler;", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "LRxScheduler;", 0x9, 12, 11, -1, -1, -1, -1 },
    { NULL, "LRxScheduler;", 0x9, 13, 11, -1, -1, -1, -1 },
    { NULL, "LRxFunctionsAction0;", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x9, 16, 17, -1, 18, -1, -1 },
    { NULL, "LRxSubscription;", 0x9, 19, 20, -1, -1, -1, -1 },
    { NULL, "LNSException;", 0x9, 21, 2, -1, -1, -1, -1 },
    { NULL, "LRxObservable_Operator;", 0x9, 22, 23, -1, 24, -1, -1 },
    { NULL, "LRxSingle_OnSubscribe;", 0x9, 25, 26, -1, 27, -1, -1 },
    { NULL, "LRxSubscription;", 0x9, 28, 20, -1, -1, -1, -1 },
    { NULL, "LNSException;", 0x9, 29, 2, -1, -1, -1, -1 },
    { NULL, "LRxObservable_Operator;", 0x9, 30, 23, -1, 24, -1, -1 },
    { NULL, "LRxCompletable_OnSubscribe;", 0x9, 31, 32, -1, 33, -1, -1 },
    { NULL, "LNSException;", 0x9, 34, 2, -1, -1, -1, -1 },
    { NULL, "LRxCompletable_Operator;", 0x9, 35, 36, -1, 37, -1, -1 },
    { NULL, "V", 0x9, 38, 39, -1, 40, -1, -1 },
    { NULL, "V", 0x9, 41, 42, -1, 43, -1, -1 },
    { NULL, "V", 0x9, 44, 42, -1, 45, -1, -1 },
    { NULL, "V", 0x9, 46, 42, -1, 47, -1, -1 },
    { NULL, "V", 0x9, 48, 42, -1, 49, -1, -1 },
    { NULL, "V", 0x9, 50, 42, -1, 49, -1, -1 },
    { NULL, "V", 0x9, 51, 42, -1, 49, -1, -1 },
    { NULL, "V", 0x9, 52, 42, -1, 53, -1, -1 },
    { NULL, "V", 0x9, 54, 55, -1, 56, -1, -1 },
    { NULL, "V", 0x9, 57, 55, -1, 58, -1, -1 },
    { NULL, "V", 0x9, 59, 55, -1, 60, -1, -1 },
    { NULL, "V", 0x9, 61, 42, -1, 62, -1, -1 },
    { NULL, "V", 0x9, 63, 42, -1, 62, -1, -1 },
    { NULL, "V", 0x9, 64, 42, -1, 65, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 66, -1, -1 },
    { NULL, "V", 0x9, 67, 42, -1, 65, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 66, -1, -1 },
    { NULL, "V", 0x9, 68, 42, -1, 65, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 66, -1, -1 },
    { NULL, "V", 0x9, 69, 42, -1, 70, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 71, -1, -1 },
    { NULL, "V", 0x9, 72, 42, -1, 70, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 71, -1, -1 },
    { NULL, "V", 0x9, 73, 42, -1, 74, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 75, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 76, -1, -1 },
    { NULL, "LRxFunctionsAction1;", 0x9, -1, -1, -1, 77, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 76, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 76, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 78, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 79, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 80, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 81, -1, -1 },
    { NULL, "LRxFunctionsFunc2;", 0x9, -1, -1, -1, 82, -1, -1 },
    { NULL, "LRxFunctionsFunc2;", 0x9, -1, -1, -1, 83, -1, -1 },
    { NULL, "LRxFunctionsFunc2;", 0x9, -1, -1, -1, 84, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 85, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x9, -1, -1, -1, 85, -1, -1 },
    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 86, 87, -1, 88, -1, -1 },
    { NULL, "LRxFunctionsFunc0;", 0x9, -1, -1, -1, 89, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__);
  methods[2].selector = @selector(initCreate);
  methods[3].selector = @selector(reset);
  methods[4].selector = @selector(clear);
  methods[5].selector = @selector(lockdown);
  methods[6].selector = @selector(isLockdown);
  methods[7].selector = @selector(onErrorWithNSException:);
  methods[8].selector = @selector(signalUncaughtWithNSException:);
  methods[9].selector = @selector(onCreateWithRxObservable_OnSubscribe:);
  methods[10].selector = @selector(onCreateWithRxSingle_OnSubscribe:);
  methods[11].selector = @selector(onCreateWithRxCompletable_OnSubscribe:);
  methods[12].selector = @selector(onComputationSchedulerWithRxScheduler:);
  methods[13].selector = @selector(onIOSchedulerWithRxScheduler:);
  methods[14].selector = @selector(onNewThreadSchedulerWithRxScheduler:);
  methods[15].selector = @selector(onScheduledActionWithRxFunctionsAction0:);
  methods[16].selector = @selector(onObservableStartWithRxObservable:withRxObservable_OnSubscribe:);
  methods[17].selector = @selector(onObservableReturnWithRxSubscription:);
  methods[18].selector = @selector(onObservableErrorWithNSException:);
  methods[19].selector = @selector(onObservableLiftWithRxObservable_Operator:);
  methods[20].selector = @selector(onSingleStartWithRxSingle:withRxSingle_OnSubscribe:);
  methods[21].selector = @selector(onSingleReturnWithRxSubscription:);
  methods[22].selector = @selector(onSingleErrorWithNSException:);
  methods[23].selector = @selector(onSingleLiftWithRxObservable_Operator:);
  methods[24].selector = @selector(onCompletableStartWithRxCompletable:withRxCompletable_OnSubscribe:);
  methods[25].selector = @selector(onCompletableErrorWithNSException:);
  methods[26].selector = @selector(onCompletableLiftWithRxCompletable_Operator:);
  methods[27].selector = @selector(setOnErrorWithRxFunctionsAction1:);
  methods[28].selector = @selector(setOnCompletableCreateWithRxFunctionsFunc1:);
  methods[29].selector = @selector(setOnObservableCreateWithRxFunctionsFunc1:);
  methods[30].selector = @selector(setOnSingleCreateWithRxFunctionsFunc1:);
  methods[31].selector = @selector(setOnComputationSchedulerWithRxFunctionsFunc1:);
  methods[32].selector = @selector(setOnIOSchedulerWithRxFunctionsFunc1:);
  methods[33].selector = @selector(setOnNewThreadSchedulerWithRxFunctionsFunc1:);
  methods[34].selector = @selector(setOnScheduleActionWithRxFunctionsFunc1:);
  methods[35].selector = @selector(setOnCompletableStartWithRxFunctionsFunc2:);
  methods[36].selector = @selector(setOnObservableStartWithRxFunctionsFunc2:);
  methods[37].selector = @selector(setOnSingleStartWithRxFunctionsFunc2:);
  methods[38].selector = @selector(setOnObservableReturnWithRxFunctionsFunc1:);
  methods[39].selector = @selector(setOnSingleReturnWithRxFunctionsFunc1:);
  methods[40].selector = @selector(setOnSingleSubscribeErrorWithRxFunctionsFunc1:);
  methods[41].selector = @selector(getOnSingleSubscribeError);
  methods[42].selector = @selector(setOnCompletableSubscribeErrorWithRxFunctionsFunc1:);
  methods[43].selector = @selector(getOnCompletableSubscribeError);
  methods[44].selector = @selector(setOnObservableSubscribeErrorWithRxFunctionsFunc1:);
  methods[45].selector = @selector(getOnObservableSubscribeError);
  methods[46].selector = @selector(setOnObservableLiftWithRxFunctionsFunc1:);
  methods[47].selector = @selector(getOnObservableLift);
  methods[48].selector = @selector(setOnSingleLiftWithRxFunctionsFunc1:);
  methods[49].selector = @selector(getOnSingleLift);
  methods[50].selector = @selector(setOnCompletableLiftWithRxFunctionsFunc1:);
  methods[51].selector = @selector(getOnCompletableLift);
  methods[52].selector = @selector(getOnComputationScheduler);
  methods[53].selector = @selector(getOnError);
  methods[54].selector = @selector(getOnIOScheduler);
  methods[55].selector = @selector(getOnNewThreadScheduler);
  methods[56].selector = @selector(getOnObservableCreate);
  methods[57].selector = @selector(getOnScheduleAction);
  methods[58].selector = @selector(getOnSingleCreate);
  methods[59].selector = @selector(getOnCompletableCreate);
  methods[60].selector = @selector(getOnCompletableStart);
  methods[61].selector = @selector(getOnObservableStart);
  methods[62].selector = @selector(getOnSingleStart);
  methods[63].selector = @selector(getOnObservableReturn);
  methods[64].selector = @selector(getOnSingleReturn);
  methods[65].selector = @selector(resetAssemblyTracking);
  methods[66].selector = @selector(clearAssemblyTracking);
  methods[67].selector = @selector(enableAssemblyTracking);
  methods[68].selector = @selector(setOnGenericScheduledExecutorServiceWithRxFunctionsFunc0:);
  methods[69].selector = @selector(getOnGenericScheduledExecutorService);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "lockdown_", "Z", .constantValue.asLong = 0, 0x48, 90, 91, -1, -1 },
    { "onError", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x48, -1, 92, 93, -1 },
    { "onObservableCreate", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 94, 95, -1 },
    { "onSingleCreate", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 96, 97, -1 },
    { "onCompletableCreate", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 98, 99, -1 },
    { "onObservableStart", "LRxFunctionsFunc2;", .constantValue.asLong = 0, 0x48, -1, 100, 101, -1 },
    { "onSingleStart", "LRxFunctionsFunc2;", .constantValue.asLong = 0, 0x48, -1, 102, 103, -1 },
    { "onCompletableStart", "LRxFunctionsFunc2;", .constantValue.asLong = 0, 0x48, -1, 104, 105, -1 },
    { "onComputationScheduler", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 106, 107, -1 },
    { "onIOScheduler", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 108, 107, -1 },
    { "onNewThreadScheduler", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 109, 107, -1 },
    { "onScheduleAction", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 110, 111, -1 },
    { "onObservableReturn", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 112, 113, -1 },
    { "onSingleReturn", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 114, 113, -1 },
    { "onGenericScheduledExecutorService", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x48, -1, 115, 116, -1 },
    { "onObservableSubscribeError", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 117, 118, -1 },
    { "onSingleSubscribeError", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 119, 118, -1 },
    { "onCompletableSubscribeError", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 120, 118, -1 },
    { "onObservableLift", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 121, 122, -1 },
    { "onSingleLift", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 123, 122, -1 },
    { "onCompletableLift", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x48, -1, 124, 125, -1 },
  };
  static const void *ptrTable[] = { "init", "onError", "LNSException;", "signalUncaught", "onCreate", "LRxObservable_OnSubscribe;", "<T:Ljava/lang/Object;>(Lrx/Observable$OnSubscribe<TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxSingle_OnSubscribe;", "<T:Ljava/lang/Object;>(Lrx/Single$OnSubscribe<TT;>;)Lrx/Single$OnSubscribe<TT;>;", "LRxCompletable_OnSubscribe;", "onComputationScheduler", "LRxScheduler;", "onIOScheduler", "onNewThreadScheduler", "onScheduledAction", "LRxFunctionsAction0;", "onObservableStart", "LRxObservable;LRxObservable_OnSubscribe;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;Lrx/Observable$OnSubscribe<TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "onObservableReturn", "LRxSubscription;", "onObservableError", "onObservableLift", "LRxObservable_Operator;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Observable$Operator<TR;TT;>;)Lrx/Observable$Operator<TR;TT;>;", "onSingleStart", "LRxSingle;LRxSingle_OnSubscribe;", "<T:Ljava/lang/Object;>(Lrx/Single<TT;>;Lrx/Single$OnSubscribe<TT;>;)Lrx/Single$OnSubscribe<TT;>;", "onSingleReturn", "onSingleError", "onSingleLift", "onCompletableStart", "LRxCompletable;LRxCompletable_OnSubscribe;", "<T:Ljava/lang/Object;>(Lrx/Completable;Lrx/Completable$OnSubscribe;)Lrx/Completable$OnSubscribe;", "onCompletableError", "onCompletableLift", "LRxCompletable_Operator;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lrx/Completable$Operator;)Lrx/Completable$Operator;", "setOnError", "LRxFunctionsAction1;", "(Lrx/functions/Action1<Ljava/lang/Throwable;>;)V", "setOnCompletableCreate", "LRxFunctionsFunc1;", "(Lrx/functions/Func1<Lrx/Completable$OnSubscribe;Lrx/Completable$OnSubscribe;>;)V", "setOnObservableCreate", "(Lrx/functions/Func1<Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;)V", "setOnSingleCreate", "(Lrx/functions/Func1<Lrx/Single$OnSubscribe;Lrx/Single$OnSubscribe;>;)V", "setOnComputationScheduler", "(Lrx/functions/Func1<Lrx/Scheduler;Lrx/Scheduler;>;)V", "setOnIOScheduler", "setOnNewThreadScheduler", "setOnScheduleAction", "(Lrx/functions/Func1<Lrx/functions/Action0;Lrx/functions/Action0;>;)V", "setOnCompletableStart", "LRxFunctionsFunc2;", "(Lrx/functions/Func2<Lrx/Completable;Lrx/Completable$OnSubscribe;Lrx/Completable$OnSubscribe;>;)V", "setOnObservableStart", "(Lrx/functions/Func2<Lrx/Observable;Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;)V", "setOnSingleStart", "(Lrx/functions/Func2<Lrx/Single;Lrx/Single$OnSubscribe;Lrx/Single$OnSubscribe;>;)V", "setOnObservableReturn", "(Lrx/functions/Func1<Lrx/Subscription;Lrx/Subscription;>;)V", "setOnSingleReturn", "setOnSingleSubscribeError", "(Lrx/functions/Func1<Ljava/lang/Throwable;Ljava/lang/Throwable;>;)V", "()Lrx/functions/Func1<Ljava/lang/Throwable;Ljava/lang/Throwable;>;", "setOnCompletableSubscribeError", "setOnObservableSubscribeError", "setOnObservableLift", "(Lrx/functions/Func1<Lrx/Observable$Operator;Lrx/Observable$Operator;>;)V", "()Lrx/functions/Func1<Lrx/Observable$Operator;Lrx/Observable$Operator;>;", "setOnSingleLift", "setOnCompletableLift", "(Lrx/functions/Func1<Lrx/Completable$Operator;Lrx/Completable$Operator;>;)V", "()Lrx/functions/Func1<Lrx/Completable$Operator;Lrx/Completable$Operator;>;", "()Lrx/functions/Func1<Lrx/Scheduler;Lrx/Scheduler;>;", "()Lrx/functions/Action1<Ljava/lang/Throwable;>;", "()Lrx/functions/Func1<Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;", "()Lrx/functions/Func1<Lrx/functions/Action0;Lrx/functions/Action0;>;", "()Lrx/functions/Func1<Lrx/Single$OnSubscribe;Lrx/Single$OnSubscribe;>;", "()Lrx/functions/Func1<Lrx/Completable$OnSubscribe;Lrx/Completable$OnSubscribe;>;", "()Lrx/functions/Func2<Lrx/Completable;Lrx/Completable$OnSubscribe;Lrx/Completable$OnSubscribe;>;", "()Lrx/functions/Func2<Lrx/Observable;Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;", "()Lrx/functions/Func2<Lrx/Single;Lrx/Single$OnSubscribe;Lrx/Single$OnSubscribe;>;", "()Lrx/functions/Func1<Lrx/Subscription;Lrx/Subscription;>;", "setOnGenericScheduledExecutorService", "LRxFunctionsFunc0;", "(Lrx/functions/Func0<+Ljava/util/concurrent/ScheduledExecutorService;>;)V", "()Lrx/functions/Func0<+Ljava/util/concurrent/ScheduledExecutorService;>;", "lockdown", &RxPluginsRxJavaHooks_lockdown_, &RxPluginsRxJavaHooks_onError, "Lrx/functions/Action1<Ljava/lang/Throwable;>;", &RxPluginsRxJavaHooks_onObservableCreate, "Lrx/functions/Func1<Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;", &RxPluginsRxJavaHooks_onSingleCreate, "Lrx/functions/Func1<Lrx/Single$OnSubscribe;Lrx/Single$OnSubscribe;>;", &RxPluginsRxJavaHooks_onCompletableCreate, "Lrx/functions/Func1<Lrx/Completable$OnSubscribe;Lrx/Completable$OnSubscribe;>;", &RxPluginsRxJavaHooks_onObservableStart, "Lrx/functions/Func2<Lrx/Observable;Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;", &RxPluginsRxJavaHooks_onSingleStart, "Lrx/functions/Func2<Lrx/Single;Lrx/Single$OnSubscribe;Lrx/Single$OnSubscribe;>;", &RxPluginsRxJavaHooks_onCompletableStart, "Lrx/functions/Func2<Lrx/Completable;Lrx/Completable$OnSubscribe;Lrx/Completable$OnSubscribe;>;", &RxPluginsRxJavaHooks_onComputationScheduler, "Lrx/functions/Func1<Lrx/Scheduler;Lrx/Scheduler;>;", &RxPluginsRxJavaHooks_onIOScheduler, &RxPluginsRxJavaHooks_onNewThreadScheduler, &RxPluginsRxJavaHooks_onScheduleAction, "Lrx/functions/Func1<Lrx/functions/Action0;Lrx/functions/Action0;>;", &RxPluginsRxJavaHooks_onObservableReturn, "Lrx/functions/Func1<Lrx/Subscription;Lrx/Subscription;>;", &RxPluginsRxJavaHooks_onSingleReturn, &RxPluginsRxJavaHooks_onGenericScheduledExecutorService, "Lrx/functions/Func0<+Ljava/util/concurrent/ScheduledExecutorService;>;", &RxPluginsRxJavaHooks_onObservableSubscribeError, "Lrx/functions/Func1<Ljava/lang/Throwable;Ljava/lang/Throwable;>;", &RxPluginsRxJavaHooks_onSingleSubscribeError, &RxPluginsRxJavaHooks_onCompletableSubscribeError, &RxPluginsRxJavaHooks_onObservableLift, "Lrx/functions/Func1<Lrx/Observable$Operator;Lrx/Observable$Operator;>;", &RxPluginsRxJavaHooks_onSingleLift, &RxPluginsRxJavaHooks_onCompletableLift, "Lrx/functions/Func1<Lrx/Completable$Operator;Lrx/Completable$Operator;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks = { "RxJavaHooks", "rx.plugins", ptrTable, methods, fields, 7, 0x11, 70, 21, -1, -1, -1, -1, -1 };
  return &_RxPluginsRxJavaHooks;
}

+ (void)initialize {
  if (self == [RxPluginsRxJavaHooks class]) {
    {
      RxPluginsRxJavaHooks_init__();
    }
    J2OBJC_SET_INITIALIZED(RxPluginsRxJavaHooks)
  }
}

@end

void RxPluginsRxJavaHooks_init(RxPluginsRxJavaHooks *self) {
  NSObject_init(self);
  @throw create_JavaLangIllegalStateException_initWithNSString_(@"No instances!");
}

RxPluginsRxJavaHooks *new_RxPluginsRxJavaHooks_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks, init)
}

RxPluginsRxJavaHooks *create_RxPluginsRxJavaHooks_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks, init)
}

void RxPluginsRxJavaHooks_init__() {
  RxPluginsRxJavaHooks_initialize();
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onError, create_RxPluginsRxJavaHooks_1_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableStart, create_RxPluginsRxJavaHooks_2_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableReturn, create_RxPluginsRxJavaHooks_3_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleStart, create_RxPluginsRxJavaHooks_4_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleReturn, create_RxPluginsRxJavaHooks_5_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableStart, create_RxPluginsRxJavaHooks_6_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onScheduleAction, create_RxPluginsRxJavaHooks_7_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableSubscribeError, create_RxPluginsRxJavaHooks_8_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableLift, create_RxPluginsRxJavaHooks_9_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleSubscribeError, create_RxPluginsRxJavaHooks_10_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleLift, create_RxPluginsRxJavaHooks_11_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableSubscribeError, create_RxPluginsRxJavaHooks_12_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableLift, create_RxPluginsRxJavaHooks_13_init());
  RxPluginsRxJavaHooks_initCreate();
}

void RxPluginsRxJavaHooks_initCreate() {
  RxPluginsRxJavaHooks_initialize();
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableCreate, create_RxPluginsRxJavaHooks_14_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleCreate, create_RxPluginsRxJavaHooks_15_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableCreate, create_RxPluginsRxJavaHooks_16_init());
}

void RxPluginsRxJavaHooks_reset() {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  RxPluginsRxJavaHooks_init__();
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onComputationScheduler, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onIOScheduler, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onNewThreadScheduler, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onGenericScheduledExecutorService, nil);
}

void RxPluginsRxJavaHooks_clear() {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onError, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableCreate, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableStart, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableReturn, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableSubscribeError, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableLift, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleCreate, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleStart, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleReturn, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleSubscribeError, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleLift, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableCreate, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableStart, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableSubscribeError, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableLift, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onComputationScheduler, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onIOScheduler, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onNewThreadScheduler, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onScheduleAction, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onGenericScheduledExecutorService, nil);
}

void RxPluginsRxJavaHooks_lockdown() {
  RxPluginsRxJavaHooks_initialize();
  JreAssignVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_, true);
}

jboolean RxPluginsRxJavaHooks_isLockdown() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_);
}

void RxPluginsRxJavaHooks_onErrorWithNSException_(NSException *ex) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsAction1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onError);
  if (f != nil) {
    @try {
      [f callWithId:ex];
      return;
    }
    @catch (NSException *pluginException) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$", @"The onError handler threw an Exception. It shouldn't. => ", [((NSException *) nil_chk(pluginException)) getMessage])];
      [pluginException printStackTrace];
      RxPluginsRxJavaHooks_signalUncaughtWithNSException_(pluginException);
    }
  }
  RxPluginsRxJavaHooks_signalUncaughtWithNSException_(ex);
}

void RxPluginsRxJavaHooks_signalUncaughtWithNSException_(NSException *ex) {
  RxPluginsRxJavaHooks_initialize();
  JavaLangThread *current = JavaLangThread_currentThread();
  id<JavaLangThread_UncaughtExceptionHandler> handler = [((JavaLangThread *) nil_chk(current)) getUncaughtExceptionHandler];
  [((id<JavaLangThread_UncaughtExceptionHandler>) nil_chk(handler)) uncaughtExceptionWithJavaLangThread:current withNSException:ex];
}

id<RxObservable_OnSubscribe> RxPluginsRxJavaHooks_onCreateWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> onSubscribe) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onObservableCreate);
  if (f != nil) {
    return [f callWithId:onSubscribe];
  }
  return onSubscribe;
}

id<RxSingle_OnSubscribe> RxPluginsRxJavaHooks_onCreateWithRxSingle_OnSubscribe_(id<RxSingle_OnSubscribe> onSubscribe) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onSingleCreate);
  if (f != nil) {
    return [f callWithId:onSubscribe];
  }
  return onSubscribe;
}

id<RxCompletable_OnSubscribe> RxPluginsRxJavaHooks_onCreateWithRxCompletable_OnSubscribe_(id<RxCompletable_OnSubscribe> onSubscribe) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onCompletableCreate);
  if (f != nil) {
    return [f callWithId:onSubscribe];
  }
  return onSubscribe;
}

RxScheduler *RxPluginsRxJavaHooks_onComputationSchedulerWithRxScheduler_(RxScheduler *scheduler) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onComputationScheduler);
  if (f != nil) {
    return [f callWithId:scheduler];
  }
  return scheduler;
}

RxScheduler *RxPluginsRxJavaHooks_onIOSchedulerWithRxScheduler_(RxScheduler *scheduler) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onIOScheduler);
  if (f != nil) {
    return [f callWithId:scheduler];
  }
  return scheduler;
}

RxScheduler *RxPluginsRxJavaHooks_onNewThreadSchedulerWithRxScheduler_(RxScheduler *scheduler) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onNewThreadScheduler);
  if (f != nil) {
    return [f callWithId:scheduler];
  }
  return scheduler;
}

id<RxFunctionsAction0> RxPluginsRxJavaHooks_onScheduledActionWithRxFunctionsAction0_(id<RxFunctionsAction0> action) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onScheduleAction);
  if (f != nil) {
    return [f callWithId:action];
  }
  return action;
}

id<RxObservable_OnSubscribe> RxPluginsRxJavaHooks_onObservableStartWithRxObservable_withRxObservable_OnSubscribe_(RxObservable *instance, id<RxObservable_OnSubscribe> onSubscribe) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc2> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onObservableStart);
  if (f != nil) {
    return [f callWithId:instance withId:onSubscribe];
  }
  return onSubscribe;
}

id<RxSubscription> RxPluginsRxJavaHooks_onObservableReturnWithRxSubscription_(id<RxSubscription> subscription) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onObservableReturn);
  if (f != nil) {
    return [f callWithId:subscription];
  }
  return subscription;
}

NSException *RxPluginsRxJavaHooks_onObservableErrorWithNSException_(NSException *error) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onObservableSubscribeError);
  if (f != nil) {
    return [f callWithId:error];
  }
  return error;
}

id<RxObservable_Operator> RxPluginsRxJavaHooks_onObservableLiftWithRxObservable_Operator_(id<RxObservable_Operator> operator_) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onObservableLift);
  if (f != nil) {
    return [f callWithId:operator_];
  }
  return operator_;
}

id<RxSingle_OnSubscribe> RxPluginsRxJavaHooks_onSingleStartWithRxSingle_withRxSingle_OnSubscribe_(RxSingle *instance, id<RxSingle_OnSubscribe> onSubscribe) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc2> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onSingleStart);
  if (f != nil) {
    return [f callWithId:instance withId:onSubscribe];
  }
  return onSubscribe;
}

id<RxSubscription> RxPluginsRxJavaHooks_onSingleReturnWithRxSubscription_(id<RxSubscription> subscription) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onSingleReturn);
  if (f != nil) {
    return [f callWithId:subscription];
  }
  return subscription;
}

NSException *RxPluginsRxJavaHooks_onSingleErrorWithNSException_(NSException *error) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onSingleSubscribeError);
  if (f != nil) {
    return [f callWithId:error];
  }
  return error;
}

id<RxObservable_Operator> RxPluginsRxJavaHooks_onSingleLiftWithRxObservable_Operator_(id<RxObservable_Operator> operator_) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onSingleLift);
  if (f != nil) {
    return [f callWithId:operator_];
  }
  return operator_;
}

id<RxCompletable_OnSubscribe> RxPluginsRxJavaHooks_onCompletableStartWithRxCompletable_withRxCompletable_OnSubscribe_(RxCompletable *instance, id<RxCompletable_OnSubscribe> onSubscribe) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc2> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onCompletableStart);
  if (f != nil) {
    return [f callWithId:instance withId:onSubscribe];
  }
  return onSubscribe;
}

NSException *RxPluginsRxJavaHooks_onCompletableErrorWithNSException_(NSException *error) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onCompletableSubscribeError);
  if (f != nil) {
    return [f callWithId:error];
  }
  return error;
}

id<RxCompletable_Operator> RxPluginsRxJavaHooks_onCompletableLiftWithRxCompletable_Operator_(id<RxCompletable_Operator> operator_) {
  RxPluginsRxJavaHooks_initialize();
  id<RxFunctionsFunc1> f = JreLoadVolatileId(&RxPluginsRxJavaHooks_onCompletableLift);
  if (f != nil) {
    return [f callWithId:operator_];
  }
  return operator_;
}

void RxPluginsRxJavaHooks_setOnErrorWithRxFunctionsAction1_(id<RxFunctionsAction1> onError) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onError, onError);
}

void RxPluginsRxJavaHooks_setOnCompletableCreateWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onCompletableCreate) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableCreate, onCompletableCreate);
}

void RxPluginsRxJavaHooks_setOnObservableCreateWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onObservableCreate) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableCreate, onObservableCreate);
}

void RxPluginsRxJavaHooks_setOnSingleCreateWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onSingleCreate) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleCreate, onSingleCreate);
}

void RxPluginsRxJavaHooks_setOnComputationSchedulerWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onComputationScheduler) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onComputationScheduler, onComputationScheduler);
}

void RxPluginsRxJavaHooks_setOnIOSchedulerWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onIOScheduler) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onIOScheduler, onIOScheduler);
}

void RxPluginsRxJavaHooks_setOnNewThreadSchedulerWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onNewThreadScheduler) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onNewThreadScheduler, onNewThreadScheduler);
}

void RxPluginsRxJavaHooks_setOnScheduleActionWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onScheduleAction) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onScheduleAction, onScheduleAction);
}

void RxPluginsRxJavaHooks_setOnCompletableStartWithRxFunctionsFunc2_(id<RxFunctionsFunc2> onCompletableStart) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableStart, onCompletableStart);
}

void RxPluginsRxJavaHooks_setOnObservableStartWithRxFunctionsFunc2_(id<RxFunctionsFunc2> onObservableStart) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableStart, onObservableStart);
}

void RxPluginsRxJavaHooks_setOnSingleStartWithRxFunctionsFunc2_(id<RxFunctionsFunc2> onSingleStart) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleStart, onSingleStart);
}

void RxPluginsRxJavaHooks_setOnObservableReturnWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onObservableReturn) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableReturn, onObservableReturn);
}

void RxPluginsRxJavaHooks_setOnSingleReturnWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onSingleReturn) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleReturn, onSingleReturn);
}

void RxPluginsRxJavaHooks_setOnSingleSubscribeErrorWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onSingleSubscribeError) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleSubscribeError, onSingleSubscribeError);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnSingleSubscribeError() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onSingleSubscribeError);
}

void RxPluginsRxJavaHooks_setOnCompletableSubscribeErrorWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onCompletableSubscribeError) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableSubscribeError, onCompletableSubscribeError);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnCompletableSubscribeError() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onCompletableSubscribeError);
}

void RxPluginsRxJavaHooks_setOnObservableSubscribeErrorWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onObservableSubscribeError) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableSubscribeError, onObservableSubscribeError);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnObservableSubscribeError() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onObservableSubscribeError);
}

void RxPluginsRxJavaHooks_setOnObservableLiftWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onObservableLift) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableLift, onObservableLift);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnObservableLift() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onObservableLift);
}

void RxPluginsRxJavaHooks_setOnSingleLiftWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onSingleLift) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleLift, onSingleLift);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnSingleLift() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onSingleLift);
}

void RxPluginsRxJavaHooks_setOnCompletableLiftWithRxFunctionsFunc1_(id<RxFunctionsFunc1> onCompletableLift) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableLift, onCompletableLift);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnCompletableLift() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onCompletableLift);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnComputationScheduler() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onComputationScheduler);
}

id<RxFunctionsAction1> RxPluginsRxJavaHooks_getOnError() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onError);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnIOScheduler() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onIOScheduler);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnNewThreadScheduler() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onNewThreadScheduler);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnObservableCreate() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onObservableCreate);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnScheduleAction() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onScheduleAction);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnSingleCreate() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onSingleCreate);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnCompletableCreate() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onCompletableCreate);
}

id<RxFunctionsFunc2> RxPluginsRxJavaHooks_getOnCompletableStart() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onCompletableStart);
}

id<RxFunctionsFunc2> RxPluginsRxJavaHooks_getOnObservableStart() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onObservableStart);
}

id<RxFunctionsFunc2> RxPluginsRxJavaHooks_getOnSingleStart() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onSingleStart);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnObservableReturn() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onObservableReturn);
}

id<RxFunctionsFunc1> RxPluginsRxJavaHooks_getOnSingleReturn() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onSingleReturn);
}

void RxPluginsRxJavaHooks_resetAssemblyTracking() {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  RxPluginsRxJavaHooks_initCreate();
}

void RxPluginsRxJavaHooks_clearAssemblyTracking() {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableCreate, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleCreate, nil);
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableCreate, nil);
}

void RxPluginsRxJavaHooks_enableAssemblyTracking() {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onObservableCreate, create_RxPluginsRxJavaHooks_17_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onSingleCreate, create_RxPluginsRxJavaHooks_18_init());
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onCompletableCreate, create_RxPluginsRxJavaHooks_19_init());
}

void RxPluginsRxJavaHooks_setOnGenericScheduledExecutorServiceWithRxFunctionsFunc0_(id<RxFunctionsFunc0> factory) {
  RxPluginsRxJavaHooks_initialize();
  if (JreLoadVolatileBoolean(&RxPluginsRxJavaHooks_lockdown_)) {
    return;
  }
  JreVolatileStrongAssign(&RxPluginsRxJavaHooks_onGenericScheduledExecutorService, factory);
}

id<RxFunctionsFunc0> RxPluginsRxJavaHooks_getOnGenericScheduledExecutorService() {
  RxPluginsRxJavaHooks_initialize();
  return JreLoadVolatileId(&RxPluginsRxJavaHooks_onGenericScheduledExecutorService);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxPluginsRxJavaHooks)

@implementation RxPluginsRxJavaHooks_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)callWithId:(NSException *)e {
  [((RxPluginsRxJavaErrorHandler *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getErrorHandler])) handleErrorWithNSException:e];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_1 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_1;
}

@end

void RxPluginsRxJavaHooks_1_init(RxPluginsRxJavaHooks_1 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_1 *new_RxPluginsRxJavaHooks_1_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_1, init)
}

RxPluginsRxJavaHooks_1 *create_RxPluginsRxJavaHooks_1_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_1, init)
}

@implementation RxPluginsRxJavaHooks_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxObservable_OnSubscribe>)callWithId:(RxObservable *)t1
                                    withId:(id<RxObservable_OnSubscribe>)t2 {
  return [((RxPluginsRxJavaObservableExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getObservableExecutionHook])) onSubscribeStartWithRxObservable:t1 withRxObservable_OnSubscribe:t2];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable;LRxObservable_OnSubscribe;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func2<Lrx/Observable;Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_2 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_2;
}

@end

void RxPluginsRxJavaHooks_2_init(RxPluginsRxJavaHooks_2 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_2 *new_RxPluginsRxJavaHooks_2_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_2, init)
}

RxPluginsRxJavaHooks_2 *create_RxPluginsRxJavaHooks_2_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_2, init)
}

@implementation RxPluginsRxJavaHooks_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxSubscription>)callWithId:(id<RxSubscription>)f {
  return [((RxPluginsRxJavaObservableExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getObservableExecutionHook])) onSubscribeReturnWithRxSubscription:f];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSubscription;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscription;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Subscription;Lrx/Subscription;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_3 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_3;
}

@end

void RxPluginsRxJavaHooks_3_init(RxPluginsRxJavaHooks_3 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_3 *new_RxPluginsRxJavaHooks_3_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_3, init)
}

RxPluginsRxJavaHooks_3 *create_RxPluginsRxJavaHooks_3_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_3, init)
}

@implementation RxPluginsRxJavaHooks_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxSingle_OnSubscribe>)callWithId:(RxSingle *)t1
                                withId:(id<RxSingle_OnSubscribe>)t2 {
  RxPluginsRxJavaSingleExecutionHook *hook = [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getSingleExecutionHook];
  if (hook == RxPluginsRxJavaSingleExecutionHookDefault_getInstance()) {
    return t2;
  }
  return create_RxInternalOperatorsSingleFromObservable_initWithRxObservable_OnSubscribe_([((RxPluginsRxJavaSingleExecutionHook *) nil_chk(hook)) onSubscribeStartWithRxSingle:t1 withRxObservable_OnSubscribe:create_RxInternalOperatorsSingleToObservable_initWithRxSingle_OnSubscribe_(t2)]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSingle_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSingle;LRxSingle_OnSubscribe;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func2<Lrx/Single;Lrx/Single$OnSubscribe;Lrx/Single$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_4 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_4;
}

@end

void RxPluginsRxJavaHooks_4_init(RxPluginsRxJavaHooks_4 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_4 *new_RxPluginsRxJavaHooks_4_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_4, init)
}

RxPluginsRxJavaHooks_4 *create_RxPluginsRxJavaHooks_4_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_4, init)
}

@implementation RxPluginsRxJavaHooks_5

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxSubscription>)callWithId:(id<RxSubscription>)f {
  return [((RxPluginsRxJavaSingleExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getSingleExecutionHook])) onSubscribeReturnWithRxSubscription:f];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSubscription;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscription;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Subscription;Lrx/Subscription;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_5 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_5;
}

@end

void RxPluginsRxJavaHooks_5_init(RxPluginsRxJavaHooks_5 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_5 *new_RxPluginsRxJavaHooks_5_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_5, init)
}

RxPluginsRxJavaHooks_5 *create_RxPluginsRxJavaHooks_5_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_5, init)
}

@implementation RxPluginsRxJavaHooks_6

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxCompletable_OnSubscribe>)callWithId:(RxCompletable *)t1
                                     withId:(id<RxCompletable_OnSubscribe>)t2 {
  return [((RxPluginsRxJavaCompletableExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getCompletableExecutionHook])) onSubscribeStartWithRxCompletable:t1 withRxCompletable_OnSubscribe:t2];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxCompletable_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCompletable;LRxCompletable_OnSubscribe;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func2<Lrx/Completable;Lrx/Completable$OnSubscribe;Lrx/Completable$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_6 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_6;
}

@end

void RxPluginsRxJavaHooks_6_init(RxPluginsRxJavaHooks_6 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_6 *new_RxPluginsRxJavaHooks_6_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_6, init)
}

RxPluginsRxJavaHooks_6 *create_RxPluginsRxJavaHooks_6_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_6, init)
}

@implementation RxPluginsRxJavaHooks_7

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxFunctionsAction0>)callWithId:(id<RxFunctionsAction0>)a {
  return [((RxPluginsRxJavaSchedulersHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getSchedulersHook])) onScheduleWithRxFunctionsAction0:a];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxFunctionsAction0;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxFunctionsAction0;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/functions/Action0;Lrx/functions/Action0;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_7 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_7;
}

@end

void RxPluginsRxJavaHooks_7_init(RxPluginsRxJavaHooks_7 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_7 *new_RxPluginsRxJavaHooks_7_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_7, init)
}

RxPluginsRxJavaHooks_7 *create_RxPluginsRxJavaHooks_7_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_7, init)
}

@implementation RxPluginsRxJavaHooks_8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSException *)callWithId:(NSException *)t {
  return [((RxPluginsRxJavaObservableExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getObservableExecutionHook])) onSubscribeErrorWithNSException:t];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSException;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_8 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_8;
}

@end

void RxPluginsRxJavaHooks_8_init(RxPluginsRxJavaHooks_8 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_8 *new_RxPluginsRxJavaHooks_8_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_8, init)
}

RxPluginsRxJavaHooks_8 *create_RxPluginsRxJavaHooks_8_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_8, init)
}

@implementation RxPluginsRxJavaHooks_9

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxObservable_Operator>)callWithId:(id<RxObservable_Operator>)t {
  return [((RxPluginsRxJavaObservableExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getObservableExecutionHook])) onLiftWithRxObservable_Operator:t];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxObservable_Operator;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable_Operator;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable$Operator;Lrx/Observable$Operator;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_9 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_9;
}

@end

void RxPluginsRxJavaHooks_9_init(RxPluginsRxJavaHooks_9 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_9 *new_RxPluginsRxJavaHooks_9_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_9, init)
}

RxPluginsRxJavaHooks_9 *create_RxPluginsRxJavaHooks_9_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_9, init)
}

@implementation RxPluginsRxJavaHooks_10

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSException *)callWithId:(NSException *)t {
  return [((RxPluginsRxJavaSingleExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getSingleExecutionHook])) onSubscribeErrorWithNSException:t];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSException;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_10 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_10;
}

@end

void RxPluginsRxJavaHooks_10_init(RxPluginsRxJavaHooks_10 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_10 *new_RxPluginsRxJavaHooks_10_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_10, init)
}

RxPluginsRxJavaHooks_10 *create_RxPluginsRxJavaHooks_10_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_10, init)
}

@implementation RxPluginsRxJavaHooks_11

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxObservable_Operator>)callWithId:(id<RxObservable_Operator>)t {
  return [((RxPluginsRxJavaSingleExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getSingleExecutionHook])) onLiftWithRxObservable_Operator:t];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxObservable_Operator;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable_Operator;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable$Operator;Lrx/Observable$Operator;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_11 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_11;
}

@end

void RxPluginsRxJavaHooks_11_init(RxPluginsRxJavaHooks_11 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_11 *new_RxPluginsRxJavaHooks_11_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_11, init)
}

RxPluginsRxJavaHooks_11 *create_RxPluginsRxJavaHooks_11_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_11, init)
}

@implementation RxPluginsRxJavaHooks_12

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSException *)callWithId:(NSException *)t {
  return [((RxPluginsRxJavaCompletableExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getCompletableExecutionHook])) onSubscribeErrorWithNSException:t];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSException;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_12 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_12;
}

@end

void RxPluginsRxJavaHooks_12_init(RxPluginsRxJavaHooks_12 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_12 *new_RxPluginsRxJavaHooks_12_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_12, init)
}

RxPluginsRxJavaHooks_12 *create_RxPluginsRxJavaHooks_12_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_12, init)
}

@implementation RxPluginsRxJavaHooks_13

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxCompletable_Operator>)callWithId:(id<RxCompletable_Operator>)t {
  return [((RxPluginsRxJavaCompletableExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getCompletableExecutionHook])) onLiftWithRxCompletable_Operator:t];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxCompletable_Operator;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCompletable_Operator;", "LRxPluginsRxJavaHooks;", "init__", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Completable$Operator;Lrx/Completable$Operator;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_13 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_13;
}

@end

void RxPluginsRxJavaHooks_13_init(RxPluginsRxJavaHooks_13 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_13 *new_RxPluginsRxJavaHooks_13_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_13, init)
}

RxPluginsRxJavaHooks_13 *create_RxPluginsRxJavaHooks_13_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_13, init)
}

@implementation RxPluginsRxJavaHooks_14

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxObservable_OnSubscribe>)callWithId:(id<RxObservable_OnSubscribe>)f {
  return [((RxPluginsRxJavaObservableExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getObservableExecutionHook])) onCreateWithRxObservable_OnSubscribe:f];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable_OnSubscribe;", "LRxPluginsRxJavaHooks;", "initCreate", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_14 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_14;
}

@end

void RxPluginsRxJavaHooks_14_init(RxPluginsRxJavaHooks_14 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_14 *new_RxPluginsRxJavaHooks_14_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_14, init)
}

RxPluginsRxJavaHooks_14 *create_RxPluginsRxJavaHooks_14_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_14, init)
}

@implementation RxPluginsRxJavaHooks_15

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxSingle_OnSubscribe>)callWithId:(id<RxSingle_OnSubscribe>)f {
  return [((RxPluginsRxJavaSingleExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getSingleExecutionHook])) onCreateWithRxSingle_OnSubscribe:f];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSingle_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSingle_OnSubscribe;", "LRxPluginsRxJavaHooks;", "initCreate", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Single$OnSubscribe;Lrx/Single$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_15 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_15;
}

@end

void RxPluginsRxJavaHooks_15_init(RxPluginsRxJavaHooks_15 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_15 *new_RxPluginsRxJavaHooks_15_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_15, init)
}

RxPluginsRxJavaHooks_15 *create_RxPluginsRxJavaHooks_15_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_15, init)
}

@implementation RxPluginsRxJavaHooks_16

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxCompletable_OnSubscribe>)callWithId:(id<RxCompletable_OnSubscribe>)f {
  return [((RxPluginsRxJavaCompletableExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getCompletableExecutionHook])) onCreateWithRxCompletable_OnSubscribe:f];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxCompletable_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCompletable_OnSubscribe;", "LRxPluginsRxJavaHooks;", "initCreate", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Completable$OnSubscribe;Lrx/Completable$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_16 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_16;
}

@end

void RxPluginsRxJavaHooks_16_init(RxPluginsRxJavaHooks_16 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_16 *new_RxPluginsRxJavaHooks_16_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_16, init)
}

RxPluginsRxJavaHooks_16 *create_RxPluginsRxJavaHooks_16_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_16, init)
}

@implementation RxPluginsRxJavaHooks_17

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxObservable_OnSubscribe>)callWithId:(id<RxObservable_OnSubscribe>)f {
  return create_RxInternalOperatorsOnSubscribeOnAssembly_initWithRxObservable_OnSubscribe_(f);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxObservable_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable_OnSubscribe;", "LRxPluginsRxJavaHooks;", "enableAssemblyTracking", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_17 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_17;
}

@end

void RxPluginsRxJavaHooks_17_init(RxPluginsRxJavaHooks_17 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_17 *new_RxPluginsRxJavaHooks_17_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_17, init)
}

RxPluginsRxJavaHooks_17 *create_RxPluginsRxJavaHooks_17_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_17, init)
}

@implementation RxPluginsRxJavaHooks_18

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxSingle_OnSubscribe>)callWithId:(id<RxSingle_OnSubscribe>)f {
  return create_RxInternalOperatorsOnSubscribeOnAssemblySingle_initWithRxSingle_OnSubscribe_(f);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxSingle_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSingle_OnSubscribe;", "LRxPluginsRxJavaHooks;", "enableAssemblyTracking", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Single$OnSubscribe;Lrx/Single$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_18 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_18;
}

@end

void RxPluginsRxJavaHooks_18_init(RxPluginsRxJavaHooks_18 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_18 *new_RxPluginsRxJavaHooks_18_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_18, init)
}

RxPluginsRxJavaHooks_18 *create_RxPluginsRxJavaHooks_18_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_18, init)
}

@implementation RxPluginsRxJavaHooks_19

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxPluginsRxJavaHooks_19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RxCompletable_OnSubscribe>)callWithId:(id<RxCompletable_OnSubscribe>)f {
  return create_RxInternalOperatorsOnSubscribeOnAssemblyCompletable_initWithRxCompletable_OnSubscribe_(f);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxCompletable_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCompletable_OnSubscribe;", "LRxPluginsRxJavaHooks;", "enableAssemblyTracking", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Completable$OnSubscribe;Lrx/Completable$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxPluginsRxJavaHooks_19 = { "", "rx.plugins", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxPluginsRxJavaHooks_19;
}

@end

void RxPluginsRxJavaHooks_19_init(RxPluginsRxJavaHooks_19 *self) {
  NSObject_init(self);
}

RxPluginsRxJavaHooks_19 *new_RxPluginsRxJavaHooks_19_init() {
  J2OBJC_NEW_IMPL(RxPluginsRxJavaHooks_19, init)
}

RxPluginsRxJavaHooks_19 *create_RxPluginsRxJavaHooks_19_init() {
  J2OBJC_CREATE_IMPL(RxPluginsRxJavaHooks_19, init)
}
