//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidAppApplication.h"
#include "DaggerInternalFactory.h"
#include "DaggerInternalPreconditions.h"
#include "J2ObjC_source.h"
#include "PDPartyDatabase.h"
#include "PTTestAppModule.h"
#include "PTTestAppModule_ProvidesPartyDatabaseFactory.h"
#include "javax/inject/Provider.h"

@interface PTTestAppModule_ProvidesPartyDatabaseFactory () {
 @public
  PTTestAppModule *module_;
  id<JavaxInjectProvider> applicationProvider_;
}

@end

J2OBJC_FIELD_SETTER(PTTestAppModule_ProvidesPartyDatabaseFactory, module_, PTTestAppModule *)
J2OBJC_FIELD_SETTER(PTTestAppModule_ProvidesPartyDatabaseFactory, applicationProvider_, id<JavaxInjectProvider>)

@implementation PTTestAppModule_ProvidesPartyDatabaseFactory

- (instancetype)initWithPTTestAppModule:(PTTestAppModule *)module
                withJavaxInjectProvider:(id<JavaxInjectProvider>)applicationProvider {
  PTTestAppModule_ProvidesPartyDatabaseFactory_initWithPTTestAppModule_withJavaxInjectProvider_(self, module, applicationProvider);
  return self;
}

- (PDPartyDatabase *)get {
  return DaggerInternalPreconditions_checkNotNullWithId_withNSString_([((PTTestAppModule *) nil_chk(module_)) providesPartyDatabaseWithAndroidAppApplication:[((id<JavaxInjectProvider>) nil_chk(applicationProvider_)) get]], @"Cannot return null from a non-@Nullable @Provides method");
}

+ (id<DaggerInternalFactory>)createWithPTTestAppModule:(PTTestAppModule *)module
                               withJavaxInjectProvider:(id<JavaxInjectProvider>)applicationProvider {
  return PTTestAppModule_ProvidesPartyDatabaseFactory_createWithPTTestAppModule_withJavaxInjectProvider_(module, applicationProvider);
}

- (void)dealloc {
  RELEASE_(module_);
  RELEASE_(applicationProvider_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LPDPartyDatabase;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDaggerInternalFactory;", 0x9, 2, 0, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithPTTestAppModule:withJavaxInjectProvider:);
  methods[1].selector = @selector(get);
  methods[2].selector = @selector(createWithPTTestAppModule:withJavaxInjectProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "module_", "LPTTestAppModule;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "applicationProvider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LPTTestAppModule;LJavaxInjectProvider;", "(Lcom/kgalligan/partyclicker/test/TestAppModule;Ljavax/inject/Provider<Landroid/app/Application;>;)V", "create", "(Lcom/kgalligan/partyclicker/test/TestAppModule;Ljavax/inject/Provider<Landroid/app/Application;>;)Ldagger/internal/Factory<Lcom/kgalligan/partyclicker/data/PartyDatabase;>;", "Ljavax/inject/Provider<Landroid/app/Application;>;", "Ljava/lang/Object;Ldagger/internal/Factory<Lcom/kgalligan/partyclicker/data/PartyDatabase;>;" };
  static const J2ObjcClassInfo _PTTestAppModule_ProvidesPartyDatabaseFactory = { "TestAppModule_ProvidesPartyDatabaseFactory", "com.kgalligan.partyclicker.test", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, -1, -1, 5, -1 };
  return &_PTTestAppModule_ProvidesPartyDatabaseFactory;
}

@end

void PTTestAppModule_ProvidesPartyDatabaseFactory_initWithPTTestAppModule_withJavaxInjectProvider_(PTTestAppModule_ProvidesPartyDatabaseFactory *self, PTTestAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  NSObject_init(self);
  JreAssert((module != nil), (@"com/kgalligan/partyclicker/test/TestAppModule_ProvidesPartyDatabaseFactory.java:21 condition failed: assert module != null;"));
  JreStrongAssign(&self->module_, module);
  JreAssert((applicationProvider != nil), (@"com/kgalligan/partyclicker/test/TestAppModule_ProvidesPartyDatabaseFactory.java:23 condition failed: assert applicationProvider != null;"));
  JreStrongAssign(&self->applicationProvider_, applicationProvider);
}

PTTestAppModule_ProvidesPartyDatabaseFactory *new_PTTestAppModule_ProvidesPartyDatabaseFactory_initWithPTTestAppModule_withJavaxInjectProvider_(PTTestAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  J2OBJC_NEW_IMPL(PTTestAppModule_ProvidesPartyDatabaseFactory, initWithPTTestAppModule_withJavaxInjectProvider_, module, applicationProvider)
}

PTTestAppModule_ProvidesPartyDatabaseFactory *create_PTTestAppModule_ProvidesPartyDatabaseFactory_initWithPTTestAppModule_withJavaxInjectProvider_(PTTestAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  J2OBJC_CREATE_IMPL(PTTestAppModule_ProvidesPartyDatabaseFactory, initWithPTTestAppModule_withJavaxInjectProvider_, module, applicationProvider)
}

id<DaggerInternalFactory> PTTestAppModule_ProvidesPartyDatabaseFactory_createWithPTTestAppModule_withJavaxInjectProvider_(PTTestAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  PTTestAppModule_ProvidesPartyDatabaseFactory_initialize();
  return create_PTTestAppModule_ProvidesPartyDatabaseFactory_initWithPTTestAppModule_withJavaxInjectProvider_(module, applicationProvider);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PTTestAppModule_ProvidesPartyDatabaseFactory)
