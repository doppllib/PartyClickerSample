//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxAndroidPluginsRxAndroidSchedulersHook.h"
#include "RxFunctionsAction0.h"
#include "RxScheduler.h"

inline RxAndroidPluginsRxAndroidSchedulersHook *RxAndroidPluginsRxAndroidSchedulersHook_get_DEFAULT_INSTANCE();
static RxAndroidPluginsRxAndroidSchedulersHook *RxAndroidPluginsRxAndroidSchedulersHook_DEFAULT_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxAndroidPluginsRxAndroidSchedulersHook, DEFAULT_INSTANCE, RxAndroidPluginsRxAndroidSchedulersHook *)

J2OBJC_INITIALIZED_DEFN(RxAndroidPluginsRxAndroidSchedulersHook)

@implementation RxAndroidPluginsRxAndroidSchedulersHook

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxAndroidPluginsRxAndroidSchedulersHook_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (RxAndroidPluginsRxAndroidSchedulersHook *)getDefaultInstance {
  return RxAndroidPluginsRxAndroidSchedulersHook_getDefaultInstance();
}

- (RxScheduler *)getMainThreadScheduler {
  return nil;
}

- (id<RxFunctionsAction0>)onScheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action {
  return action;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxAndroidPluginsRxAndroidSchedulersHook;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxScheduler;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxFunctionsAction0;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDefaultInstance);
  methods[2].selector = @selector(getMainThreadScheduler);
  methods[3].selector = @selector(onScheduleWithRxFunctionsAction0:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_INSTANCE", "LRxAndroidPluginsRxAndroidSchedulersHook;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "onSchedule", "LRxFunctionsAction0;", &RxAndroidPluginsRxAndroidSchedulersHook_DEFAULT_INSTANCE };
  static const J2ObjcClassInfo _RxAndroidPluginsRxAndroidSchedulersHook = { "RxAndroidSchedulersHook", "rx.android.plugins", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_RxAndroidPluginsRxAndroidSchedulersHook;
}

+ (void)initialize {
  if (self == [RxAndroidPluginsRxAndroidSchedulersHook class]) {
    JreStrongAssignAndConsume(&RxAndroidPluginsRxAndroidSchedulersHook_DEFAULT_INSTANCE, new_RxAndroidPluginsRxAndroidSchedulersHook_init());
    J2OBJC_SET_INITIALIZED(RxAndroidPluginsRxAndroidSchedulersHook)
  }
}

@end

void RxAndroidPluginsRxAndroidSchedulersHook_init(RxAndroidPluginsRxAndroidSchedulersHook *self) {
  NSObject_init(self);
}

RxAndroidPluginsRxAndroidSchedulersHook *new_RxAndroidPluginsRxAndroidSchedulersHook_init() {
  J2OBJC_NEW_IMPL(RxAndroidPluginsRxAndroidSchedulersHook, init)
}

RxAndroidPluginsRxAndroidSchedulersHook *create_RxAndroidPluginsRxAndroidSchedulersHook_init() {
  J2OBJC_CREATE_IMPL(RxAndroidPluginsRxAndroidSchedulersHook, init)
}

RxAndroidPluginsRxAndroidSchedulersHook *RxAndroidPluginsRxAndroidSchedulersHook_getDefaultInstance() {
  RxAndroidPluginsRxAndroidSchedulersHook_initialize();
  return RxAndroidPluginsRxAndroidSchedulersHook_DEFAULT_INSTANCE;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxAndroidPluginsRxAndroidSchedulersHook)
