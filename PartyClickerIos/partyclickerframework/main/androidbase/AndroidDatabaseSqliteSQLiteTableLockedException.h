//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/core-doppl/androidbase/src/main/java/android/database/sqlite/SQLiteTableLockedException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTableLockedException")
#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteTableLockedException
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTableLockedException 0
#else
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTableLockedException 1
#endif
#undef RESTRICT_AndroidDatabaseSqliteSQLiteTableLockedException

#if !defined (AndroidDatabaseSqliteSQLiteTableLockedException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTableLockedException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteTableLockedException))
#define AndroidDatabaseSqliteSQLiteTableLockedException_

#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
#include "AndroidDatabaseSqliteSQLiteException.h"

@interface AndroidDatabaseSqliteSQLiteTableLockedException : AndroidDatabaseSqliteSQLiteException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)error;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteTableLockedException)

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteTableLockedException_init(AndroidDatabaseSqliteSQLiteTableLockedException *self);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteTableLockedException *new_AndroidDatabaseSqliteSQLiteTableLockedException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteTableLockedException *create_AndroidDatabaseSqliteSQLiteTableLockedException_init();

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteTableLockedException_initWithNSString_(AndroidDatabaseSqliteSQLiteTableLockedException *self, NSString *error);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteTableLockedException *new_AndroidDatabaseSqliteSQLiteTableLockedException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteTableLockedException *create_AndroidDatabaseSqliteSQLiteTableLockedException_initWithNSString_(NSString *error);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteTableLockedException)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTableLockedException")
