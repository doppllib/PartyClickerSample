//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidDatabaseCursor.h"
#include "CoTouchlabSqueakyDaoModelDao.h"
#include "CoTouchlabSqueakyDaoSelectIterator.h"
#include "CoTouchlabSqueakyTableGeneratedTableMapper.h"
#include "CoTouchlabSqueakyTableTransientCache.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/sql/SQLException.h"
#include "java/util/Iterator.h"
#include "java/util/function/Consumer.h"

@interface CoTouchlabSqueakyDaoSelectIterator () {
 @public
  id<AndroidDatabaseCursor> cursor_;
  CoTouchlabSqueakyDaoModelDao *modelDao_;
  id<CoTouchlabSqueakyTableGeneratedTableMapper> generatedTableMapper_;
  CoTouchlabSqueakyTableTransientCache *objectCache_;
  IOSObjectArray *foreignRefreshMap_;
}

- (id)makeData;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoSelectIterator, cursor_, id<AndroidDatabaseCursor>)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoSelectIterator, modelDao_, CoTouchlabSqueakyDaoModelDao *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoSelectIterator, generatedTableMapper_, id<CoTouchlabSqueakyTableGeneratedTableMapper>)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoSelectIterator, objectCache_, CoTouchlabSqueakyTableTransientCache *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoSelectIterator, foreignRefreshMap_, IOSObjectArray *)

__attribute__((unused)) static id CoTouchlabSqueakyDaoSelectIterator_makeData(CoTouchlabSqueakyDaoSelectIterator *self);

@implementation CoTouchlabSqueakyDaoSelectIterator

- (instancetype)initWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
             withCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)modelDao
withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap {
  CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, cursor, modelDao, foreignRefreshMap);
  return self;
}

- (void)closeQuietly {
  @try {
    [self close];
  }
  @catch (JavaLangException *e) {
  }
}

- (void)moveToNext {
  [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveToNext];
}

- (id)first {
  return [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveToFirst] ? CoTouchlabSqueakyDaoSelectIterator_makeData(self) : nil;
}

- (id)previous {
  return [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveToPrevious] ? CoTouchlabSqueakyDaoSelectIterator_makeData(self) : nil;
}

- (id)current {
  return CoTouchlabSqueakyDaoSelectIterator_makeData(self);
}

- (id)nextThrow {
  return [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveToNext] ? CoTouchlabSqueakyDaoSelectIterator_makeData(self) : nil;
}

- (id)moveRelativeWithInt:(jint)offset {
  return [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveWithInt:offset] ? CoTouchlabSqueakyDaoSelectIterator_makeData(self) : nil;
}

- (void)close {
  [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) close];
}

- (jboolean)hasNext {
  jboolean next = [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveToNext];
  [cursor_ moveToPrevious];
  return next;
}

- (id)next {
  @try {
    return [self nextThrow];
  }
  @catch (JavaSqlSQLException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Can't remove from cursor");
}

- (id)makeData {
  return CoTouchlabSqueakyDaoSelectIterator_makeData(self);
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(cursor_);
  RELEASE_(modelDao_);
  RELEASE_(generatedTableMapper_);
  RELEASE_(objectCache_);
  RELEASE_(foreignRefreshMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 2, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 2, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 2, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 2, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, 2, 6, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidDatabaseCursor:withCoTouchlabSqueakyDaoModelDao:withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:);
  methods[1].selector = @selector(closeQuietly);
  methods[2].selector = @selector(moveToNext);
  methods[3].selector = @selector(first);
  methods[4].selector = @selector(previous);
  methods[5].selector = @selector(current);
  methods[6].selector = @selector(nextThrow);
  methods[7].selector = @selector(moveRelativeWithInt:);
  methods[8].selector = @selector(close);
  methods[9].selector = @selector(hasNext);
  methods[10].selector = @selector(next);
  methods[11].selector = @selector(remove);
  methods[12].selector = @selector(makeData);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cursor_", "LAndroidDatabaseCursor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "modelDao_", "LCoTouchlabSqueakyDaoModelDao;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
    { "generatedTableMapper_", "LCoTouchlabSqueakyTableGeneratedTableMapper;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "objectCache_", "LCoTouchlabSqueakyTableTransientCache;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "foreignRefreshMap_", "[LCoTouchlabSqueakyDaoDao_ForeignRefresh;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidDatabaseCursor;LCoTouchlabSqueakyDaoModelDao;[LCoTouchlabSqueakyDaoDao_ForeignRefresh;", "(Landroid/database/Cursor;Lco/touchlab/squeaky/dao/ModelDao<TT;>;[Lco/touchlab/squeaky/dao/Dao$ForeignRefresh;)V", "LJavaSqlSQLException;", "()TT;", "moveRelative", "I", "(I)TT;", "LJavaIoIOException;", "Lco/touchlab/squeaky/dao/ModelDao<TT;>;", "Lco/touchlab/squeaky/table/GeneratedTableMapper<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lco/touchlab/squeaky/dao/CloseableIterator<TT;>;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoSelectIterator = { "SelectIterator", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0x1, 13, 5, -1, -1, -1, 10, -1 };
  return &_CoTouchlabSqueakyDaoSelectIterator;
}

@end

void CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyDaoSelectIterator *self, id<AndroidDatabaseCursor> cursor, CoTouchlabSqueakyDaoModelDao *modelDao, IOSObjectArray *foreignRefreshMap) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->objectCache_, new_CoTouchlabSqueakyTableTransientCache_init());
  JreStrongAssign(&self->cursor_, cursor);
  JreStrongAssign(&self->modelDao_, modelDao);
  JreStrongAssign(&self->foreignRefreshMap_, foreignRefreshMap);
  JreStrongAssign(&self->generatedTableMapper_, [((CoTouchlabSqueakyDaoModelDao *) nil_chk(modelDao)) getGeneratedTableMapper]);
}

CoTouchlabSqueakyDaoSelectIterator *new_CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(id<AndroidDatabaseCursor> cursor, CoTouchlabSqueakyDaoModelDao *modelDao, IOSObjectArray *foreignRefreshMap) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoSelectIterator, initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_, cursor, modelDao, foreignRefreshMap)
}

CoTouchlabSqueakyDaoSelectIterator *create_CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(id<AndroidDatabaseCursor> cursor, CoTouchlabSqueakyDaoModelDao *modelDao, IOSObjectArray *foreignRefreshMap) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoSelectIterator, initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_, cursor, modelDao, foreignRefreshMap)
}

id CoTouchlabSqueakyDaoSelectIterator_makeData(CoTouchlabSqueakyDaoSelectIterator *self) {
  id data = [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) createObjectWithAndroidDatabaseCursor:self->cursor_];
  [self->generatedTableMapper_ fillRowWithId:data withAndroidDatabaseCursor:self->cursor_ withCoTouchlabSqueakyDaoModelDao:self->modelDao_ withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:self->foreignRefreshMap_ withCoTouchlabSqueakyTableTransientCache:self->objectCache_];
  return data;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoSelectIterator)
