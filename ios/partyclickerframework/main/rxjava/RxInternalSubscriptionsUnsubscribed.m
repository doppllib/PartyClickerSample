//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxInternalSubscriptionsUnsubscribed.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static void RxInternalSubscriptionsUnsubscribed_initWithNSString_withInt_(RxInternalSubscriptionsUnsubscribed *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(RxInternalSubscriptionsUnsubscribed)

RxInternalSubscriptionsUnsubscribed *RxInternalSubscriptionsUnsubscribed_values_[1];

@implementation RxInternalSubscriptionsUnsubscribed

- (jboolean)isUnsubscribed {
  return true;
}

- (void)unsubscribe {
}

+ (IOSObjectArray *)values {
  return RxInternalSubscriptionsUnsubscribed_values();
}

+ (RxInternalSubscriptionsUnsubscribed *)valueOfWithNSString:(NSString *)name {
  return RxInternalSubscriptionsUnsubscribed_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LRxInternalSubscriptionsUnsubscribed;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxInternalSubscriptionsUnsubscribed;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isUnsubscribed);
  methods[1].selector = @selector(unsubscribe);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LRxInternalSubscriptionsUnsubscribed;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(RxInternalSubscriptionsUnsubscribed, INSTANCE), "Ljava/lang/Enum<Lrx/internal/subscriptions/Unsubscribed;>;Lrx/Subscription;" };
  static const J2ObjcClassInfo _RxInternalSubscriptionsUnsubscribed = { "Unsubscribed", "rx.internal.subscriptions", ptrTable, methods, fields, 7, 0x4011, 4, 1, -1, -1, -1, 3, -1 };
  return &_RxInternalSubscriptionsUnsubscribed;
}

+ (void)initialize {
  if (self == [RxInternalSubscriptionsUnsubscribed class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 1 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"INSTANCE",
    };
    for (jint i = 0; i < 1; i++) {
      (RxInternalSubscriptionsUnsubscribed_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      RxInternalSubscriptionsUnsubscribed_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(RxInternalSubscriptionsUnsubscribed)
  }
}

@end

void RxInternalSubscriptionsUnsubscribed_initWithNSString_withInt_(RxInternalSubscriptionsUnsubscribed *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *RxInternalSubscriptionsUnsubscribed_values() {
  RxInternalSubscriptionsUnsubscribed_initialize();
  return [IOSObjectArray arrayWithObjects:RxInternalSubscriptionsUnsubscribed_values_ count:1 type:RxInternalSubscriptionsUnsubscribed_class_()];
}

RxInternalSubscriptionsUnsubscribed *RxInternalSubscriptionsUnsubscribed_valueOfWithNSString_(NSString *name) {
  RxInternalSubscriptionsUnsubscribed_initialize();
  for (int i = 0; i < 1; i++) {
    RxInternalSubscriptionsUnsubscribed *e = RxInternalSubscriptionsUnsubscribed_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

RxInternalSubscriptionsUnsubscribed *RxInternalSubscriptionsUnsubscribed_fromOrdinal(NSUInteger ordinal) {
  RxInternalSubscriptionsUnsubscribed_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return RxInternalSubscriptionsUnsubscribed_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalSubscriptionsUnsubscribed)
