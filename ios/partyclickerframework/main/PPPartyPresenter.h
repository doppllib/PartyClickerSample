//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PPPartyPresenter")
#ifdef RESTRICT_PPPartyPresenter
#define INCLUDE_ALL_PPPartyPresenter 0
#else
#define INCLUDE_ALL_PPPartyPresenter 1
#endif
#undef RESTRICT_PPPartyPresenter
#ifdef INCLUDE_PPPartyPresenter_EmptyUiInterface
#define INCLUDE_PPPartyPresenter_UiInterface 1
#endif

#if !defined (PPPartyPresenter_) && (INCLUDE_ALL_PPPartyPresenter || defined(INCLUDE_PPPartyPresenter))
#define PPPartyPresenter_

@class PDParty;
@protocol PDDataProvider;
@protocol PPCrashReporter;
@protocol PPPartyPresenter_UiInterface;
@protocol RxObservable_Transformer;

@interface PPPartyPresenter : NSObject {
 @public
  id<PDDataProvider> databaseHelper_;
  id<PPCrashReporter> crashReporter_;
  id<RxObservable_Transformer> schedulerTransformer_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)partyId;

- (void)addPerson;

- (void)applyUiInterfaceWithPPPartyPresenter_UiInterface:(id<PPPartyPresenter_UiInterface>)uiInterface;

- (void)clearUiInterface;

- (PDParty *)getParty;

- (jint)getPartyCount;

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (jboolean)isRemoveActive;

- (void)removePerson;

@end

J2OBJC_EMPTY_STATIC_INIT(PPPartyPresenter)

J2OBJC_FIELD_SETTER(PPPartyPresenter, databaseHelper_, id<PDDataProvider>)
J2OBJC_FIELD_SETTER(PPPartyPresenter, crashReporter_, id<PPCrashReporter>)
J2OBJC_FIELD_SETTER(PPPartyPresenter, schedulerTransformer_, id<RxObservable_Transformer>)

FOUNDATION_EXPORT void PPPartyPresenter_initWithInt_(PPPartyPresenter *self, jint partyId);

FOUNDATION_EXPORT PPPartyPresenter *new_PPPartyPresenter_initWithInt_(jint partyId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PPPartyPresenter *create_PPPartyPresenter_initWithInt_(jint partyId);

J2OBJC_TYPE_LITERAL_HEADER(PPPartyPresenter)

@compatibility_alias ComKgalliganPartyclickerPresenterPartyPresenter PPPartyPresenter;

#endif

#if !defined (PPPartyPresenter_UiInterface_) && (INCLUDE_ALL_PPPartyPresenter || defined(INCLUDE_PPPartyPresenter_UiInterface))
#define PPPartyPresenter_UiInterface_

@protocol PPPartyPresenter_UiInterface < JavaObject >

- (void)processingWithBoolean:(jboolean)b;

- (void)updateUi;

@end

J2OBJC_EMPTY_STATIC_INIT(PPPartyPresenter_UiInterface)

J2OBJC_TYPE_LITERAL_HEADER(PPPartyPresenter_UiInterface)

#endif

#if !defined (PPPartyPresenter_PartyInfo_) && (INCLUDE_ALL_PPPartyPresenter || defined(INCLUDE_PPPartyPresenter_PartyInfo))
#define PPPartyPresenter_PartyInfo_

@class PDParty;

@interface PPPartyPresenter_PartyInfo : NSObject {
 @public
  PDParty *party_;
  jint partyCount_;
}

#pragma mark Public

- (instancetype)initWithPDParty:(PDParty *)party
                        withInt:(jint)partyCount;

@end

J2OBJC_EMPTY_STATIC_INIT(PPPartyPresenter_PartyInfo)

J2OBJC_FIELD_SETTER(PPPartyPresenter_PartyInfo, party_, PDParty *)

FOUNDATION_EXPORT void PPPartyPresenter_PartyInfo_initWithPDParty_withInt_(PPPartyPresenter_PartyInfo *self, PDParty *party, jint partyCount);

FOUNDATION_EXPORT PPPartyPresenter_PartyInfo *new_PPPartyPresenter_PartyInfo_initWithPDParty_withInt_(PDParty *party, jint partyCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PPPartyPresenter_PartyInfo *create_PPPartyPresenter_PartyInfo_initWithPDParty_withInt_(PDParty *party, jint partyCount);

J2OBJC_TYPE_LITERAL_HEADER(PPPartyPresenter_PartyInfo)

#endif

#if !defined (PPPartyPresenter_EmptyUiInterface_) && (INCLUDE_ALL_PPPartyPresenter || defined(INCLUDE_PPPartyPresenter_EmptyUiInterface))
#define PPPartyPresenter_EmptyUiInterface_

@interface PPPartyPresenter_EmptyUiInterface : NSObject < PPPartyPresenter_UiInterface >

#pragma mark Public

- (void)processingWithBoolean:(jboolean)b;

- (void)updateUi;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(PPPartyPresenter_EmptyUiInterface)

FOUNDATION_EXPORT void PPPartyPresenter_EmptyUiInterface_init(PPPartyPresenter_EmptyUiInterface *self);

FOUNDATION_EXPORT PPPartyPresenter_EmptyUiInterface *new_PPPartyPresenter_EmptyUiInterface_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PPPartyPresenter_EmptyUiInterface *create_PPPartyPresenter_EmptyUiInterface_init();

J2OBJC_TYPE_LITERAL_HEADER(PPPartyPresenter_EmptyUiInterface)

#endif

#pragma pop_macro("INCLUDE_ALL_PPPartyPresenter")
