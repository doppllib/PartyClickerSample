//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsCompositeException.h"
#include "RxFunctionsAction0.h"
#include "RxInternalOperatorsBackpressureUtils.h"
#include "RxInternalOperatorsNotificationLite.h"
#include "RxInternalOperatorsOperatorSwitch.h"
#include "RxInternalUtilAtomicSpscLinkedArrayQueue.h"
#include "RxInternalUtilRxRingBuffer.h"
#include "RxObservable.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxProducer.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSerialSubscription.h"
#include "RxSubscriptionsSubscriptions.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/concurrent/atomic/AtomicLong.h"

@interface RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorSwitch_SwitchSubscriber *this$0_;
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber:(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *)outer$;

- (void)call;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1 *self, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1 *new_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1 *create_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$);

@interface RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorSwitch_SwitchSubscriber *this$0_;
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber:(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *)outer$;

- (void)requestWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2 *self, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2 *new_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2 *create_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$);

@interface RxInternalOperatorsOperatorSwitch_InnerSubscriber () {
 @public
  jlong id__;
  RxInternalOperatorsOperatorSwitch_SwitchSubscriber *parent_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitch_InnerSubscriber, parent_, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *)

@implementation RxInternalOperatorsOperatorSwitch

+ (RxInternalOperatorsOperatorSwitch *)instanceWithBoolean:(jboolean)delayError {
  return RxInternalOperatorsOperatorSwitch_instanceWithBoolean_(delayError);
}

- (instancetype)initWithBoolean:(jboolean)delayError {
  RxInternalOperatorsOperatorSwitch_initWithBoolean_(self, delayError);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  RxInternalOperatorsOperatorSwitch_SwitchSubscriber *sws = create_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_initWithRxSubscriber_withBoolean_(child, delayError_);
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:sws];
  [sws init__];
  return sws;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxInternalOperatorsOperatorSwitch;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "LRxSubscriber;", 0x1, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(instanceWithBoolean:);
  methods[1].selector = @selector(initWithBoolean:);
  methods[2].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delayError_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "instance", "Z", "<T:Ljava/lang/Object;>(Z)Lrx/internal/operators/OperatorSwitch<TT;>;", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<-Lrx/Observable<+TT;>;>;", "LRxInternalOperatorsOperatorSwitch_Holder;LRxInternalOperatorsOperatorSwitch_HolderDelayError;LRxInternalOperatorsOperatorSwitch_SwitchSubscriber;LRxInternalOperatorsOperatorSwitch_InnerSubscriber;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;Lrx/Observable<+TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitch = { "OperatorSwitch", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, 6, -1, 7, -1 };
  return &_RxInternalOperatorsOperatorSwitch;
}

@end

RxInternalOperatorsOperatorSwitch *RxInternalOperatorsOperatorSwitch_instanceWithBoolean_(jboolean delayError) {
  RxInternalOperatorsOperatorSwitch_initialize();
  if (delayError) {
    return JreLoadStatic(RxInternalOperatorsOperatorSwitch_HolderDelayError, INSTANCE);
  }
  return JreLoadStatic(RxInternalOperatorsOperatorSwitch_Holder, INSTANCE);
}

void RxInternalOperatorsOperatorSwitch_initWithBoolean_(RxInternalOperatorsOperatorSwitch *self, jboolean delayError) {
  NSObject_init(self);
  self->delayError_ = delayError;
}

RxInternalOperatorsOperatorSwitch *new_RxInternalOperatorsOperatorSwitch_initWithBoolean_(jboolean delayError) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitch, initWithBoolean_, delayError)
}

RxInternalOperatorsOperatorSwitch *create_RxInternalOperatorsOperatorSwitch_initWithBoolean_(jboolean delayError) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitch, initWithBoolean_, delayError)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSwitch)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorSwitch_Holder)

RxInternalOperatorsOperatorSwitch *RxInternalOperatorsOperatorSwitch_Holder_INSTANCE;

@implementation RxInternalOperatorsOperatorSwitch_Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitch_Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LRxInternalOperatorsOperatorSwitch;", .constantValue.asLong = 0, 0x18, -1, 0, 1, -1 },
  };
  static const void *ptrTable[] = { &RxInternalOperatorsOperatorSwitch_Holder_INSTANCE, "Lrx/internal/operators/OperatorSwitch<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorSwitch;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitch_Holder = { "Holder", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 1, 1, 2, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitch_Holder;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorSwitch_Holder class]) {
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorSwitch_Holder_INSTANCE, new_RxInternalOperatorsOperatorSwitch_initWithBoolean_(false));
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorSwitch_Holder)
  }
}

@end

void RxInternalOperatorsOperatorSwitch_Holder_init(RxInternalOperatorsOperatorSwitch_Holder *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitch_Holder *new_RxInternalOperatorsOperatorSwitch_Holder_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitch_Holder, init)
}

RxInternalOperatorsOperatorSwitch_Holder *create_RxInternalOperatorsOperatorSwitch_Holder_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitch_Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSwitch_Holder)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorSwitch_HolderDelayError)

RxInternalOperatorsOperatorSwitch *RxInternalOperatorsOperatorSwitch_HolderDelayError_INSTANCE;

@implementation RxInternalOperatorsOperatorSwitch_HolderDelayError

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitch_HolderDelayError_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LRxInternalOperatorsOperatorSwitch;", .constantValue.asLong = 0, 0x18, -1, 0, 1, -1 },
  };
  static const void *ptrTable[] = { &RxInternalOperatorsOperatorSwitch_HolderDelayError_INSTANCE, "Lrx/internal/operators/OperatorSwitch<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorSwitch;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitch_HolderDelayError = { "HolderDelayError", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 1, 1, 2, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitch_HolderDelayError;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorSwitch_HolderDelayError class]) {
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorSwitch_HolderDelayError_INSTANCE, new_RxInternalOperatorsOperatorSwitch_initWithBoolean_(true));
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorSwitch_HolderDelayError)
  }
}

@end

void RxInternalOperatorsOperatorSwitch_HolderDelayError_init(RxInternalOperatorsOperatorSwitch_HolderDelayError *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitch_HolderDelayError *new_RxInternalOperatorsOperatorSwitch_HolderDelayError_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitch_HolderDelayError, init)
}

RxInternalOperatorsOperatorSwitch_HolderDelayError *create_RxInternalOperatorsOperatorSwitch_HolderDelayError_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitch_HolderDelayError, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSwitch_HolderDelayError)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorSwitch_SwitchSubscriber)

NSException *RxInternalOperatorsOperatorSwitch_SwitchSubscriber_TERMINAL_ERROR;

@implementation RxInternalOperatorsOperatorSwitch_SwitchSubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
                         withBoolean:(jboolean)delayError {
  RxInternalOperatorsOperatorSwitch_SwitchSubscriber_initWithRxSubscriber_withBoolean_(self, child, delayError);
  return self;
}

- (void)init__ {
  [((RxSubscriber *) nil_chk(child_)) addWithRxSubscription:serial_];
  [child_ addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(create_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(self))];
  [child_ setProducerWithRxProducer:create_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(self)];
}

- (void)clearProducer {
  @synchronized(self) {
    JreStrongAssign(&producer_SwitchSubscriber_, nil);
  }
}

- (void)onNextWithId:(RxObservable *)t {
  jlong id_ = [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(index_)) incrementAndGet];
  id<RxSubscription> s = [((RxSubscriptionsSerialSubscription *) nil_chk(serial_)) get];
  if (s != nil) {
    [s unsubscribe];
  }
  RxInternalOperatorsOperatorSwitch_InnerSubscriber *inner;
  @synchronized(self) {
    inner = create_RxInternalOperatorsOperatorSwitch_InnerSubscriber_initWithLong_withRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(id_, self);
    innerActive_ = true;
    JreStrongAssign(&producer_SwitchSubscriber_, nil);
  }
  [serial_ setWithRxSubscription:inner];
  [((RxObservable *) nil_chk(t)) unsafeSubscribeWithRxSubscriber:inner];
}

- (void)onErrorWithNSException:(NSException *)e {
  jboolean success;
  @synchronized(self) {
    success = [self updateErrorWithNSException:e];
  }
  if (success) {
    JreAssignVolatileBoolean(&mainDone_, true);
    [self drain];
  }
  else {
    [self pluginErrorWithNSException:e];
  }
}

- (jboolean)updateErrorWithNSException:(NSException *)next {
  NSException *e = error_;
  if (e == RxInternalOperatorsOperatorSwitch_SwitchSubscriber_TERMINAL_ERROR) {
    return false;
  }
  else if (e == nil) {
    JreStrongAssign(&error_, next);
  }
  else if ([e isKindOfClass:[RxExceptionsCompositeException class]]) {
    id<JavaUtilList> list = create_JavaUtilArrayList_initWithJavaUtilCollection_([((RxExceptionsCompositeException *) cast_chk(e, [RxExceptionsCompositeException class])) getExceptions]);
    [list addWithId:next];
    JreStrongAssignAndConsume(&error_, new_RxExceptionsCompositeException_initWithJavaUtilCollection_(list));
  }
  else {
    JreStrongAssignAndConsume(&error_, new_RxExceptionsCompositeException_initWithNSExceptionArray_([IOSObjectArray arrayWithObjects:(id[]){ e, next } count:2 type:NSException_class_()]));
  }
  return true;
}

- (void)onCompleted {
  JreAssignVolatileBoolean(&mainDone_, true);
  [self drain];
}

- (void)emitWithId:(id)value
withRxInternalOperatorsOperatorSwitch_InnerSubscriber:(RxInternalOperatorsOperatorSwitch_InnerSubscriber *)inner {
  @synchronized(self) {
    if ([((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(index_)) get] != ((RxInternalOperatorsOperatorSwitch_InnerSubscriber *) nil_chk(inner))->id__) {
      return;
    }
    [((RxInternalUtilAtomicSpscLinkedArrayQueue *) nil_chk(queue_)) offerWithId:inner withId:RxInternalOperatorsNotificationLite_nextWithId_(value)];
  }
  [self drain];
}

- (void)errorWithNSException:(NSException *)e
                    withLong:(jlong)id_ {
  jboolean success;
  @synchronized(self) {
    if ([((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(index_)) get] == id_) {
      success = [self updateErrorWithNSException:e];
      innerActive_ = false;
      JreStrongAssign(&producer_SwitchSubscriber_, nil);
    }
    else {
      success = true;
    }
  }
  if (success) {
    [self drain];
  }
  else {
    [self pluginErrorWithNSException:e];
  }
}

- (void)completeWithLong:(jlong)id_ {
  @synchronized(self) {
    if ([((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(index_)) get] != id_) {
      return;
    }
    innerActive_ = false;
    JreStrongAssign(&producer_SwitchSubscriber_, nil);
  }
  [self drain];
}

- (void)pluginErrorWithNSException:(NSException *)e {
  RxPluginsRxJavaHooks_onErrorWithNSException_(e);
}

- (void)innerProducerWithRxProducer:(id<RxProducer>)p
                           withLong:(jlong)id_ {
  jlong n;
  @synchronized(self) {
    if ([((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(index_)) get] != id_) {
      return;
    }
    n = requested_SwitchSubscriber_;
    JreStrongAssign(&producer_SwitchSubscriber_, p);
  }
  [((id<RxProducer>) nil_chk(p)) requestWithLong:n];
}

- (void)childRequestedWithLong:(jlong)n {
  id<RxProducer> p;
  @synchronized(self) {
    p = producer_SwitchSubscriber_;
    requested_SwitchSubscriber_ = RxInternalOperatorsBackpressureUtils_addCapWithLong_withLong_(requested_SwitchSubscriber_, n);
  }
  if (p != nil) {
    [p requestWithLong:n];
  }
  [self drain];
}

- (void)drain {
  jboolean localInnerActive;
  jlong localRequested;
  NSException *localError;
  @synchronized(self) {
    if (emitting_) {
      missed_ = true;
      return;
    }
    emitting_ = true;
    localInnerActive = innerActive_;
    localRequested = requested_SwitchSubscriber_;
    localError = error_;
    if (localError != nil && localError != RxInternalOperatorsOperatorSwitch_SwitchSubscriber_TERMINAL_ERROR && !delayError_) {
      JreStrongAssign(&error_, RxInternalOperatorsOperatorSwitch_SwitchSubscriber_TERMINAL_ERROR);
    }
  }
  RxInternalUtilAtomicSpscLinkedArrayQueue *localQueue = queue_;
  JavaUtilConcurrentAtomicAtomicLong *localIndex = index_;
  RxSubscriber *localChild = child_;
  jboolean localMainDone = JreLoadVolatileBoolean(&mainDone_);
  for (; ; ) {
    jlong localEmission = 0LL;
    while (localEmission != localRequested) {
      if ([((RxSubscriber *) nil_chk(localChild)) isUnsubscribed]) {
        return;
      }
      jboolean empty = [((RxInternalUtilAtomicSpscLinkedArrayQueue *) nil_chk(localQueue)) isEmpty];
      if ([self checkTerminatedWithBoolean:localMainDone withBoolean:localInnerActive withNSException:localError withRxInternalUtilAtomicSpscLinkedArrayQueue:localQueue withRxSubscriber:localChild withBoolean:empty]) {
        return;
      }
      if (empty) {
        break;
      }
      RxInternalOperatorsOperatorSwitch_InnerSubscriber *inner = (RxInternalOperatorsOperatorSwitch_InnerSubscriber *) cast_chk([localQueue poll], [RxInternalOperatorsOperatorSwitch_InnerSubscriber class]);
      id value = RxInternalOperatorsNotificationLite_getValueWithId_([localQueue poll]);
      if ([((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(localIndex)) get] == ((RxInternalOperatorsOperatorSwitch_InnerSubscriber *) nil_chk(inner))->id__) {
        [localChild onNextWithId:value];
        localEmission++;
      }
    }
    if (localEmission == localRequested) {
      if ([((RxSubscriber *) nil_chk(localChild)) isUnsubscribed]) {
        return;
      }
      if ([self checkTerminatedWithBoolean:JreLoadVolatileBoolean(&mainDone_) withBoolean:localInnerActive withNSException:localError withRxInternalUtilAtomicSpscLinkedArrayQueue:localQueue withRxSubscriber:localChild withBoolean:[((RxInternalUtilAtomicSpscLinkedArrayQueue *) nil_chk(localQueue)) isEmpty]]) {
        return;
      }
    }
    @synchronized(self) {
      localRequested = requested_SwitchSubscriber_;
      if (localRequested != JavaLangLong_MAX_VALUE) {
        localRequested -= localEmission;
        requested_SwitchSubscriber_ = localRequested;
      }
      if (!missed_) {
        emitting_ = false;
        return;
      }
      missed_ = false;
      localMainDone = JreLoadVolatileBoolean(&mainDone_);
      localInnerActive = innerActive_;
      localError = error_;
      if (localError != nil && localError != RxInternalOperatorsOperatorSwitch_SwitchSubscriber_TERMINAL_ERROR && !delayError_) {
        JreStrongAssign(&error_, RxInternalOperatorsOperatorSwitch_SwitchSubscriber_TERMINAL_ERROR);
      }
    }
  }
}

- (jboolean)checkTerminatedWithBoolean:(jboolean)localMainDone
                           withBoolean:(jboolean)localInnerActive
                       withNSException:(NSException *)localError
withRxInternalUtilAtomicSpscLinkedArrayQueue:(RxInternalUtilAtomicSpscLinkedArrayQueue *)localQueue
                      withRxSubscriber:(RxSubscriber *)localChild
                           withBoolean:(jboolean)empty {
  if (delayError_) {
    if (localMainDone && !localInnerActive && empty) {
      if (localError != nil) {
        [((RxSubscriber *) nil_chk(localChild)) onErrorWithNSException:localError];
      }
      else {
        [((RxSubscriber *) nil_chk(localChild)) onCompleted];
      }
      return true;
    }
  }
  else {
    if (localError != nil) {
      [((RxInternalUtilAtomicSpscLinkedArrayQueue *) nil_chk(localQueue)) clear];
      [((RxSubscriber *) nil_chk(localChild)) onErrorWithNSException:localError];
      return true;
    }
    else if (localMainDone && !localInnerActive && empty) {
      [((RxSubscriber *) nil_chk(localChild)) onCompleted];
      return true;
    }
  }
  return false;
}

- (void)dealloc {
  RELEASE_(child_);
  RELEASE_(serial_);
  RELEASE_(index_);
  RELEASE_(queue_);
  RELEASE_(producer_SwitchSubscriber_);
  RELEASE_(error_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 8, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 9, 10, -1, 11, -1, -1 },
    { NULL, "V", 0x0, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 16, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 19, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 20, 21, -1, 22, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:withBoolean:);
  methods[1].selector = @selector(init__);
  methods[2].selector = @selector(clearProducer);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(onErrorWithNSException:);
  methods[5].selector = @selector(updateErrorWithNSException:);
  methods[6].selector = @selector(onCompleted);
  methods[7].selector = @selector(emitWithId:withRxInternalOperatorsOperatorSwitch_InnerSubscriber:);
  methods[8].selector = @selector(errorWithNSException:withLong:);
  methods[9].selector = @selector(completeWithLong:);
  methods[10].selector = @selector(pluginErrorWithNSException:);
  methods[11].selector = @selector(innerProducerWithRxProducer:withLong:);
  methods[12].selector = @selector(childRequestedWithLong:);
  methods[13].selector = @selector(drain);
  methods[14].selector = @selector(checkTerminatedWithBoolean:withBoolean:withNSException:withRxInternalUtilAtomicSpscLinkedArrayQueue:withRxSubscriber:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 23, -1 },
    { "serial_", "LRxSubscriptionsSerialSubscription;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delayError_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "index_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "queue_", "LRxInternalUtilAtomicSpscLinkedArrayQueue;", .constantValue.asLong = 0, 0x10, -1, -1, 24, -1 },
    { "emitting_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "missed_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "requested_SwitchSubscriber_", "J", .constantValue.asLong = 0, 0x0, 25, -1, -1, -1 },
    { "producer_SwitchSubscriber_", "LRxProducer;", .constantValue.asLong = 0, 0x0, 26, -1, -1, -1 },
    { "mainDone_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "error_", "LNSException;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "innerActive_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "TERMINAL_ERROR", "LNSException;", .constantValue.asLong = 0, 0x18, -1, 27, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;Z", "(Lrx/Subscriber<-TT;>;Z)V", "init", "onNext", "LRxObservable;", "(Lrx/Observable<+TT;>;)V", "onError", "LNSException;", "updateError", "emit", "LNSObject;LRxInternalOperatorsOperatorSwitch_InnerSubscriber;", "(TT;Lrx/internal/operators/OperatorSwitch$InnerSubscriber<TT;>;)V", "error", "LNSException;J", "complete", "J", "pluginError", "innerProducer", "LRxProducer;J", "childRequested", "checkTerminated", "ZZLNSException;LRxInternalUtilAtomicSpscLinkedArrayQueue;LRxSubscriber;Z", "(ZZLjava/lang/Throwable;Lrx/internal/util/atomic/SpscLinkedArrayQueue<Ljava/lang/Object;>;Lrx/Subscriber<-TT;>;Z)Z", "Lrx/Subscriber<-TT;>;", "Lrx/internal/util/atomic/SpscLinkedArrayQueue<Ljava/lang/Object;>;", "requested", "producer", &RxInternalOperatorsOperatorSwitch_SwitchSubscriber_TERMINAL_ERROR, "LRxInternalOperatorsOperatorSwitch;", "<T:Ljava/lang/Object;>Lrx/Subscriber<Lrx/Observable<+TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitch_SwitchSubscriber = { "SwitchSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 15, 13, 28, -1, -1, 29, -1 };
  return &_RxInternalOperatorsOperatorSwitch_SwitchSubscriber;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorSwitch_SwitchSubscriber class]) {
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorSwitch_SwitchSubscriber_TERMINAL_ERROR, new_NSException_initWithNSString_(@"Terminal error"));
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorSwitch_SwitchSubscriber)
  }
}

@end

void RxInternalOperatorsOperatorSwitch_SwitchSubscriber_initWithRxSubscriber_withBoolean_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *self, RxSubscriber *child, jboolean delayError) {
  RxSubscriber_init(self);
  JreStrongAssign(&self->child_, child);
  JreStrongAssignAndConsume(&self->serial_, new_RxSubscriptionsSerialSubscription_init());
  self->delayError_ = delayError;
  JreStrongAssignAndConsume(&self->index_, new_JavaUtilConcurrentAtomicAtomicLong_init());
  JreStrongAssignAndConsume(&self->queue_, new_RxInternalUtilAtomicSpscLinkedArrayQueue_initWithInt_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE)));
}

RxInternalOperatorsOperatorSwitch_SwitchSubscriber *new_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_initWithRxSubscriber_withBoolean_(RxSubscriber *child, jboolean delayError) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitch_SwitchSubscriber, initWithRxSubscriber_withBoolean_, child, delayError)
}

RxInternalOperatorsOperatorSwitch_SwitchSubscriber *create_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_initWithRxSubscriber_withBoolean_(RxSubscriber *child, jboolean delayError) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitch_SwitchSubscriber, initWithRxSubscriber_withBoolean_, child, delayError)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSwitch_SwitchSubscriber)

@implementation RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1

- (instancetype)initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber:(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *)outer$ {
  RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(self, outer$);
  return self;
}

- (void)call {
  [this$0_ clearProducer];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitch_SwitchSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Lrx/internal/operators/OperatorSwitch$SwitchSubscriber<TT;>;", "LRxInternalOperatorsOperatorSwitch_SwitchSubscriber;", "init__" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1;
}

@end

void RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1 *self, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1 *new_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1, initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_, outer$)
}

RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1 *create_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitch_SwitchSubscriber_1, initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2

- (instancetype)initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber:(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *)outer$ {
  RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(self, outer$);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if (n > 0LL) {
    [this$0_ childRequestedWithLong:n];
  }
  else if (n < 0LL) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"n >= 0 expected but it was ", n));
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber:);
  methods[1].selector = @selector(requestWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitch_SwitchSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "Lrx/internal/operators/OperatorSwitch$SwitchSubscriber<TT;>;", "LRxInternalOperatorsOperatorSwitch_SwitchSubscriber;", "init__" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2;
}

@end

void RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2 *self, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2 *new_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2, initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_, outer$)
}

RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2 *create_RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2_initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitch_SwitchSubscriber_2, initWithRxInternalOperatorsOperatorSwitch_SwitchSubscriber_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitch_InnerSubscriber

- (instancetype)initWithLong:(jlong)id_
withRxInternalOperatorsOperatorSwitch_SwitchSubscriber:(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *)parent {
  RxInternalOperatorsOperatorSwitch_InnerSubscriber_initWithLong_withRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(self, id_, parent);
  return self;
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  [((RxInternalOperatorsOperatorSwitch_SwitchSubscriber *) nil_chk(parent_)) innerProducerWithRxProducer:p withLong:id__];
}

- (void)onNextWithId:(id)t {
  [((RxInternalOperatorsOperatorSwitch_SwitchSubscriber *) nil_chk(parent_)) emitWithId:t withRxInternalOperatorsOperatorSwitch_InnerSubscriber:self];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxInternalOperatorsOperatorSwitch_SwitchSubscriber *) nil_chk(parent_)) errorWithNSException:e withLong:id__];
}

- (void)onCompleted {
  [((RxInternalOperatorsOperatorSwitch_SwitchSubscriber *) nil_chk(parent_)) completeWithLong:id__];
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:withRxInternalOperatorsOperatorSwitch_SwitchSubscriber:);
  methods[1].selector = @selector(setProducerWithRxProducer:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithNSException:);
  methods[4].selector = @selector(onCompleted);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "J", .constantValue.asLong = 0, 0x12, 9, -1, -1, -1 },
    { "parent_", "LRxInternalOperatorsOperatorSwitch_SwitchSubscriber;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "JLRxInternalOperatorsOperatorSwitch_SwitchSubscriber;", "(JLrx/internal/operators/OperatorSwitch$SwitchSubscriber<TT;>;)V", "setProducer", "LRxProducer;", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "id", "Lrx/internal/operators/OperatorSwitch$SwitchSubscriber<TT;>;", "LRxInternalOperatorsOperatorSwitch;", "<T:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitch_InnerSubscriber = { "InnerSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 5, 2, 11, -1, -1, 12, -1 };
  return &_RxInternalOperatorsOperatorSwitch_InnerSubscriber;
}

@end

void RxInternalOperatorsOperatorSwitch_InnerSubscriber_initWithLong_withRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_InnerSubscriber *self, jlong id_, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *parent) {
  RxSubscriber_init(self);
  self->id__ = id_;
  JreStrongAssign(&self->parent_, parent);
}

RxInternalOperatorsOperatorSwitch_InnerSubscriber *new_RxInternalOperatorsOperatorSwitch_InnerSubscriber_initWithLong_withRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(jlong id_, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *parent) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitch_InnerSubscriber, initWithLong_withRxInternalOperatorsOperatorSwitch_SwitchSubscriber_, id_, parent)
}

RxInternalOperatorsOperatorSwitch_InnerSubscriber *create_RxInternalOperatorsOperatorSwitch_InnerSubscriber_initWithLong_withRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(jlong id_, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *parent) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitch_InnerSubscriber, initWithLong_withRxInternalOperatorsOperatorSwitch_SwitchSubscriber_, id_, parent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSwitch_InnerSubscriber)
