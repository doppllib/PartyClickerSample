//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesByteObjectType")
#ifdef RESTRICT_CoTouchlabSqueakyFieldTypesByteObjectType
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesByteObjectType 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesByteObjectType 1
#endif
#undef RESTRICT_CoTouchlabSqueakyFieldTypesByteObjectType

#if !defined (CoTouchlabSqueakyFieldTypesByteObjectType_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesByteObjectType || defined(INCLUDE_CoTouchlabSqueakyFieldTypesByteObjectType))
#define CoTouchlabSqueakyFieldTypesByteObjectType_

#define RESTRICT_CoTouchlabSqueakyFieldTypesBaseDataType 1
#define INCLUDE_CoTouchlabSqueakyFieldTypesBaseDataType 1
#include "CoTouchlabSqueakyFieldTypesBaseDataType.h"

@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;
@protocol AndroidDatabaseCursor;

@interface CoTouchlabSqueakyFieldTypesByteObjectType : CoTouchlabSqueakyFieldTypesBaseDataType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesByteObjectType *)getSingleton;

- (jboolean)isEscapedValue;

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr;

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesByteObjectType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesByteObjectType *CoTouchlabSqueakyFieldTypesByteObjectType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesByteObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesByteObjectType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesByteObjectType *new_CoTouchlabSqueakyFieldTypesByteObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesByteObjectType *create_CoTouchlabSqueakyFieldTypesByteObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesByteObjectType)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesByteObjectType")
