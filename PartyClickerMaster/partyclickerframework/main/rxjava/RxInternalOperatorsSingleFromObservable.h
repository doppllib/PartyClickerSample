//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsSingleFromObservable")
#ifdef RESTRICT_RxInternalOperatorsSingleFromObservable
#define INCLUDE_ALL_RxInternalOperatorsSingleFromObservable 0
#else
#define INCLUDE_ALL_RxInternalOperatorsSingleFromObservable 1
#endif
#undef RESTRICT_RxInternalOperatorsSingleFromObservable

#if !defined (RxInternalOperatorsSingleFromObservable_) && (INCLUDE_ALL_RxInternalOperatorsSingleFromObservable || defined(INCLUDE_RxInternalOperatorsSingleFromObservable))
#define RxInternalOperatorsSingleFromObservable_

#define RESTRICT_RxSingle 1
#define INCLUDE_RxSingle_OnSubscribe 1
#include "RxSingle.h"

@class RxSingleSubscriber;
@protocol RxObservable_OnSubscribe;

@interface RxInternalOperatorsSingleFromObservable : NSObject < RxSingle_OnSubscribe > {
 @public
  id<RxObservable_OnSubscribe> source_;
}

#pragma mark Public

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)source;

- (void)callWithId:(RxSingleSubscriber *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleFromObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleFromObservable, source_, id<RxObservable_OnSubscribe>)

FOUNDATION_EXPORT void RxInternalOperatorsSingleFromObservable_initWithRxObservable_OnSubscribe_(RxInternalOperatorsSingleFromObservable *self, id<RxObservable_OnSubscribe> source);

FOUNDATION_EXPORT RxInternalOperatorsSingleFromObservable *new_RxInternalOperatorsSingleFromObservable_initWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsSingleFromObservable *create_RxInternalOperatorsSingleFromObservable_initWithRxObservable_OnSubscribe_(id<RxObservable_OnSubscribe> source);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleFromObservable)

#endif

#if !defined (RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsSingleFromObservable || defined(INCLUDE_RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber))
#define RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "RxSubscriber.h"

@class RxSingleSubscriber;

@interface RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber : RxSubscriber {
 @public
  RxSingleSubscriber *actual_;
  id value_;
  jint state_;
}

#pragma mark Public

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithRxSingleSubscriber:(RxSingleSubscriber *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber, actual_, RxSingleSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber, value_, id)

inline jint RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_get_STATE_EMPTY();
#define RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_STATE_EMPTY 0
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber, STATE_EMPTY, jint)

inline jint RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_get_STATE_HAS_VALUE();
#define RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_STATE_HAS_VALUE 1
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber, STATE_HAS_VALUE, jint)

inline jint RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_get_STATE_DONE();
#define RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_STATE_DONE 2
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber, STATE_DONE, jint)

FOUNDATION_EXPORT void RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_initWithRxSingleSubscriber_(RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber *self, RxSingleSubscriber *actual);

FOUNDATION_EXPORT RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber *new_RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_initWithRxSingleSubscriber_(RxSingleSubscriber *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber *create_RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber_initWithRxSingleSubscriber_(RxSingleSubscriber *actual);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleFromObservable_WrapSingleIntoSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsSingleFromObservable")
