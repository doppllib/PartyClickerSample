//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/core/src/main/java/co/touchlab/squeaky/field/types/BaseDateType.java
//

#include "CoTouchlabSqueakyFieldFieldType.h"
#include "CoTouchlabSqueakyFieldSqlType.h"
#include "CoTouchlabSqueakyFieldTypesBaseDataType.h"
#include "CoTouchlabSqueakyFieldTypesBaseDateType.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ThreadLocal.h"
#include "java/text/DateFormat.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"

@interface CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig () {
 @public
  JavaLangThreadLocal *threadLocal_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig, threadLocal_, JavaLangThreadLocal *)

@interface CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 : JavaLangThreadLocal {
 @public
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *this$0_;
}

- (JavaTextDateFormat *)initialValue OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1, this$0_, CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)

__attribute__((unused)) static void CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *self, CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *create_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$);

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyFieldTypesBaseDateType)

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *CoTouchlabSqueakyFieldTypesBaseDateType_defaultDateFormatConfig;

@implementation CoTouchlabSqueakyFieldTypesBaseDateType

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes {
  CoTouchlabSqueakyFieldTypesBaseDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType {
  CoTouchlabSqueakyFieldTypesBaseDateType_initWithCoTouchlabSqueakyFieldSqlType_(self, sqlType);
  return self;
}

+ (CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)convertDateStringConfigWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                                            withCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)defaultDateFormatConfig {
  return CoTouchlabSqueakyFieldTypesBaseDateType_convertDateStringConfigWithCoTouchlabSqueakyFieldFieldType_withCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(fieldType, defaultDateFormatConfig);
}

+ (JavaUtilDate *)parseDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)formatConfig
                                                                                       withNSString:(NSString *)dateStr {
  return CoTouchlabSqueakyFieldTypesBaseDateType_parseDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_withNSString_(formatConfig, dateStr);
}

+ (NSString *)normalizeDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)formatConfig
                                                                                       withNSString:(NSString *)dateStr {
  return CoTouchlabSqueakyFieldTypesBaseDateType_normalizeDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_withNSString_(formatConfig, dateStr);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig;", 0xc, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0xc, 4, 5, 6, -1, -1, -1 },
    { NULL, "LNSString;", 0xc, 7, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCoTouchlabSqueakyFieldSqlType:withIOSClassArray:);
  methods[1].selector = @selector(initWithCoTouchlabSqueakyFieldSqlType:);
  methods[2].selector = @selector(convertDateStringConfigWithCoTouchlabSqueakyFieldFieldType:withCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:);
  methods[3].selector = @selector(parseDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:withNSString:);
  methods[4].selector = @selector(normalizeDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "defaultDateFormatConfig", "LCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig;", .constantValue.asLong = 0, 0x1c, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabSqueakyFieldSqlType;[LIOSClass;", "LCoTouchlabSqueakyFieldSqlType;", "convertDateStringConfig", "LCoTouchlabSqueakyFieldFieldType;LCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig;", "parseDateString", "LCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig;LNSString;", "LJavaTextParseException;", "normalizeDateString", &CoTouchlabSqueakyFieldTypesBaseDateType_defaultDateFormatConfig, "LCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBaseDateType = { "BaseDateType", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0x401, 5, 1, -1, 9, -1, -1, -1 };
  return &_CoTouchlabSqueakyFieldTypesBaseDateType;
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyFieldTypesBaseDateType class]) {
    JreStrongAssignAndConsume(&CoTouchlabSqueakyFieldTypesBaseDateType_defaultDateFormatConfig, new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(@"yyyy-MM-dd HH:mm:ss.SSSSSS"));
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyFieldTypesBaseDateType)
  }
}

@end

void CoTouchlabSqueakyFieldTypesBaseDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesBaseDateType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesBaseDataType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
}

void CoTouchlabSqueakyFieldTypesBaseDateType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldTypesBaseDateType *self, CoTouchlabSqueakyFieldSqlType *sqlType) {
  CoTouchlabSqueakyFieldTypesBaseDataType_initWithCoTouchlabSqueakyFieldSqlType_(self, sqlType);
}

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *CoTouchlabSqueakyFieldTypesBaseDateType_convertDateStringConfigWithCoTouchlabSqueakyFieldFieldType_withCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldFieldType *fieldType, CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *defaultDateFormatConfig) {
  CoTouchlabSqueakyFieldTypesBaseDateType_initialize();
  if (fieldType == nil) {
    return defaultDateFormatConfig;
  }
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *configObj = (CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *) cast_chk([fieldType getDataTypeConfigObj], [CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig class]);
  if (configObj == nil) {
    return defaultDateFormatConfig;
  }
  else {
    return configObj;
  }
}

JavaUtilDate *CoTouchlabSqueakyFieldTypesBaseDateType_parseDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_withNSString_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *formatConfig, NSString *dateStr) {
  CoTouchlabSqueakyFieldTypesBaseDateType_initialize();
  JavaTextDateFormat *dateFormat = [((CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *) nil_chk(formatConfig)) getDateFormat];
  return [((JavaTextDateFormat *) nil_chk(dateFormat)) parseWithNSString:dateStr];
}

NSString *CoTouchlabSqueakyFieldTypesBaseDateType_normalizeDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_withNSString_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *formatConfig, NSString *dateStr) {
  CoTouchlabSqueakyFieldTypesBaseDateType_initialize();
  JavaTextDateFormat *dateFormat = [((CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *) nil_chk(formatConfig)) getDateFormat];
  JavaUtilDate *date = [((JavaTextDateFormat *) nil_chk(dateFormat)) parseWithNSString:dateStr];
  return [dateFormat formatWithJavaUtilDate:date];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBaseDateType)

@implementation CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig

- (instancetype)initWithNSString:(NSString *)dateFormatStr {
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(self, dateFormatStr);
  return self;
}

- (JavaTextDateFormat *)getDateFormat {
  return [((JavaLangThreadLocal *) nil_chk(threadLocal_)) get];
}

- (NSString *)description {
  return dateFormatStr_;
}

- (void)dealloc {
  RELEASE_(threadLocal_);
  RELEASE_(dateFormatStr_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaTextDateFormat;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getDateFormat);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "threadLocal_", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
    { "dateFormatStr_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "toString", "Ljava/lang/ThreadLocal<Ljava/text/DateFormat;>;", "LCoTouchlabSqueakyFieldTypesBaseDateType;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig = { "DateStringFormatConfig", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0xc, 3, 2, 3, -1, -1, -1, -1 };
  return &_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig;
}

@end

void CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *self, NSString *dateFormatStr) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->threadLocal_, new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(self));
  JreStrongAssign(&self->dateFormatStr_, dateFormatStr);
}

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(NSString *dateFormatStr) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig, initWithNSString_, dateFormatStr)
}

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *create_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(NSString *dateFormatStr) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig, initWithNSString_, dateFormatStr)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig)

@implementation CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1

- (JavaTextDateFormat *)initialValue {
  return create_JavaTextSimpleDateFormat_initWithNSString_(this$0_->dateFormatStr_);
}

- (instancetype)initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)outer$ {
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaTextDateFormat;", 0x4, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initialValue);
  methods[1].selector = @selector(initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/text/DateFormat;", "LCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig;", "Ljava/lang/ThreadLocal<Ljava/text/DateFormat;>;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 = { "", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, -1, 2, -1 };
  return &_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1;
}

@end

void CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *self, CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaLangThreadLocal_init(self);
}

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1, initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_, outer$)
}

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *create_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1, initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_, outer$)
}
