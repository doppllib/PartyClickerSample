//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue")
#ifdef RESTRICT_RxInternalUtilUnsafeSpmcArrayQueue
#define INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue 0
#else
#define INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue 1
#endif
#undef RESTRICT_RxInternalUtilUnsafeSpmcArrayQueue
#ifdef INCLUDE_RxInternalUtilUnsafeSpmcArrayQueue
#define INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueL3Pad 1
#endif
#ifdef INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueL3Pad
#define INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField 1
#endif
#ifdef INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField
#define INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueMidPad 1
#endif
#ifdef INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueMidPad
#define INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueConsumerField 1
#endif
#ifdef INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueConsumerField
#define INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueL2Pad 1
#endif
#ifdef INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueL2Pad
#define INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueProducerField 1
#endif
#ifdef INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueProducerField
#define INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueL1Pad 1
#endif

#if !defined (RxInternalUtilUnsafeSpmcArrayQueueL1Pad_) && (INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue || defined(INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueL1Pad))
#define RxInternalUtilUnsafeSpmcArrayQueueL1Pad_

#define RESTRICT_RxInternalUtilUnsafeConcurrentCircularArrayQueue 1
#define INCLUDE_RxInternalUtilUnsafeConcurrentCircularArrayQueue 1
#include "RxInternalUtilUnsafeConcurrentCircularArrayQueue.h"

@interface RxInternalUtilUnsafeSpmcArrayQueueL1Pad : RxInternalUtilUnsafeConcurrentCircularArrayQueue {
 @public
  jlong p10_;
  jlong p11_;
  jlong p12_;
  jlong p13_;
  jlong p14_;
  jlong p15_;
  jlong p16_;
  jlong p30_SpmcArrayQueueL1Pad_;
  jlong p31_SpmcArrayQueueL1Pad_;
  jlong p32_SpmcArrayQueueL1Pad_;
  jlong p33_SpmcArrayQueueL1Pad_;
  jlong p34_SpmcArrayQueueL1Pad_;
  jlong p35_SpmcArrayQueueL1Pad_;
  jlong p36_SpmcArrayQueueL1Pad_;
  jlong p37_SpmcArrayQueueL1Pad_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeSpmcArrayQueueL1Pad)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpmcArrayQueueL1Pad_initWithInt_(RxInternalUtilUnsafeSpmcArrayQueueL1Pad *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpmcArrayQueueL1Pad)

#endif

#if !defined (RxInternalUtilUnsafeSpmcArrayQueueProducerField_) && (INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue || defined(INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueProducerField))
#define RxInternalUtilUnsafeSpmcArrayQueueProducerField_

@interface RxInternalUtilUnsafeSpmcArrayQueueProducerField : RxInternalUtilUnsafeSpmcArrayQueueL1Pad

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Protected

- (jlong)lvProducerIndex;

- (void)soTailWithLong:(jlong)v;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(RxInternalUtilUnsafeSpmcArrayQueueProducerField)

inline jlong RxInternalUtilUnsafeSpmcArrayQueueProducerField_get_P_INDEX_OFFSET();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jlong RxInternalUtilUnsafeSpmcArrayQueueProducerField_P_INDEX_OFFSET;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(RxInternalUtilUnsafeSpmcArrayQueueProducerField, P_INDEX_OFFSET, jlong)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpmcArrayQueueProducerField_initWithInt_(RxInternalUtilUnsafeSpmcArrayQueueProducerField *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpmcArrayQueueProducerField)

#endif

#if !defined (RxInternalUtilUnsafeSpmcArrayQueueL2Pad_) && (INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue || defined(INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueL2Pad))
#define RxInternalUtilUnsafeSpmcArrayQueueL2Pad_

@interface RxInternalUtilUnsafeSpmcArrayQueueL2Pad : RxInternalUtilUnsafeSpmcArrayQueueProducerField {
 @public
  jlong p20_;
  jlong p21_;
  jlong p22_;
  jlong p23_;
  jlong p24_;
  jlong p25_;
  jlong p26_;
  jlong p30_SpmcArrayQueueL2Pad_;
  jlong p31_SpmcArrayQueueL2Pad_;
  jlong p32_SpmcArrayQueueL2Pad_;
  jlong p33_SpmcArrayQueueL2Pad_;
  jlong p34_SpmcArrayQueueL2Pad_;
  jlong p35_SpmcArrayQueueL2Pad_;
  jlong p36_SpmcArrayQueueL2Pad_;
  jlong p37_SpmcArrayQueueL2Pad_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeSpmcArrayQueueL2Pad)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpmcArrayQueueL2Pad_initWithInt_(RxInternalUtilUnsafeSpmcArrayQueueL2Pad *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpmcArrayQueueL2Pad)

#endif

#if !defined (RxInternalUtilUnsafeSpmcArrayQueueConsumerField_) && (INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue || defined(INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueConsumerField))
#define RxInternalUtilUnsafeSpmcArrayQueueConsumerField_

@interface RxInternalUtilUnsafeSpmcArrayQueueConsumerField : RxInternalUtilUnsafeSpmcArrayQueueL2Pad

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Protected

- (jboolean)casHeadWithLong:(jlong)expect
                   withLong:(jlong)newValue;

- (jlong)lvConsumerIndex;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(RxInternalUtilUnsafeSpmcArrayQueueConsumerField)

inline jlong RxInternalUtilUnsafeSpmcArrayQueueConsumerField_get_C_INDEX_OFFSET();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jlong RxInternalUtilUnsafeSpmcArrayQueueConsumerField_C_INDEX_OFFSET;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(RxInternalUtilUnsafeSpmcArrayQueueConsumerField, C_INDEX_OFFSET, jlong)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpmcArrayQueueConsumerField_initWithInt_(RxInternalUtilUnsafeSpmcArrayQueueConsumerField *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpmcArrayQueueConsumerField)

#endif

#if !defined (RxInternalUtilUnsafeSpmcArrayQueueMidPad_) && (INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue || defined(INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueMidPad))
#define RxInternalUtilUnsafeSpmcArrayQueueMidPad_

@interface RxInternalUtilUnsafeSpmcArrayQueueMidPad : RxInternalUtilUnsafeSpmcArrayQueueConsumerField {
 @public
  jlong p20_SpmcArrayQueueMidPad_;
  jlong p21_SpmcArrayQueueMidPad_;
  jlong p22_SpmcArrayQueueMidPad_;
  jlong p23_SpmcArrayQueueMidPad_;
  jlong p24_SpmcArrayQueueMidPad_;
  jlong p25_SpmcArrayQueueMidPad_;
  jlong p26_SpmcArrayQueueMidPad_;
  jlong p30_SpmcArrayQueueMidPad_;
  jlong p31_SpmcArrayQueueMidPad_;
  jlong p32_SpmcArrayQueueMidPad_;
  jlong p33_SpmcArrayQueueMidPad_;
  jlong p34_SpmcArrayQueueMidPad_;
  jlong p35_SpmcArrayQueueMidPad_;
  jlong p36_SpmcArrayQueueMidPad_;
  jlong p37_SpmcArrayQueueMidPad_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeSpmcArrayQueueMidPad)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpmcArrayQueueMidPad_initWithInt_(RxInternalUtilUnsafeSpmcArrayQueueMidPad *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpmcArrayQueueMidPad)

#endif

#if !defined (RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField_) && (INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue || defined(INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField))
#define RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField_

@interface RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField : RxInternalUtilUnsafeSpmcArrayQueueMidPad

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Protected

- (jlong)lvProducerIndexCache;

- (void)svProducerIndexCacheWithLong:(jlong)v;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField_initWithInt_(RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField)

#endif

#if !defined (RxInternalUtilUnsafeSpmcArrayQueueL3Pad_) && (INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue || defined(INCLUDE_RxInternalUtilUnsafeSpmcArrayQueueL3Pad))
#define RxInternalUtilUnsafeSpmcArrayQueueL3Pad_

@interface RxInternalUtilUnsafeSpmcArrayQueueL3Pad : RxInternalUtilUnsafeSpmcArrayQueueProducerIndexCacheField {
 @public
  jlong p40_;
  jlong p41_;
  jlong p42_;
  jlong p43_;
  jlong p44_;
  jlong p45_;
  jlong p46_;
  jlong p30_SpmcArrayQueueL3Pad_;
  jlong p31_SpmcArrayQueueL3Pad_;
  jlong p32_SpmcArrayQueueL3Pad_;
  jlong p33_SpmcArrayQueueL3Pad_;
  jlong p34_SpmcArrayQueueL3Pad_;
  jlong p35_SpmcArrayQueueL3Pad_;
  jlong p36_SpmcArrayQueueL3Pad_;
  jlong p37_SpmcArrayQueueL3Pad_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeSpmcArrayQueueL3Pad)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpmcArrayQueueL3Pad_initWithInt_(RxInternalUtilUnsafeSpmcArrayQueueL3Pad *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpmcArrayQueueL3Pad)

#endif

#if !defined (RxInternalUtilUnsafeSpmcArrayQueue_) && (INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue || defined(INCLUDE_RxInternalUtilUnsafeSpmcArrayQueue))
#define RxInternalUtilUnsafeSpmcArrayQueue_

@interface RxInternalUtilUnsafeSpmcArrayQueue : RxInternalUtilUnsafeSpmcArrayQueueL3Pad

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

- (jboolean)isEmpty;

- (jboolean)offerWithId:(id)e;

- (id)peek;

- (id)poll;

- (jint)size;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeSpmcArrayQueue)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpmcArrayQueue_initWithInt_(RxInternalUtilUnsafeSpmcArrayQueue *self, jint capacity);

FOUNDATION_EXPORT RxInternalUtilUnsafeSpmcArrayQueue *new_RxInternalUtilUnsafeSpmcArrayQueue_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilUnsafeSpmcArrayQueue *create_RxInternalUtilUnsafeSpmcArrayQueue_initWithInt_(jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpmcArrayQueue)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalUtilUnsafeSpmcArrayQueue")
