//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase")
#ifdef RESTRICT_AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase
#define INCLUDE_ALL_AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase 0
#else
#define INCLUDE_ALL_AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase 1
#endif
#undef RESTRICT_AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase

#if !defined (AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase_) && (INCLUDE_ALL_AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase || defined(INCLUDE_AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase))
#define AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase_

#define RESTRICT_AndroidArchPersistenceDbSupportSQLiteDatabase 1
#define INCLUDE_AndroidArchPersistenceDbSupportSQLiteDatabase 1
#include "AndroidArchPersistenceDbSupportSQLiteDatabase.h"

@class AndroidContentContentValues;
@class AndroidDatabaseSqliteSQLiteDatabase;
@class IOSObjectArray;
@class JavaUtilLocale;
@protocol AndroidArchPersistenceDbSupportSQLiteQuery;
@protocol AndroidArchPersistenceDbSupportSQLiteStatement;
@protocol AndroidDatabaseCursor;
@protocol AndroidDatabaseSqliteSQLiteDatabase_CursorFactory;
@protocol AndroidDatabaseSqliteSQLiteTransactionListener;
@protocol JavaUtilList;

@interface AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase : NSObject < AndroidArchPersistenceDbSupportSQLiteDatabase >

#pragma mark Public

- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)delegate;

- (void)beginTransaction;

- (void)beginTransactionNonExclusive;

- (void)beginTransactionWithListenerWithAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener;

- (void)beginTransactionWithListenerNonExclusiveWithAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener;

- (void)close;

- (id<AndroidArchPersistenceDbSupportSQLiteStatement>)compileStatementWithNSString:(NSString *)sql;

- (jint)delete__WithNSString:(NSString *)table
                withNSString:(NSString *)whereClause
           withNSStringArray:(IOSObjectArray *)whereArgs;

- (void)disableWriteAheadLogging;

- (jboolean)enableWriteAheadLogging;

- (void)endTransaction;

- (void)execSQLWithNSString:(NSString *)sql;

- (void)execSQLWithNSString:(NSString *)sql
          withNSObjectArray:(IOSObjectArray *)bindArgs;

- (id<JavaUtilList>)getAttachedDbs;

- (jlong)getMaximumSize;

- (jlong)getPageSize;

- (NSString *)getPath;

- (jint)getVersion;

- (jlong)insertWithNSString:(NSString *)table
               withNSString:(NSString *)nullColumnHack
withAndroidContentContentValues:(AndroidContentContentValues *)values;

- (jlong)insertOrThrowWithNSString:(NSString *)table
                      withNSString:(NSString *)nullColumnHack
   withAndroidContentContentValues:(AndroidContentContentValues *)values;

- (jlong)insertWithOnConflictWithNSString:(NSString *)table
                             withNSString:(NSString *)nullColumnHack
          withAndroidContentContentValues:(AndroidContentContentValues *)initialValues
                                  withInt:(jint)conflictAlgorithm;

- (jboolean)inTransaction;

- (jboolean)isDatabaseIntegrityOk;

- (jboolean)isDbLockedByCurrentThread;

- (jboolean)isOpen;

- (jboolean)isReadOnly;

- (jboolean)isWriteAheadLoggingEnabled;

- (jboolean)needUpgradeWithInt:(jint)newVersion;

- (id<AndroidDatabaseCursor>)queryWithBoolean:(jboolean)distinct
                                 withNSString:(NSString *)table
                            withNSStringArray:(IOSObjectArray *)columns
                                 withNSString:(NSString *)selection
                            withNSStringArray:(IOSObjectArray *)selectionArgs
                                 withNSString:(NSString *)groupBy
                                 withNSString:(NSString *)having
                                 withNSString:(NSString *)orderBy
                                 withNSString:(NSString *)limit;

- (id<AndroidDatabaseCursor>)queryWithNSString:(NSString *)table
                             withNSStringArray:(IOSObjectArray *)columns
                                  withNSString:(NSString *)selection
                             withNSStringArray:(IOSObjectArray *)selectionArgs
                                  withNSString:(NSString *)groupBy
                                  withNSString:(NSString *)having
                                  withNSString:(NSString *)orderBy;

- (id<AndroidDatabaseCursor>)queryWithNSString:(NSString *)table
                             withNSStringArray:(IOSObjectArray *)columns
                                  withNSString:(NSString *)selection
                             withNSStringArray:(IOSObjectArray *)selectionArgs
                                  withNSString:(NSString *)groupBy
                                  withNSString:(NSString *)having
                                  withNSString:(NSString *)orderBy
                                  withNSString:(NSString *)limit;

- (id<AndroidDatabaseCursor>)queryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)cursorFactory
                                                                                       withBoolean:(jboolean)distinct
                                                                                      withNSString:(NSString *)table
                                                                                 withNSStringArray:(IOSObjectArray *)columns
                                                                                      withNSString:(NSString *)selection
                                                                                 withNSStringArray:(IOSObjectArray *)selectionArgs
                                                                                      withNSString:(NSString *)groupBy
                                                                                      withNSString:(NSString *)having
                                                                                      withNSString:(NSString *)orderBy
                                                                                      withNSString:(NSString *)limit;

- (id<AndroidDatabaseCursor>)rawQueryWithNSString:(NSString *)sql
                                withNSStringArray:(IOSObjectArray *)selectionArgs;

- (id<AndroidDatabaseCursor>)rawQueryWithAndroidArchPersistenceDbSupportSQLiteQuery:(id<AndroidArchPersistenceDbSupportSQLiteQuery>)supportQuery;

- (id<AndroidDatabaseCursor>)rawQueryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)cursorFactory
                                                                                         withNSString:(NSString *)sql
                                                                                    withNSStringArray:(IOSObjectArray *)selectionArgs
                                                                                         withNSString:(NSString *)editTable;

- (jlong)replaceWithNSString:(NSString *)table
                withNSString:(NSString *)nullColumnHack
withAndroidContentContentValues:(AndroidContentContentValues *)initialValues;

- (jlong)replaceOrThrowWithNSString:(NSString *)table
                       withNSString:(NSString *)nullColumnHack
    withAndroidContentContentValues:(AndroidContentContentValues *)initialValues;

- (void)setForeignKeyConstraintsEnabledWithBoolean:(jboolean)enable;

- (void)setLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (jlong)setMaximumSizeWithLong:(jlong)numBytes;

- (void)setMaxSqlCacheSizeWithInt:(jint)cacheSize;

- (void)setPageSizeWithLong:(jlong)numBytes;

- (void)setTransactionSuccessful;

- (void)setVersionWithInt:(jint)version_;

- (jint)updateWithNSString:(NSString *)table
withAndroidContentContentValues:(AndroidContentContentValues *)values
              withNSString:(NSString *)whereClause
         withNSStringArray:(IOSObjectArray *)whereArgs;

- (jint)updateWithOnConflictWithNSString:(NSString *)table
         withAndroidContentContentValues:(AndroidContentContentValues *)values
                            withNSString:(NSString *)whereClause
                       withNSStringArray:(IOSObjectArray *)whereArgs
                                 withInt:(jint)conflictAlgorithm;

- (jboolean)yieldIfContendedSafely;

- (jboolean)yieldIfContendedSafelyWithLong:(jlong)sleepAfterYieldDelay;

@end

J2OBJC_STATIC_INIT(AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase)

FOUNDATION_EXPORT void AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase *self, AndroidDatabaseSqliteSQLiteDatabase *delegate);

FOUNDATION_EXPORT AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase *new_AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *delegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase *create_AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *delegate);

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidArchPersistenceDbFrameworkFrameworkSQLiteDatabase")
