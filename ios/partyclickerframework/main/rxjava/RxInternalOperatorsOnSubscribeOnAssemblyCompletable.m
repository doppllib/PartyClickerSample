//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RxCompletable.h"
#include "RxCompletableSubscriber.h"
#include "RxExceptionsAssemblyStackTraceException.h"
#include "RxInternalOperatorsOnSubscribeOnAssembly.h"
#include "RxInternalOperatorsOnSubscribeOnAssemblyCompletable.h"
#include "RxSubscription.h"

volatile_jboolean RxInternalOperatorsOnSubscribeOnAssemblyCompletable_fullStackTrace;

@implementation RxInternalOperatorsOnSubscribeOnAssemblyCompletable

- (instancetype)initWithRxCompletable_OnSubscribe:(id<RxCompletable_OnSubscribe>)source {
  RxInternalOperatorsOnSubscribeOnAssemblyCompletable_initWithRxCompletable_OnSubscribe_(self, source);
  return self;
}

- (void)callWithId:(id<RxCompletableSubscriber>)t {
  [((id<RxCompletable_OnSubscribe>) nil_chk(source_)) callWithId:create_RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber_initWithRxCompletableSubscriber_withNSString_(t, stacktrace_)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(stacktrace_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxCompletable_OnSubscribe:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxCompletable_OnSubscribe;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "stacktrace_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "fullStackTrace", "Z", .constantValue.asLong = 0, 0x49, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_OnSubscribe;", "call", "LRxCompletableSubscriber;", &RxInternalOperatorsOnSubscribeOnAssemblyCompletable_fullStackTrace, "LRxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Completable$OnSubscribe;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeOnAssemblyCompletable = { "OnSubscribeOnAssemblyCompletable", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 3, -1, 4, -1, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeOnAssemblyCompletable;
}

@end

void RxInternalOperatorsOnSubscribeOnAssemblyCompletable_initWithRxCompletable_OnSubscribe_(RxInternalOperatorsOnSubscribeOnAssemblyCompletable *self, id<RxCompletable_OnSubscribe> source) {
  NSObject_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->stacktrace_, RxInternalOperatorsOnSubscribeOnAssembly_createStacktrace());
}

RxInternalOperatorsOnSubscribeOnAssemblyCompletable *new_RxInternalOperatorsOnSubscribeOnAssemblyCompletable_initWithRxCompletable_OnSubscribe_(id<RxCompletable_OnSubscribe> source) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeOnAssemblyCompletable, initWithRxCompletable_OnSubscribe_, source)
}

RxInternalOperatorsOnSubscribeOnAssemblyCompletable *create_RxInternalOperatorsOnSubscribeOnAssemblyCompletable_initWithRxCompletable_OnSubscribe_(id<RxCompletable_OnSubscribe> source) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeOnAssemblyCompletable, initWithRxCompletable_OnSubscribe_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeOnAssemblyCompletable)

@implementation RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber

- (instancetype)initWithRxCompletableSubscriber:(id<RxCompletableSubscriber>)actual
                                   withNSString:(NSString *)stacktrace {
  RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber_initWithRxCompletableSubscriber_withNSString_(self, actual, stacktrace);
  return self;
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((id<RxCompletableSubscriber>) nil_chk(actual_)) onSubscribeWithRxSubscription:d];
}

- (void)onCompleted {
  [((id<RxCompletableSubscriber>) nil_chk(actual_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [create_RxExceptionsAssemblyStackTraceException_initWithNSString_(stacktrace_) attachToWithNSException:e];
  [((id<RxCompletableSubscriber>) nil_chk(actual_)) onErrorWithNSException:e];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(stacktrace_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxCompletableSubscriber:withNSString:);
  methods[1].selector = @selector(onSubscribeWithRxSubscription:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(onErrorWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LRxCompletableSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "stacktrace_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletableSubscriber;LNSString;", "onSubscribe", "LRxSubscription;", "onError", "LNSException;", "LRxInternalOperatorsOnSubscribeOnAssemblyCompletable;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber = { "OnAssemblyCompletableSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 4, 2, 5, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber;
}

@end

void RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber_initWithRxCompletableSubscriber_withNSString_(RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber *self, id<RxCompletableSubscriber> actual, NSString *stacktrace) {
  NSObject_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->stacktrace_, stacktrace);
}

RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber *new_RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber_initWithRxCompletableSubscriber_withNSString_(id<RxCompletableSubscriber> actual, NSString *stacktrace) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber, initWithRxCompletableSubscriber_withNSString_, actual, stacktrace)
}

RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber *create_RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber_initWithRxCompletableSubscriber_withNSString_(id<RxCompletableSubscriber> actual, NSString *stacktrace) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber, initWithRxCompletableSubscriber_withNSString_, actual, stacktrace)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeOnAssemblyCompletable_OnAssemblyCompletableSubscriber)
